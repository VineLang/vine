
type u64 = (u32, u32);

fn from_u32(val: u32) -> u64 {
  (val, 0)
}

fn to_u32((lo, hi): u64) -> u32 {
  lo
}

inline_ivy! add: fn(u64, u64) -> u64 {
  fn(tup(dup(al0 al1) ah) fn(tup(dup(bl0 bl1) bh) tup(l h)))
  al0 = @add(bl0 l)
  al1 = @u32_add_high(bl1 c)
  ah = @add(bh @add(c h))
}

inline_ivy! mul: fn(u64, u64) -> u64 {
  fn(tup(dup(al0 dup(al1 al2)) ah) fn(tup(dup(bl0 dup(bl1 bl2)) bh) tup(l h)))
  al0 = @mul(bl0 l)
  al1 = @u32_mul_high(bl1 ll)
  al2 = @mul(bh lh)
  bl2 = @mul(ah hl)
  lh = @add(hl @add(ll h))
}
