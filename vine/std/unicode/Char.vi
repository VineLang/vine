
use ops::Ord;

#[builtin = "Char"]
pub mod Char {
  pub fn from_n32(n: N32) -> Char {
    inline_ivy! (n <- n) -> Char { n }
  }

  pub fn .as_n32(c: Char) -> N32 {
    inline_ivy! (c <- c) -> N32 { c }
  }

  pub impl ord: Ord[Char] {
    fn .cmp(&a: &Char, &b: &Char) -> Ord {
      if a < b {
        Ord::Lt
      } else if a > b {
        Ord::Gt
      } else {
        Ord::Eq
      }
    }
  }

  pub fn .is_whitespace(char: Char) -> Bool {
    (char == ' ') | (char == '\t') | (char == '\n')
  }

  pub fn .is_alphanumeric(char: Char) -> Bool {
    ('a' <= char <= 'z') | ('A' <= char <= 'Z') | ('0' <= char <= '9')
  }

  pub impl to_string: ToString[Char] {
    fn .to_string(self: Char) -> String {
      String({ chars: [self] })
    }
  }
}
