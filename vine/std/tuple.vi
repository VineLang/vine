
use data::Map::{Cmp, Ord};
use unicode::ToString;

pub type Pair[A, B] = (A, B);

#[builtin = "Pair"]
pub mod Pair {
  pub fn cmp[A, B](f: Cmp[A], g: Cmp[B]) -> Cmp[(A, B)] {
    (
      fn(&(a0: A, b0: B), &(a1: A, b1: B)) {
        match f(&a0, &a1) {
          Ord::Lt { Ord::Lt }
          Ord::Gt { Ord::Gt }
          Ord::Eq { g(&b0, &b1) }
        }
      }
    )
  }

  pub impl to_string[A, B; ToString[A], ToString[B]]: ToString[Pair[A, B]] {
    fn .to_string((a: A, b: B)) -> String {
      "(" ++ ToString::to_string[A](a) ++ ", " ++ ToString::to_string[B](b) ++ ")"
    }
  }
}
