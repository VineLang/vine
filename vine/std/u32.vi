
use std::option::Option::{Some, None};

fn to_string(n) {
  if n {
    let str = "";
    while n {
      let (len, buf) = str;
      str = (len + 1, fn(x) ('0' + n % 10, buf(x)));
      n = n / 10;
    }
    str
  } else {
    "0"
  }
}

fn parse(str) {
  let (len, buf) = str;
  if len == 0 {
    None
  } else {
    let chars = buf(_);
    let num = 0;
    while len {
      let char;
      (char, chars) = chars;
      if ('0' <= char <= '9') != 1 {
        return None;
      }
      num *= 10;
      num += char - '0';
      len -= 1;
    }
    Some(num)
  }
}

inline_ivy! rotate_left {
  fn(@u32_rotl(x y) fn(x y))
}

inline_ivy! rotate_right {
  fn(@u32_rotr(x y) fn(x y))
}
