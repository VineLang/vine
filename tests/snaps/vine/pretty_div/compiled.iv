
::main { ::pretty_div::main }

::pretty_div { fn(dup1(n1 n2) fn(dup2(?(::pretty_div::2 ::pretty_div::1 x(n2 x(n3 x(n0 n1)))) n3) n0)) }

::pretty_div::1 {
  x(n0 x(dup2(n3 n4) x(n1 n2)))
  ::pretty_div::4 = x(n0 x(n4 x(n1 x(n3 n2))))
}

::pretty_div::2 { x(_ x(_ x(tup(19 tup(tup(100 tup(105 tup(118 tup(105 tup(115 tup(105 tup(111 tup(110 tup(32 tup(98 tup(121 tup(32 tup(122 tup(101 tup(114 tup(111 tup(32 tup(58 tup(79 n0))))))))))))))))))) n0)) _))) }

::pretty_div::4 {
  x(n11 x(n12 x(n13 x(n14 @div(n14 n8)))))
  ::std::n32::N32::to_string = fn(n11 n1)
  ::std::list::List::concat = fn(tup(3 tup(tup(124 tup(95 tup(32 n0))) n0)) fn(n1 n3))
  ::std::list::List::concat = fn(n3 fn(tup(3 tup(tup(32 tup(47 tup(32 n2))) n2)) n4))
  ::std::n32::N32::to_string = fn(n12 n5)
  ::std::list::List::concat = fn(n4 fn(n5 n7))
  ::std::list::List::concat = fn(n7 fn(tup(6 tup(tup(32 tup(95 tup(124 tup(32 tup(61 tup(32 n6)))))) n6)) n9))
  ::std::n32::N32::to_string = fn(n8 n10)
  ::std::list::List::concat = fn(n9 fn(n10 n13))
}

::pretty_div::main {
  fn(ref(n0 n9) _)
  ::std::io::IO::println = fn(ref(n0 n2) fn(n1 _))
  ::pretty_div = fn(4 fn(2 n1))
  ::std::io::IO::println = fn(ref(n2 n4) fn(n3 _))
  ::pretty_div = fn(5 fn(3 n3))
  ::std::io::IO::println = fn(ref(n4 n6) fn(n5 _))
  ::pretty_div = fn(1 fn(1 n5))
  ::std::io::IO::println = fn(ref(n6 n8) fn(n7 _))
  ::pretty_div = fn(1 fn(0 n7))
  ::std::io::IO::println = fn(ref(n8 n9) fn(n10 _))
  ::pretty_div = fn(10 fn(3 n10))
}

::std::io::IO::println {
  fn(ref(n0 n3) fn(n1 _))
  ::std::io::IO::print = fn(ref(n0 n2) fn(n1 _))
  ::std::io::IO::print_char = fn(ref(n2 n3) fn(10 _))
}

::std::io::IO::print {
  fn(ref(n0 n1) fn(tup(n2 tup(n3 _)) _))
  ::std::io::IO::print::1 = x(n0 x(n1 x(n2 n3)))
}

::std::io::IO::print::1 { x(n0 x(n1 x(dup213(?(::std::io::IO::print::3 ::std::io::IO::print::2 x(n0 x(n1 x(n3 n2)))) n3) n2))) }

::std::io::IO::print::2 {
  x(n1 x(n3 x(@sub(1 n4) tup(n0 n5))))
  ::std::io::IO::print_char = fn(ref(n1 n2) fn(n0 _))
  ::std::io::IO::print::1 = x(n2 x(n3 x(n4 n5)))
}

::std::io::IO::print::3 { x(n0 x(n0 _)) }

::std::io::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::list::List::concat { fn(tup(@add(n1 n2) tup(n3 n0)) fn(tup(n1 tup(n0 n4)) tup(n2 tup(n3 n4)))) }

::std::n32::N32::to_string { fn(dup826(?(::std::n32::N32::to_string::5 ::std::n32::N32::to_string::1 x(n1 n0)) n1) n0) }

::std::n32::N32::to_string::1 {
  x(n1 n2)
  ::std::n32::N32::to_string::2 = x(n1 x(tup(0 tup(n0 n0)) n2))
}

::std::n32::N32::to_string::2 { x(dup826(?(::std::n32::N32::to_string::4 ::std::n32::N32::to_string::3 x(n2 n0)) n2) n0) }

::std::n32::N32::to_string::3 {
  x(dup826(@rem(10 n0) @div(10 n4)) x(n3 n6))
  48 = @add(n0 n1)
  ::std::list::List::concat = fn(tup(1 tup(tup(n1 n2) n2)) fn(n3 n5))
  ::std::n32::N32::to_string::2 = x(n4 x(n5 n6))
}

::std::n32::N32::to_string::4 { x(_ x(n0 n0)) }

::std::n32::N32::to_string::5 { x(_ tup(1 tup(tup(48 n0) n0))) }

