
::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::main { ::find_primes::main }

::find_primes::main {
  fn(ref(w1 w11) w8)
  ::find_primes::main::1 = x(x(w1 w11) x(1 w8))
}

::find_primes::main::1 {
  x(w12 x(@add(1 w1) w13))
  ::find_primes::main::2 = x(w12 x(w1 x(2 w13)))
}

::find_primes::main::2 { x(w9 x(dup16(w3 w12) x(dup17(@mul(w1 @le(w3 ?(::find_primes::main::4 ::find_primes::main::3 x(w9 x(w12 x(w11 w10)))))) dup17(w1 w11)) w10))) }

::find_primes::main::3 { x(w8 x(w6 x(dup22(@le$(100 ?(::find_primes::main::7 ::find_primes::main::6 x(w8 x(w6 x(w12 w11))))) w12) w11))) }

::find_primes::main::4 {
  x(x(w4 w17) x(dup27(w11 w15) x(_ w14)))
  ::std::numeric::N32::to_string::to_string = fn(w11 w12)
  ::std::IO::println = fn(ref(w4 w9) fn(w12 _))
  ::find_primes::main::1 = x(x(w9 w17) x(w15 w14))
}

::find_primes::main::6 { x(x(w4 w4) _) }

::find_primes::main::7 { x(w4 x(dup33(@rem(w10 ?(::find_primes::main::10 ::find_primes::main::9 x(w4 x(w14 x(w13 w12))))) w14) x(dup34(w10 w13) w12))) }

::find_primes::main::9 {
  x(w4 x(w2 x(@add(1 w8) w9)))
  ::find_primes::main::2 = x(w4 x(w2 x(w8 w9)))
}

::find_primes::main::10 {
  x(w4 x(w2 x(_ w5)))
  ::find_primes::main::1 = x(w4 x(w2 w5))
}

::std::numeric::N32::to_string::to_string { fn(dup46(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup55(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup55(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup58(@rem(10 @add$(48 n0)) @div(10 dup55(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2220(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2220(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2220(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2220(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

