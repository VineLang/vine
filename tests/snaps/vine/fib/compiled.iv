
::main { ::fib::main }

::fib::main {
  fn(ref(n0 n1) _)
  ::fib::main::1 = x(n0 x(n1 x(0 x(0 1))))
}

::fib::main::1 { x(n0 x(n1 x(dup3(@le(32 ?(::fib::main::3 ::fib::main::2 x(n0 x(n1 x(n4 n2))))) n4) n2))) }

::fib::main::2 {
  x(n8 x(n14 x(dup3(n12 @add(1 n15)) x(dup4(n9 @add(n11 n7)) dup5(n10 n11)))))
  ::std::io::IO::println = fn(ref(n8 n13) fn(n6 _))
  ::std::n32::N32::to_string = fn(n12 n1)
  ::std::list::List::concat = fn(tup(4 tup(tup(102 tup(105 tup(98 tup(40 n0)))) n0)) fn(n1 n3))
  ::std::list::List::concat = fn(n3 fn(tup(4 tup(tup(41 tup(32 tup(61 tup(32 n2)))) n2)) n4))
  ::std::n32::N32::to_string = fn(n9 n5)
  ::std::list::List::concat = fn(n4 fn(n5 n6))
  tup(n10 n7) = tup(n16 n17)
  ::fib::main::1 = x(n13 x(n14 x(n15 x(n16 n17))))
}

::fib::main::3 { x(n0 x(n0 _)) }

::std::io::IO::println {
  fn(ref(n0 n3) fn(n1 _))
  ::std::io::IO::print = fn(ref(n0 n2) fn(n1 _))
  ::std::io::IO::print_char = fn(ref(n2 n3) fn(10 _))
}

::std::io::IO::print {
  fn(ref(n0 n1) fn(tup(n2 tup(n3 _)) _))
  ::std::io::IO::print::1 = x(n0 x(n1 x(n2 n3)))
}

::std::io::IO::print::1 { x(n0 x(n1 x(dup138(?(::std::io::IO::print::3 ::std::io::IO::print::2 x(n0 x(n1 x(n3 n2)))) n3) n2))) }

::std::io::IO::print::2 {
  x(n1 x(n3 x(@sub(1 n4) tup(n0 n5))))
  ::std::io::IO::print_char = fn(ref(n1 n2) fn(n0 _))
  ::std::io::IO::print::1 = x(n2 x(n3 x(n4 n5)))
}

::std::io::IO::print::3 { x(n0 x(n0 _)) }

::std::io::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::list::List { fn(n0 fn(n1 fn(n2 tup(n0 tup(n1 n2))))) }

::std::list::List::concat {
  fn(tup(@add(n1 n2) tup(n3 n0)) fn(tup(n1 tup(n0 n4)) n5))
  ::std::list::List = fn(n2 fn(n3 fn(n4 n5)))
}

::std::n32::N32::to_string { fn(dup640(?(::std::n32::N32::to_string::5 ::std::n32::N32::to_string::1 x(n1 n0)) n1) n0) }

::std::n32::N32::to_string::1 {
  x(n1 n2)
  ::std::n32::N32::to_string::2 = x(n1 x(tup(0 tup(n0 n0)) n2))
}

::std::n32::N32::to_string::2 { x(dup640(?(::std::n32::N32::to_string::4 ::std::n32::N32::to_string::3 x(n2 n0)) n2) n0) }

::std::n32::N32::to_string::3 {
  x(dup640(@rem(10 n0) @div(10 n4)) x(n3 n6))
  48 = @add(n0 n1)
  ::std::list::List::concat = fn(tup(1 tup(tup(n1 n2) n2)) fn(n3 n5))
  ::std::n32::N32::to_string::2 = x(n4 x(n5 n6))
}

::std::n32::N32::to_string::4 { x(_ x(n0 n0)) }

::std::n32::N32::to_string::5 { x(_ tup(1 tup(tup(48 n0) n0))) }

