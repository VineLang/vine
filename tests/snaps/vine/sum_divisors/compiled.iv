
::main { ::sum_divisors::main }

::sum_divisors {
  fn(n0 n2)
  ::sum_divisors::1 = x(n0 x(dup1(@ne(1 ?(::sum_divisors::12 ::sum_divisors::11 x(n3 x(n1 n2)))) n3) x(1 x(n1 2))))
}

::sum_divisors::1 { x(dup1(n0 n1) x(n2 x(n3 x(n4 dup3(@mul(n5 @le(n0 ?(::sum_divisors::10 ::sum_divisors::2 x(n1 x(n2 x(n3 x(n4 n6))))))) dup3(n5 n6)))))) }

::sum_divisors::2 { x(dup1(@rem(n4 ?(::sum_divisors::6 ::sum_divisors::3 x(n0 x(n1 x(n2 x(n3 n5)))))) n0) x(n1 x(n2 x(n3 dup3(n4 n5))))) }

::sum_divisors::3 {
  x(n0 x(n1 x(n2 x(n3 @add(1 n4)))))
  ::sum_divisors::1 = x(n0 x(n1 x(n2 x(n3 n4))))
}

::sum_divisors::6 {
  x(n2 x(n6 x(@mul(n1 n7) x(n8 dup3(n3 dup3(n4 dup3(@sub(1 n0) @add(1 n9))))))))
  ::sum_divisors::7 = x(n2 x(n5 x(n4 x(n3 @sub(1 @div(n0 n1))))))
  ::sum_divisors::1 = x(n5 x(n6 x(n7 x(n8 n9))))
}

::sum_divisors::7 { x(dup1(@rem(n4 ?(::sum_divisors::9 ::sum_divisors::8 x(n0 x(n1 x(n5 n2))))) n0) x(n1 x(dup3(n4 n5) n2))) }

::sum_divisors::8 { x(n0 x(n0 x(_ x(n1 n1)))) }

::sum_divisors::9 {
  x(@div(n5 n0) x(n1 x(dup3(n4 dup3(n5 n6)) x(@mul(n4 n2) n3))))
  ::sum_divisors::7 = x(n0 x(n1 x(n6 x(n2 n3))))
}

::sum_divisors::10 { x(n0 x(n0 x(n1 x(n1 _)))) }

::sum_divisors::11 { x(@add(1 n0) x(@mul(n0 n1) n1)) }

::sum_divisors::12 { x(_ x(n0 n0)) }

::sum_divisors::main {
  fn(ref(n0 n1) _)
  ::sum_divisors::main::1 = x(n0 x(n1 1))
}

::sum_divisors::main::1 { x(n0 x(n1 dup13(@le(100 ?(::sum_divisors::main::7 ::sum_divisors::main::2 x(n0 x(n1 n2)))) n2))) }

::sum_divisors::main::2 {
  x(n7 x(n13 dup13(n9 dup13(@add(1 n0) dup13(n10 dup13(n11 @add(1 n14)))))))
  ::sum_divisors = fn(n9 dup14(@eq(n0 ?(::sum_divisors::main::4 ::sum_divisors::main::3 x(n10 x(n15 n8)))) dup14(n15 n16)))
  ::std::io::IO::println = fn(ref(n7 n12) fn(n6 _))
  ::std::n32::N32::to_string = fn(n11 n2)
  ::std::list::List::concat = fn(n2 fn(tup(2 tup(tup(58 tup(32 n1)) n1)) n3))
  ::std::n32::N32::to_string = fn(n16 n4)
  ::std::list::List::concat = fn(n3 fn(n4 n5))
  ::std::list::List::concat = fn(n5 fn(n8 n6))
  ::sum_divisors::main::1 = x(n12 x(n13 n14))
}

::sum_divisors::main::3 { x(_ x(_ tup(8 tup(tup(32 tup(40 tup(112 tup(114 tup(105 tup(109 tup(101 tup(41 n0)))))))) n0)))) }

::sum_divisors::main::4 { x(@mul(2 n0) x(@eq(n0 ?(::sum_divisors::main::6 ::sum_divisors::main::5 n1)) n1)) }

::sum_divisors::main::5 { tup(11 tup(tup(32 tup(40 tup(112 tup(101 tup(114 tup(102 tup(101 tup(99 tup(116 tup(33 tup(41 n0))))))))))) n0)) }

::sum_divisors::main::6 { tup(0 tup(n0 n0)) }

::sum_divisors::main::7 { x(n0 x(n0 _)) }

::std::io::IO::println {
  fn(ref(n0 n3) fn(n1 _))
  ::std::io::IO::print = fn(ref(n0 n2) fn(n1 _))
  ::std::io::IO::print_char = fn(ref(n2 n3) fn(10 _))
}

::std::io::IO::print {
  fn(ref(n0 n1) fn(tup(n2 tup(n3 _)) _))
  ::std::io::IO::print::1 = x(n0 x(n1 x(n2 n3)))
}

::std::io::IO::print::1 { x(n0 x(n1 x(dup223(?(::std::io::IO::print::3 ::std::io::IO::print::2 x(n0 x(n1 x(n3 n2)))) n3) n2))) }

::std::io::IO::print::2 {
  x(n1 x(n3 x(@sub(1 n4) tup(n0 n5))))
  ::std::io::IO::print_char = fn(ref(n1 n2) fn(n0 _))
  ::std::io::IO::print::1 = x(n2 x(n3 x(n4 n5)))
}

::std::io::IO::print::3 { x(n0 x(n0 _)) }

::std::io::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::list::List::concat { fn(tup(@add(n1 n2) tup(n3 n0)) fn(tup(n1 tup(n0 n4)) tup(n2 tup(n3 n4)))) }

::std::n32::N32::to_string { fn(dup836(?(::std::n32::N32::to_string::5 ::std::n32::N32::to_string::1 x(n1 n0)) n1) n0) }

::std::n32::N32::to_string::1 {
  x(n1 n2)
  ::std::n32::N32::to_string::2 = x(n1 x(tup(0 tup(n0 n0)) n2))
}

::std::n32::N32::to_string::2 { x(dup836(?(::std::n32::N32::to_string::4 ::std::n32::N32::to_string::3 x(n2 n0)) n2) n0) }

::std::n32::N32::to_string::3 {
  x(dup836(@rem(10 n0) @div(10 n4)) x(n3 n6))
  48 = @add(n0 n1)
  ::std::list::List::concat = fn(tup(1 tup(tup(n1 n2) n2)) fn(n3 n5))
  ::std::n32::N32::to_string::2 = x(n4 x(n5 n6))
}

::std::n32::N32::to_string::4 { x(_ x(n0 n0)) }

::std::n32::N32::to_string::5 { x(_ tup(1 tup(tup(48 n0) n0))) }

