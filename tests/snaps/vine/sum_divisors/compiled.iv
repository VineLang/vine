
::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::main { ::sum_divisors::main }

::sum_divisors::main {
  fn(ref(w1 w9) _)
  ::sum_divisors::main::1 = x(x(w1 w9) 1)
}

::sum_divisors::main::1 { x(w4 dup9(@le(100 ?(::sum_divisors::main::3 ::sum_divisors::main::2 x(w4 w5))) w5)) }

::sum_divisors::main::2 {
  x(x(w20 w39) dup13(w0 dup13(@add(1 w23) dup13(w27 dup13(w9 @add(1 w17))))))
  ::sum_divisors = fn(w0 dup15(@eq(w23 ?(::sum_divisors::main::6 ::sum_divisors::main::5 x(w27 x(w26 w25)))) dup15(w26 w11)))
  ::std::numeric::N32::to_string::to_string = fn(w9 tup(@add(2 w31) tup(w29 tup(58 tup(32 w32)))))
  ::std::numeric::N32::to_string::to_string = fn(w11 tup(@add(w31 w33) tup(w32 w34)))
  ::std::unicode::String::to_string::to_string = fn(w25 tup(@add(w33 w28) tup(w34 w30)))
  ::std::IO::println = fn(ref(w20 w6) fn(tup(w28 tup(w29 w30)) _))
  ::sum_divisors::main::1 = x(x(w6 w39) w17)
}

::sum_divisors::main::3 { x(x(w2 w2) _) }

::sum_divisors::main::5 { x(_ x(_ tup(8 tup(tup(32 tup(40 tup(112 tup(114 tup(105 tup(109 tup(101 tup(41 w6)))))))) w6)))) }

::sum_divisors::main::6 { x(@mul(2 w2) x(@eq(w2 ?(::sum_divisors::main::8 ::sum_divisors::main::7 w7)) w7)) }

::sum_divisors::main::7 { tup(11 tup(tup(32 tup(40 tup(112 tup(101 tup(114 tup(102 tup(101 tup(99 tup(116 tup(33 tup(41 w4))))))))))) w4)) }

::sum_divisors::main::8 { tup(0 tup(w4 w4)) }

::std::numeric::N32::to_string::to_string { fn(dup25(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6)) w7) w6) }

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w9)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N32::to_string::to_string::4 { x(dup34(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2)) w6) w2) }

::std::numeric::N32::to_string::to_string::5 {
  x(dup37(@rem(10 w1) @div(10 w8)) x(w11 w15))
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::unicode::String::to_string::to_string { fn(w0 w0) }

::sum_divisors {
  fn(w0 w17)
  ::sum_divisors::1 = x(x(w0 dup47(@ne(1 ?(::sum_divisors::12 ::sum_divisors::11 x(w18 x(x(w10 w17) _)))) w18)) x(x(1 w10) 2))
}

::sum_divisors::1 { x(x(dup56(w3 w13) w14) x(w7 dup59(@mul(w1 @le(w3 ?(::sum_divisors::3 ::sum_divisors::2 x(x(w13 w14) x(w7 w10))))) dup59(w1 w10)))) }

::sum_divisors::2 { x(x(dup61(@rem(w18 ?(::sum_divisors::6 ::sum_divisors::5 x(x(w23 w24) x(w14 w20)))) w23) w24) x(w14 dup64(w18 w20))) }

::sum_divisors::3 { x(x(w4 w4) x(x(w2 w2) _)) }

::sum_divisors::5 {
  x(w6 x(w4 @add(1 w1)))
  ::sum_divisors::1 = x(w6 x(w4 w1))
}

::sum_divisors::6 {
  x(x(w4 w26) x(x(@mul(w12 w14) w24) dup79(w6 dup79(w19 dup79(@sub(1 w11) @add(1 w16))))))
  ::sum_divisors::7 = x(x(w4 w21) x(w19 x(w6 @sub(1 @div(w11 w12)))))
  ::sum_divisors::1 = x(x(w21 w26) x(x(w14 w24) w16))
}

::sum_divisors::7 { x(x(dup84(@rem(w1 ?(::sum_divisors::9 ::sum_divisors::8 x(x(w11 w12) x(w10 w4)))) w11) w12) x(dup85(w1 w10) w4)) }

::sum_divisors::8 { x(x(w4 w4) x(_ x(w1 w1))) }

::sum_divisors::9 {
  x(x(@div(w3 w5) w15) x(dup93(w0 dup93(w3 w13)) x(@mul(w0 w2) w12)))
  ::sum_divisors::7 = x(x(w5 w15) x(w13 x(w2 w12)))
}

::sum_divisors::11 { x(@add(1 w1) x(x(@mul(w1 w3) w3) _)) }

::sum_divisors::12 { x(_ x(x(w2 w2) _)) }

::std::data::List::concat { fn(tup(@add(w10 w18) tup(w6 w11)) fn(tup(w10 tup(w11 w21)) tup(w18 tup(w6 w21)))) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(tup(w7 tup(w8 _)) _))
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 { x(w4 x(dup2255(?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1))) w6) w1)) }

::std::IO::print::2 {
  x(x(w17 w21) x(@sub(1 w1) tup(w4 w5)))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

