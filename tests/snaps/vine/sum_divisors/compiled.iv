
::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::main { ::sum_divisors::main }

::sum_divisors::main {
  fn(ref(w1 w9) _)
  ::sum_divisors::main::1 = x(x(w1 w9) 1)
}

::sum_divisors::main::1 {
  x(w4 dup9(w0 w5))
  w0 = @le(100 w1)
  w1 = ?(::sum_divisors::main::3 ::sum_divisors::main::2 x(w4 w5))
}

::sum_divisors::main::2 {
  x(x(w20 w39) dup13(w0 dup13(w22 dup13(w27 dup13(w9 w16)))))
  ::sum_divisors = fn(w0 w1)
  dup15(w21 dup15(w26 w11)) = w1
  w22 = @add(1 w23)
  w21 = @eq(w23 w24)
  w24 = ?(::sum_divisors::main::6 ::sum_divisors::main::5 x(w27 x(w26 w25)))
  ::std::numeric::N32::to_string::to_string = fn(w9 w10)
  ::std::numeric::N32::to_string::to_string = fn(w11 w12)
  ::std::unicode::String::to_string::to_string = fn(w25 w14)
  w10 = tup(@add(2 w31) tup(w29 tup(58 tup(32 w32))))
  w12 = tup(@add(w31 w33) tup(w32 w34))
  w14 = tup(@add(w33 w35) tup(w34 w36))
  ::std::IO::println = fn(ref(w20 w6) fn(tup(w35 tup(w29 w36)) _))
  w16 = @add(1 w17)
  ::sum_divisors::main::1 = x(x(w6 w39) w17)
}

::sum_divisors::main::3 { x(x(w2 w2) _) }

::sum_divisors::main::5 {
  x(_ x(_ w0))
  w0 = tup(w4 tup(tup(32 tup(40 tup(112 tup(114 tup(105 tup(109 tup(101 tup(41 w5)))))))) w6))
  8 = w4
  w5 = w6
}

::sum_divisors::main::6 {
  x(w6 x(w5 w7))
  w6 = @mul(2 w2)
  w5 = @eq(w2 w3)
  w3 = ?(::sum_divisors::main::8 ::sum_divisors::main::7 w7)
}

::sum_divisors::main::7 {
  tup(w2 tup(tup(32 tup(40 tup(112 tup(101 tup(114 tup(102 tup(101 tup(99 tup(116 tup(33 tup(41 w3))))))))))) w4))
  11 = w2
  w3 = w4
}

::sum_divisors::main::8 {
  tup(w2 tup(w3 w4))
  0 = w2
  w3 = w4
}

::std::numeric::N32::to_string::to_string {
  fn(dup25(w5 w7) w6)
  w5 = ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w4)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
  w4 = w9
}

::std::numeric::N32::to_string::to_string::3 {
  x(_ w0)
  w0 = tup(w3 tup(tup(48 w4) w5))
  1 = w3
  w4 = w5
}

::std::numeric::N32::to_string::to_string::4 {
  x(dup34(w0 w6) w2)
  w0 = ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup37(w0 w7) x(w11 w15))
  w0 = @rem(10 w1)
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  w7 = @div(10 w8)
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::unicode::String::to_string::to_string { fn(w0 w0) }

::sum_divisors {
  fn(w0 w17)
  ::sum_divisors::1 = x(x(w0 dup47(w13 w18)) x(x(1 w10) 2))
  w13 = @ne(1 w14)
  w14 = ?(::sum_divisors::12 ::sum_divisors::11 x(w18 x(x(w10 w17) _)))
}

::sum_divisors::1 {
  x(x(dup56(w3 w13) w14) x(w7 dup59(w0 dup59(w1 w10))))
  w0 = @mul(w1 w2)
  w2 = @le(w3 w4)
  w4 = ?(::sum_divisors::3 ::sum_divisors::2 x(x(w13 w14) x(w7 w10)))
}

::sum_divisors::2 {
  x(x(dup61(w17 w23) w24) x(w14 dup64(w18 w20)))
  w17 = @rem(w18 w19)
  w19 = ?(::sum_divisors::6 ::sum_divisors::5 x(x(w23 w24) x(w14 w20)))
}

::sum_divisors::3 { x(x(w4 w4) x(x(w2 w2) _)) }

::sum_divisors::5 {
  x(w6 x(w4 w2))
  w2 = @add(1 w1)
  ::sum_divisors::1 = x(w6 x(w4 w1))
}

::sum_divisors::6 {
  x(x(w4 w26) x(x(w2 w24) dup79(w6 dup79(w19 dup79(w10 w15)))))
  ::sum_divisors::7 = x(x(w4 w21) x(w19 x(w6 w18)))
  w18 = @sub(1 w9)
  w10 = @sub(1 w11)
  w9 = @div(w11 w12)
  w2 = @mul(w12 w14)
  w15 = @add(1 w16)
  ::sum_divisors::1 = x(x(w21 w26) x(x(w14 w24) w16))
}

::sum_divisors::7 {
  x(x(dup84(w0 w11) w12) x(dup85(w1 w10) w4))
  w0 = @rem(w1 w2)
  w2 = ?(::sum_divisors::9 ::sum_divisors::8 x(x(w11 w12) x(w10 w4)))
}

::sum_divisors::8 { x(x(w4 w4) x(_ x(w1 w1))) }

::sum_divisors::9 {
  x(x(w10 w15) x(dup93(w0 dup93(w3 w13)) x(w7 w12)))
  w7 = @mul(w0 w2)
  w10 = @div(w3 w5)
  ::sum_divisors::7 = x(x(w5 w15) x(w13 x(w2 w12)))
}

::sum_divisors::11 {
  x(w7 x(x(w6 w3) _))
  w7 = @add(1 w1)
  w6 = @mul(w1 w3)
}

::sum_divisors::12 { x(_ x(x(w2 w2) _)) }

::std::data::List::concat {
  fn(w0 fn(w1 w22))
  tup(w5 tup(w6 w15)) = w0
  tup(w10 tup(w11 w21)) = w1
  w15 = w11
  w5 = @add(w10 w18)
  w22 = tup(w18 tup(w6 w21))
}

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(w3 _))
  tup(w7 tup(w8 _)) = w3
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 {
  x(w4 x(dup2255(w0 w6) w1))
  w0 = ?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1)))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 w14))
  w15 = @sub(1 w1)
  tup(w4 w5) = w14
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

