
::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::main { ::inverse::main }

::inverse::main {
  fn(ref(w1 w24) _)
  ::inverse::refs = fn(ref(w1 w6) _)
  ::std::IO::println = fn(ref(w6 w10) fn(tup(0 tup(w30 w30)) _))
  ::inverse::fns = fn(ref(w10 w15) _)
  ::std::IO::println = fn(ref(w15 w19) fn(tup(0 tup(w33 w33)) _))
  ::inverse::rev = fn(ref(w19 w24) _)
}

::inverse::refs { fn(ref(@io_print_char(120 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(49 @io_print_char(10 @io_print_char(120 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(50 @io_print_char(10 @io_print_char(120 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(51 @io_print_char(10 n0)))))))))))))))))) n0) _) }

::std::numeric::N32::to_string::to_string { fn(dup22(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup31(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup31(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup34(@rem(10 @add$(48 n0)) @div(10 dup31(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::inverse::refs::inc { fn(tup(@add(1 n0) n0) _) }

::inverse::fns { fn(ref(@io_print_char(102 @io_print_char(40 @io_print_char(49 @io_print_char(41 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(49 @io_print_char(10 @io_print_char(102 @io_print_char(40 @io_print_char(50 @io_print_char(41 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(52 @io_print_char(10 @io_print_char(102 @io_print_char(40 @io_print_char(51 @io_print_char(41 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(57 @io_print_char(10 n0))))))))))))))))))))))))))) n0) _) }

::inverse::fns::call { fn(tup(n0 n1) fn(n0 n1)) }

::inverse::rev { fn(ref(@io_print_char(115 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(49 @io_print_char(10 @io_print_char(115 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(49 @io_print_char(10 @io_print_char(115 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(50 @io_print_char(10 @io_print_char(115 @io_print_char(32 @io_print_char(61 @io_print_char(32 @io_print_char(50 @io_print_char(10 n0)))))))))))))))))))))))) n0) _) }

::std::unicode::String::to_string::to_string { fn(n0 n0) }

::inverse::rev::get { fn(ref(n0 dup74(n0 n1)) n1) }

::inverse::rev::set { fn(ref(n0 _) fn(n0 _)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2234(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2234(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2234(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2234(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

