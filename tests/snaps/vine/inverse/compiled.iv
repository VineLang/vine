
::main { ::inverse::main }

::inverse::main {
  fn(ref(w1 w24) _)
  ::inverse::refs = fn(ref(w1 w6) _)
  ::std::IO::println = fn(ref(w6 w10) fn(tup(0 tup(w30 w30)) _))
  ::inverse::fns = fn(ref(w10 w15) _)
  ::std::IO::println = fn(ref(w15 w19) fn(tup(0 tup(w33 w33)) _))
  ::inverse::rev = fn(ref(w19 w24) _)
}

::inverse::refs {
  fn(ref(w1 w39) _)
  ::inverse::refs::inc = fn(tup(0 dup16(w16 w19)) _)
  ::std::numeric::N32::to_string::to_string = fn(w16 tup(@n32_add(4 w46) tup(w47 w48)))
  ::std::IO::println = fn(ref(w1 w13) fn(tup(w46 tup(tup(120 tup(32 tup(61 tup(32 w47)))) w48)) _))
  ::inverse::refs::inc = fn(tup(w19 dup18(w29 w32)) _)
  ::std::numeric::N32::to_string::to_string = fn(w29 tup(@n32_add(4 w51) tup(w52 w53)))
  ::std::IO::println = fn(ref(w13 w26) fn(tup(w51 tup(tup(120 tup(32 tup(61 tup(32 w52)))) w53)) _))
  ::inverse::refs::inc = fn(tup(w32 w35) _)
  ::std::numeric::N32::to_string::to_string = fn(w35 tup(@n32_add(4 w56) tup(w57 w58)))
  ::std::IO::println = fn(ref(w26 w39) fn(tup(w56 tup(tup(120 tup(32 tup(61 tup(32 w57)))) w58)) _))
}

::std::numeric::N32::to_string::to_string { fn(dup42(n0 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)))) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup42(n0 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))))) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::5 { x(dup36(@n32_rem(10 @n32_add$(48 n0)) @n32_div(10 dup42(n1 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))))))) x(tup(@n32_add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::inverse::refs::inc { fn(tup(@n32_add(1 n0) n0) _) }

::inverse::fns {
  fn(ref(w1 w24) _)
  ::std::numeric::N32::mul::mul = fn(w35 fn(w36 w37))
  ::inverse::fns::call = fn(w11 fn(1 w12))
  ::std::numeric::N32::to_string::to_string = fn(w12 tup(@n32_add(7 w39) tup(w40 w41)))
  ::std::IO::println = fn(ref(w1 w8) fn(tup(w39 tup(tup(102 tup(40 tup(49 tup(41 tup(32 tup(61 tup(32 w40))))))) w41)) _))
  ::inverse::fns::call = fn(w19 fn(2 w20))
  ::std::numeric::N32::to_string::to_string = fn(w20 tup(@n32_add(7 w44) tup(w45 w46)))
  ::std::IO::println = fn(ref(w8 w16) fn(tup(w44 tup(tup(102 tup(40 tup(50 tup(41 tup(32 tup(61 tup(32 w45))))))) w46)) _))
  ::inverse::fns::call = fn(w27 fn(3 w28))
  ::std::numeric::N32::to_string::to_string = fn(w28 tup(@n32_add(7 w49) tup(w50 w51)))
  ::std::IO::println = fn(ref(w16 w24) fn(tup(w49 tup(tup(102 tup(40 tup(51 tup(41 tup(32 tup(61 tup(32 w50))))))) w51)) _))
  tup(dup80(w35 w36) w37) = dup82(w11 dup82(w19 w27))
}

::std::numeric::N32::mul::mul { fn(@n32_mul(w1 out) fn(w1 out)) }

::inverse::fns::call { fn(tup(n0 n1) fn(n0 n1)) }

::inverse::rev {
  fn(ref(w1 w35) _)
  ::std::unicode::String::to_string::to_string = fn(w12 tup(@n32_add(4 w53) tup(w54 w55)))
  ::std::IO::println = fn(ref(w1 w9) fn(tup(w53 tup(tup(115 tup(32 tup(61 tup(32 w54)))) w55)) _))
  ::std::unicode::String::to_string::to_string = fn(w19 tup(@n32_add(4 w58) tup(w59 w60)))
  ::std::IO::println = fn(ref(w9 w16) fn(tup(w58 tup(tup(115 tup(32 tup(61 tup(32 w59)))) w60)) _))
  ::inverse::rev::get = fn(ref(_ w29) w31)
  ::std::unicode::String::to_string::to_string = fn(w31 tup(@n32_add(4 w66) tup(w67 w68)))
  ::std::IO::println = fn(ref(w16 w25) fn(tup(w66 tup(tup(115 tup(32 tup(61 tup(32 w67)))) w68)) _))
  ::inverse::rev::get = fn(ref(w29 w39) w41)
  ::std::unicode::String::to_string::to_string = fn(w41 tup(@n32_add(4 w71) tup(w72 w73)))
  ::std::IO::println = fn(ref(w25 w35) fn(tup(w71 tup(tup(115 tup(32 tup(61 tup(32 w72)))) w73)) _))
  ::inverse::rev::set = fn(ref(w39 _) fn(tup(1 tup(tup(50 w78) w78)) _))
  _ = tup(1 tup(tup(48 w52) w52))
  tup(1 tup(tup(49 w65) w65)) = dup102(w12 w19)
}

::std::unicode::String::to_string::to_string { fn(n0 n0) }

::inverse::rev::get { fn(ref(n0 dup110(n0 n1)) n1) }

::inverse::rev::set { fn(ref(w3 _) fn(w3 _)) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup42(n2 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))))) tup(n3 _)) _)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@n32_sub(1 dup42(n3 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4)))))) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

