
::main { ::so_random::main }

::so_random::main {
  fn(n0 _)
  ::so_random::main::1 = x(n0 x(0 ::std::rng::default))
}

::so_random::main::1 { x(n0 x(dup2(@lt(100 ?(_ ::so_random::main::2 x(n0 x(n2 n1)))) n2) n1)) }

::so_random::main::2 {
  x(n2 x(@add(1 n5) n3))
  ::std::io::println = fn(ref(n2 n4) fn(n1 _))
  ::std::rng::gen_u32 = fn(ref(n3 n6) n0)
  ::std::u32::to_string = fn(n0 n1)
  ::so_random::main::1 = x(n4 x(n5 n6))
}

::std::io::println {
  fn(ref(n0 n3) fn(n1 _))
  ::std::io::print = fn(ref(n0 n2) fn(n1 _))
  ::std::io::print_char = fn(ref(n2 n3) fn(10 _))
}

::std::io::print {
  fn(ref(n0 n1) fn(tup(n2 tup(n3 _)) _))
  ::std::io::print::1 = x(n0 x(n1 x(n2 n3)))
}

::std::io::print::1 { x(n0 x(n1 x(dup15(?(::std::io::print::3 ::std::io::print::2 x(n0 x(n1 x(n3 n2)))) n3) n2))) }

::std::io::print::2 {
  x(n1 x(n3 x(@sub(1 n4) tup(n0 n5))))
  ::std::io::print_char = fn(ref(n1 n2) fn(n0 _))
  ::std::io::print::1 = x(n2 x(n3 x(n4 n5)))
}

::std::io::print::3 { x(n0 x(n0 _)) }

::std::io::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::rng::new {
  fn(n1 fn(@u32_or(n0 dup218(n5 dup218(n6 n7))) tup(n4 n7)))
  ::std::u64::from_u32 = fn(1 n0)
  ::std::u64::add = fn(n1 fn(n5 n2))
  ::std::u64::mul = fn(n2 fn(::std::rng::multiplier n3))
  ::std::u64::add = fn(n3 fn(n6 n4))
}

::std::rng::default {
  n0
  ::std::rng::new = fn(tup(3512640997 3405705229) fn(tup(4150755663 335903614) n0))
}

::std::rng::multiplier { tup(1284865837 1481765933) }

::std::rng::gen_u32 {
  fn(ref(tup(dup223(tup(@u32_shr(27 n3) dup226(@u32_shr(13 @u32_xor(n2 @u32_xor(n3 n4))) dup226(@u32_shl(5 n2) @u32_shr(27 n5)))) n7) dup224(n8 n9)) tup(n1 n9)) n6)
  ::std::u64::mul = fn(n7 fn(::std::rng::multiplier n0))
  ::std::u64::add = fn(n0 fn(n8 n1))
  ::std::u32::rotate_right = fn(n4 fn(n5 n6))
}

::std::u32::to_string { fn(dup243(?(::std::u32::to_string::5 ::std::u32::to_string::1 x(n1 n0)) n1) n0) }

::std::u32::to_string::1 {
  x(n1 n2)
  ::std::u32::to_string::2 = x(n1 x(tup(0 tup(n0 n0)) n2))
}

::std::u32::to_string::2 { x(dup243(?(::std::u32::to_string::4 ::std::u32::to_string::3 x(n2 n0)) n2) n0) }

::std::u32::to_string::3 {
  x(dup243(@rem(10 n1) @div(10 n5)) x(tup(@add(1 n0) tup(n3 n4)) n6))
  48 = @add(n1 n2)
  ::std::u32::to_string::2 = x(n5 x(tup(n0 tup(tup(n2 n3) n4)) n6))
}

::std::u32::to_string::4 { x(_ x(n0 n0)) }

::std::u32::to_string::5 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::u32::rotate_right { fn(@u32_rotr(x y) fn(x y)) }

::std::u64::from_u32 { fn(n0 tup(n0 0)) }

::std::u64::add { fn(tup(dup(@add(bl0 l) @u32_add_high(bl1 c)) @add(bh @add(c h))) fn(tup(dup(bl0 bl1) bh) tup(l h))) }

::std::u64::mul { fn(tup(dup(@mul(bl0 l) dup(@u32_mul_high(bl1 ll) @mul(bh @add(hl @add(ll h))))) ah) fn(tup(dup(bl0 dup(bl1 @mul(ah hl))) bh) tup(l h))) }

