
::std::numeric::N32::rotate_right { fn(@n32_rotr(x y) fn(x y)) }

::std::numeric::N64::add {
  fn(tup(dup(al0 al1) ah) fn(tup(dup(bl0 bl1) bh) tup(l h)))
  al0 = @add(bl0 l)
  al1 = @n32_add_high(bl1 c)
  ah = @add(bh @add(c h))
}

::std::numeric::N64::mul {
  fn(tup(dup(al0 dup(al1 al2)) ah) fn(tup(dup(bl0 dup(bl1 bl2)) bh) tup(l h)))
  al0 = @mul(bl0 l)
  al1 = @n32_mul_high(bl1 ll)
  al2 = @mul(bh lh)
  bl2 = @mul(ah hl)
  lh = @add(hl @add(ll h))
}

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::main { ::so_random::main }

::so_random::main {
  fn(ref(w1 w11) _)
  ::so_random::main::1 = x(x(w1 w11) x(0 ::std::rng::Pcg32::default))
}

::so_random::main::1 {
  x(w5 x(dup9(w0 w7) w2))
  w0 = @lt(100 w1)
  w1 = ?(::so_random::main::3 ::so_random::main::2 x(w5 x(w7 w2)))
}

::so_random::main::2 {
  x(x(w14 w18) x(w12 w11))
  ::std::rng::Pcg32::gen_n32 = fn(ref(w11 w4) w6)
  ::std::numeric::N32::to_string::to_string = fn(w6 w7)
  ::std::IO::println = fn(ref(w14 w1) fn(w7 _))
  w12 = @add(1 w10)
  ::so_random::main::1 = x(x(w1 w18) x(w10 w4))
}

::so_random::main::3 { x(x(w3 w3) _) }

::std::numeric::N32::to_string::to_string {
  fn(dup19(w5 w7) w6)
  w5 = ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w4)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
  w4 = w9
}

::std::numeric::N32::to_string::to_string::3 {
  x(_ w0)
  w0 = tup(w3 tup(tup(48 w4) w5))
  1 = w3
  w4 = w5
}

::std::numeric::N32::to_string::to_string::4 {
  x(dup28(w0 w6) w2)
  w0 = ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup31(w0 w7) x(w11 w15))
  w0 = @rem(10 w1)
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  w7 = @div(10 w8)
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::data::List::concat {
  fn(w0 fn(w1 w22))
  tup(w5 tup(w6 w15)) = w0
  tup(w10 tup(w11 w21)) = w1
  w15 = w11
  w5 = @add(w10 w18)
  w22 = tup(w18 tup(w6 w21))
}

::std::numeric::N64::from_n32 {
  fn(w0 w4)
  w4 = tup(w0 0)
}

::std::numeric::N64::or {
  fn(tup(w0 w1) fn(tup(w3 w4) w14))
  w0 = @n32_or(w3 w10)
  w1 = @n32_or(w4 w13)
  w14 = tup(w10 w13)
}

::std::rng::Pcg32::new {
  fn(w0 fn(w1 w19))
  ::std::numeric::N64::from_n32 = fn(1 w5)
  ::std::numeric::N64::or = fn(w1 fn(w5 w6))
  dup1758(w9 dup1758(w14 w18)) = w6
  ::std::numeric::N64::add = fn(w0 fn(w9 w10))
  ::std::numeric::N64::mul = fn(w10 fn(::std::rng::Pcg32::multiplier w13))
  ::std::numeric::N64::add = fn(w13 fn(w14 w15))
  w19 = tup(w15 w18)
}

::std::rng::Pcg32::default {
  r
  ::std::rng::Pcg32::new = fn(tup(3512640997 3405705229) fn(tup(4150755663 335903614) r))
}

::std::rng::Pcg32::multiplier { tup(1284865837 1481765933) }

::std::rng::Pcg32::gen_n32 {
  fn(ref(tup(dup1765(w9 w13) dup1766(w2 w15)) tup(w17 w2)) w28)
  tup(w10 dup1768(w18 dup1768(w20 w26))) = w9
  ::std::numeric::N64::mul = fn(w13 fn(::std::rng::Pcg32::multiplier w14))
  ::std::numeric::N64::add = fn(w14 fn(w15 w16))
  w17 = w16
  w18 = @n32_shr(13 w19)
  w20 = @n32_shl(5 w21)
  w19 = @n32_xor(w21 w22)
  w10 = @n32_shr(27 w24)
  w22 = @n32_xor(w24 w25)
  w26 = @n32_shr(27 w27)
  ::std::numeric::N32::rotate_right = fn(w25 fn(w27 w28))
}

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(w3 _))
  tup(w7 tup(w8 _)) = w3
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 {
  x(w4 x(dup2193(w0 w6) w1))
  w0 = ?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1)))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 w14))
  w15 = @sub(1 w1)
  tup(w4 w5) = w14
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

