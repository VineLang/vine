
::std::logical::Option::None { enum(_ enum(r r)) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::main { ::verbose_add::main }

::verbose_add::main {
  fn(ref(w1 w25) _)
  ::verbose_add = fn(enum(enum(1 w30) enum(_ w30)) fn(enum(enum(2 w31) enum(_ w31)) w10))
  ::std::IO::println = fn(ref(w1 w6) fn(w10 _))
  ::verbose_add = fn(::std::logical::Option::None fn(enum(enum(2 w32) enum(_ w32)) w16))
  ::std::IO::println = fn(ref(w6 w13) fn(w16 _))
  ::verbose_add = fn(enum(enum(1 w33) enum(_ w33)) fn(::std::logical::Option::None w22))
  ::std::IO::println = fn(ref(w13 w19) fn(w22 _))
  ::verbose_add = fn(::std::logical::Option::None fn(::std::logical::Option::None w27))
  ::std::IO::println = fn(ref(w19 w25) fn(w27 _))
}

::verbose_add { fn(enum(::verbose_add::4 enum(::verbose_add::5 x(w1 w8))) fn(w1 w8)) }

::verbose_add::4 { enum(w0 x(enum(::verbose_add::9 enum(::verbose_add::10 x(w0 w7))) w7)) }

::verbose_add::5 { x(_ tup(10 tup(tup(97 tup(32 tup(119 tup(97 tup(115 tup(32 tup(110 tup(111 tup(110 tup(101 w5)))))))))) w5))) }

::verbose_add::9 {
  enum(dup20(w7 w10) x(dup19(w5 @add(w10 w11)) tup(w13 tup(w14 w15))))
  ::std::numeric::N32::to_string::to_string = fn(w5 tup(@add(6 w16) tup(w14 tup(32 tup(43 tup(32 w17))))))
  ::std::numeric::N32::to_string::to_string = fn(w7 tup(@add(w16 w18) tup(w17 tup(32 tup(61 tup(32 w19))))))
  ::std::numeric::N32::to_string::to_string = fn(w11 tup(@add(w18 w13) tup(w19 w15)))
}

::verbose_add::10 { x(_ tup(10 tup(tup(98 tup(32 tup(119 tup(97 tup(115 tup(32 tup(110 tup(111 tup(110 tup(101 w5)))))))))) w5))) }

::std::numeric::N32::to_string::to_string { fn(dup26(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6)) w7) w6) }

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w9)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N32::to_string::to_string::4 { x(dup35(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2)) w6) w2) }

::std::numeric::N32::to_string::to_string::5 {
  x(dup38(@rem(10 w1) @div(10 w8)) x(w11 w15))
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::data::List::concat { fn(tup(@add(w10 w18) tup(w6 w11)) fn(tup(w10 tup(w11 w21)) tup(w18 tup(w6 w21)))) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(tup(w7 tup(w8 _)) _))
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 { x(w4 x(dup2200(?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1))) w6) w1)) }

::std::IO::print::2 {
  x(x(w17 w21) x(@sub(1 w1) tup(w4 w5)))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

