
::main { ::option_party::main }

::option_party::main {
  fn(ref(n0 n61) _)
  ::std::io::IO::println = fn(ref(n0 n63) fn(tup(4 tup(tup(109 tup(97 tup(112 tup(58 n1)))) n1)) _))
  ::std::option::Option::map = fn(::std::option::Option::None fn(fn(@add(1 n2) n2) n3))
  ::std::option::Option::Some = fn(0 n4)
  ::std::option::Option::map = fn(n4 fn(fn(@add(1 n5) n5) n6))
  ::std::option::Option::Some = fn(100 n7)
  ::std::option::Option::map = fn(n7 fn(fn(@add(1 n8) n8) n9))
  ::std::io::IO::println = fn(ref(n66 n67) fn(tup(17 tup(tup(105 tup(110 tup(99 tup(114 tup(101 tup(109 tup(101 tup(110 tup(116 tup(95 tup(111 tup(112 tup(116 tup(105 tup(111 tup(110 tup(58 n10))))))))))))))))) n10)) _))
  ::option_party::increment_option = fn(ref(::std::option::Option::None n11) _)
  ::std::option::Option::Some = fn(0 n12)
  ::option_party::increment_option = fn(ref(n12 dup9(n69 n70)) _)
  ::option_party::increment_option = fn(ref(n70 n13) _)
  ::std::io::IO::println = fn(ref(n72 n73) fn(tup(8 tup(tup(102 tup(108 tup(97 tup(116 tup(116 tup(101 tup(110 tup(58 n14)))))))) n14)) _))
  ::std::option::Option::flatten = fn(::std::option::Option::None n15)
  ::std::option::Option::Some = fn(::std::option::Option::None n16)
  ::std::option::Option::flatten = fn(n16 n17)
  ::std::option::Option::Some = fn(123 n18)
  ::std::option::Option::Some = fn(n18 n19)
  ::std::option::Option::flatten = fn(n19 n20)
  ::std::io::IO::println = fn(ref(n76 n77) fn(tup(12 tup(tup(97 tup(100 tup(100 tup(95 tup(111 tup(112 tup(116 tup(105 tup(111 tup(110 tup(115 tup(58 n21)))))))))))) n21)) _))
  ::option_party::add_options = fn(::std::option::Option::None fn(::std::option::Option::None n22))
  ::std::option::Option::Some = fn(1 n23)
  ::option_party::add_options = fn(n23 fn(::std::option::Option::None n24))
  ::option_party::add_options = fn(::std::option::Option::None fn(n25 n26))
  ::std::option::Option::Some = fn(2 n25)
  ::std::option::Option::Some = fn(1 n27)
  ::option_party::add_options = fn(n27 fn(n28 n29))
  ::std::option::Option::Some = fn(2 n28)
  ::std::io::IO::println = fn(ref(n81 n82) fn(tup(3 tup(tup(111 tup(114 tup(58 n30))) n30)) _))
  ::std::option::Option::or = fn(::std::option::Option::None fn(::std::option::Option::None n31))
  ::std::option::Option::Some = fn(1 n32)
  ::std::option::Option::or = fn(n32 fn(::std::option::Option::None n33))
  ::std::option::Option::or = fn(::std::option::Option::None fn(n34 n35))
  ::std::option::Option::Some = fn(2 n34)
  ::std::option::Option::Some = fn(1 n36)
  ::std::option::Option::or = fn(n36 fn(n37 n38))
  ::std::option::Option::Some = fn(2 n37)
  ::std::io::IO::println = fn(ref(n86 n87) fn(tup(10 tup(tup(117 tup(110 tup(119 tup(114 tup(97 tup(112 tup(95 tup(111 tup(114 tup(58 n39)))))))))) n39)) _))
  ::std::option::Option::unwrap_or = fn(::std::option::Option::None fn(0 n40))
  ::std::option::Option::Some = fn(1 n41)
  ::std::option::Option::unwrap_or = fn(n41 fn(0 n42))
  ::std::io::IO::println = fn(ref(n89 n90) fn(tup(8 tup(tup(105 tup(115 tup(95 tup(115 tup(111 tup(109 tup(101 tup(58 n43)))))))) n43)) _))
  ::std::option::Option::None = enum(::option_party::main::8 enum(0 n44))
  ::std::option::Option::Some = fn(_ enum(::option_party::main::10 enum(0 n45)))
  ::std::io::IO::println = fn(ref(n92 n93) fn(tup(8 tup(tup(105 tup(115 tup(95 tup(110 tup(111 tup(110 tup(101 tup(58 n46)))))))) n46)) _))
  ::std::option::Option::None = enum(::option_party::main::12 enum(1 n47))
  ::std::option::Option::Some = fn(_ enum(::option_party::main::14 enum(1 n48)))
  ::std::io::IO::println = fn(ref(n95 n96) fn(tup(12 tup(tup(105 tup(115 tup(95 tup(115 tup(111 tup(109 tup(101 tup(95 tup(97 tup(110 tup(100 tup(58 n49)))))))))))) n49)) _))
  ::std::option::Option::None = enum(::option_party::main::17 enum(0 n50))
  ::std::option::Option::Some = fn(0 enum(::option_party::main::22 enum(0 n51)))
  ::std::option::Option::Some = fn(1 enum(::option_party::main::27 enum(0 n52)))
  ::std::io::IO::println = fn(ref(n99 n100) fn(tup(16 tup(tup(105 tup(115 tup(95 tup(115 tup(111 tup(109 tup(101 tup(95 tup(105 tup(109 tup(112 tup(108 tup(105 tup(101 tup(115 tup(58 n53)))))))))))))))) n53)) _))
  ::std::option::Option::None = enum(::option_party::main::32 enum(1 n54))
  ::std::option::Option::Some = fn(0 enum(::option_party::main::37 enum(1 n55)))
  ::std::option::Option::Some = fn(1 enum(::option_party::main::42 enum(1 n56)))
  ::std::io::IO::println = fn(ref(n103 n104) fn(tup(7 tup(tup(117 tup(110 tup(119 tup(114 tup(97 tup(112 tup(58 n57))))))) n57)) _))
  ::std::option::Option::Some = fn(42 n58)
  ::std::option::Option::unwrap = fn(n58 n59)
  ::std::option::Option::unwrap = fn(::std::option::Option::None n60)
  ::std::io::IO::println = fn(ref(n106 n61) fn(tup(27 tup(tup(105 tup(111 tup(32 tup(119 tup(105 tup(108 tup(108 tup(32 tup(110 tup(101 tup(118 tup(101 tup(114 tup(32 tup(119 tup(111 tup(114 tup(107 tup(32 tup(97 tup(103 tup(97 tup(105 tup(110 tup(32 tup(58 tup(40 n62))))))))))))))))))))))))))) n62)) _))
  ::option_party::main::1 = x(n63 x(n64 fn(n3 _)))
  ::option_party::main::1 = x(n64 x(n65 fn(n6 _)))
  ::option_party::main::1 = x(n65 x(n66 fn(n9 _)))
  ::option_party::main::1 = x(n67 x(n68 fn(n11 _)))
  ::option_party::main::1 = x(n68 x(n71 fn(n69 _)))
  ::option_party::main::1 = x(n71 x(n72 fn(n13 _)))
  ::option_party::main::1 = x(n73 x(n74 fn(n15 _)))
  ::option_party::main::1 = x(n74 x(n75 fn(n17 _)))
  ::option_party::main::1 = x(n75 x(n76 fn(n20 _)))
  ::option_party::main::1 = x(n77 x(n78 fn(n22 _)))
  ::option_party::main::1 = x(n78 x(n79 fn(n24 _)))
  ::option_party::main::1 = x(n79 x(n80 fn(n26 _)))
  ::option_party::main::1 = x(n80 x(n81 fn(n29 _)))
  ::option_party::main::1 = x(n82 x(n83 fn(n31 _)))
  ::option_party::main::1 = x(n83 x(n84 fn(n33 _)))
  ::option_party::main::1 = x(n84 x(n85 fn(n35 _)))
  ::option_party::main::1 = x(n85 x(n86 fn(n38 _)))
  ::option_party::main::4 = x(n87 x(n88 fn(n40 _)))
  ::option_party::main::4 = x(n88 x(n89 fn(n42 _)))
  ::option_party::main::5 = x(n90 x(n91 fn(n44 _)))
  ::option_party::main::5 = x(n91 x(n92 fn(n45 _)))
  ::option_party::main::5 = x(n93 x(n94 fn(n47 _)))
  ::option_party::main::5 = x(n94 x(n95 fn(n48 _)))
  ::option_party::main::5 = x(n96 x(n97 fn(n50 _)))
  ::option_party::main::5 = x(n97 x(n98 fn(n51 _)))
  ::option_party::main::5 = x(n98 x(n99 fn(n52 _)))
  ::option_party::main::5 = x(n100 x(n101 fn(n54 _)))
  ::option_party::main::5 = x(n101 x(n102 fn(n55 _)))
  ::option_party::main::5 = x(n102 x(n103 fn(n56 _)))
  ::option_party::main::4 = x(n104 x(n105 fn(n59 _)))
  ::option_party::main::4 = x(n105 x(n106 fn(n60 _)))
}

::option_party::main::1 {
  x(n4 x(n5 fn(enum(::option_party::main::2 enum(::option_party::main::3 n1)) n3)))
  ::std::io::IO::println = fn(ref(n4 n5) fn(n2 n3))
  ::std::list::List::concat = fn(tup(2 tup(tup(32 tup(32 n0)) n0)) fn(n1 n2))
}

::option_party::main::2 {
  enum(n1 n5)
  ::std::n32::N32::to_string = fn(n1 n2)
  ::std::list::List::concat = fn(tup(5 tup(tup(83 tup(111 tup(109 tup(101 tup(40 n0))))) n0)) fn(n2 n4))
  ::std::list::List::concat = fn(n4 fn(tup(1 tup(tup(41 n3) n3)) n5))
}

::option_party::main::3 { tup(4 tup(tup(78 tup(111 tup(110 tup(101 n0)))) n0)) }

::option_party::main::4 {
  x(n5 x(n6 fn(n1 n4)))
  ::std::io::IO::println = fn(ref(n5 n6) fn(n3 n4))
  ::std::n32::N32::to_string = fn(n1 n2)
  ::std::list::List::concat = fn(tup(2 tup(tup(32 tup(32 n0)) n0)) fn(n2 n3))
}

::option_party::main::5 {
  x(n2 x(n3 fn(?(::option_party::main::7 ::option_party::main::6 n0) n1)))
  ::std::io::IO::println = fn(ref(n2 n3) fn(n0 n1))
}

::option_party::main::6 { tup(6 tup(tup(32 tup(32 tup(116 tup(114 tup(117 tup(101 n0)))))) n0)) }

::option_party::main::7 { tup(7 tup(tup(32 tup(32 tup(102 tup(97 tup(108 tup(115 tup(101 n0))))))) n0)) }

::option_party::main::8 { enum(_ 1) }

::option_party::main::10 { enum(_ 1) }

::option_party::main::12 { enum(_ 0) }

::option_party::main::14 { enum(_ 0) }

::option_party::main::17 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::22 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::27 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::32 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::37 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::42 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::increment_option {
  fn(n0 _)
  ::std::option::Option::as_ref = fn(n0 enum(::option_party::increment_option::1 enum(_ _)))
}

::option_party::increment_option::1 { enum(ref(@add(1 n0) n0) _) }

::option_party::add_options {
  fn(n0 fn(n1 n5))
  ::std::option::Option::and_then = fn(n0 fn(fn(@add(n2 n3) n4) n5))
  ::std::option::Option::map = fn(n1 fn(fn(n2 n3) n4))
}

::std::io::IO::println {
  fn(ref(n0 n3) fn(n1 _))
  ::std::io::IO::print = fn(ref(n0 n2) fn(n1 _))
  ::std::io::IO::print_char = fn(ref(n2 n3) fn(10 _))
}

::std::io::IO::print {
  fn(ref(n0 n1) fn(tup(n2 tup(n3 _)) _))
  ::std::io::IO::print::1 = x(n0 x(n1 x(n2 n3)))
}

::std::io::IO::print::1 { x(n0 x(n1 x(dup275(?(::std::io::IO::print::3 ::std::io::IO::print::2 x(n0 x(n1 x(n3 n2)))) n3) n2))) }

::std::io::IO::print::2 {
  x(n1 x(n3 x(@sub(1 n4) tup(n0 n5))))
  ::std::io::IO::print_char = fn(ref(n1 n2) fn(n0 _))
  ::std::io::IO::print::1 = x(n2 x(n3 x(n4 n5)))
}

::std::io::IO::print::3 { x(n0 x(n0 _)) }

::std::io::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::list::List::concat { fn(tup(@add(n1 n2) tup(n3 n0)) fn(tup(n1 tup(n0 n4)) tup(n2 tup(n3 n4)))) }

::std::n32::N32::to_string { fn(dup880(?(::std::n32::N32::to_string::5 ::std::n32::N32::to_string::1 x(n1 n0)) n1) n0) }

::std::n32::N32::to_string::1 {
  x(n1 n2)
  ::std::n32::N32::to_string::2 = x(n1 x(tup(0 tup(n0 n0)) n2))
}

::std::n32::N32::to_string::2 { x(dup880(?(::std::n32::N32::to_string::4 ::std::n32::N32::to_string::3 x(n2 n0)) n2) n0) }

::std::n32::N32::to_string::3 {
  x(dup880(@rem(10 n0) @div(10 n4)) x(n3 n6))
  48 = @add(n0 n1)
  ::std::list::List::concat = fn(tup(1 tup(tup(n1 n2) n2)) fn(n3 n5))
  ::std::n32::N32::to_string::2 = x(n4 x(n5 n6))
}

::std::n32::N32::to_string::4 { x(_ x(n0 n0)) }

::std::n32::N32::to_string::5 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::option::Option::Some { fn(n0 enum(enum(n0 n1) enum(_ n1))) }

::std::option::Option::None { enum(_ enum(n0 n0)) }

::std::option::Option::map { fn(enum(::std::option::Option::map::1 enum(::std::option::Option::map::2 x(n0 n1))) fn(n0 n1)) }

::std::option::Option::map::1 {
  enum(n0 x(fn(n0 n1) n2))
  ::std::option::Option::Some = fn(n1 n2)
}

::std::option::Option::map::2 { x(_ ::std::option::Option::None) }

::std::option::Option::as_ref { fn(ref(enum(::std::option::Option::as_ref::1 enum(::std::option::Option::as_ref::2 x(n2 n3))) n3) n2) }

::std::option::Option::as_ref::1 {
  enum(n0 x(n3 enum(enum(n1 n2) enum(_ n2))))
  ::std::option::Option::Some = fn(ref(n0 n1) n3)
}

::std::option::Option::as_ref::2 { x(::std::option::Option::None enum(_ enum(n0 n0))) }

::std::option::Option::flatten { fn(enum(::std::option::Option::flatten::2 enum(::std::option::Option::None n0)) n0) }

::std::option::Option::flatten::2 { enum(enum(::std::option::Option::flatten::3 enum(::std::option::Option::None n0)) n0) }

::std::option::Option::flatten::3 {
  enum(n0 n1)
  ::std::option::Option::Some = fn(n0 n1)
}

::std::option::Option::and_then {
  fn(n0 fn(n1 n3))
  ::std::option::Option::map = fn(n0 fn(n1 n2))
  ::std::option::Option::flatten = fn(n2 n3)
}

::std::option::Option::or { fn(enum(::std::option::Option::or::1 enum(::std::option::Option::or::2 x(n0 n1))) fn(n0 n1)) }

::std::option::Option::or::1 { enum(n0 x(_ enum(enum(n0 n1) enum(_ n1)))) }

::std::option::Option::or::2 { x(n0 n0) }

::std::option::Option::unwrap_or { fn(enum(::std::option::Option::unwrap_or::1 enum(::std::option::Option::unwrap_or::2 x(n0 n1))) fn(n0 n1)) }

::std::option::Option::unwrap_or::1 { enum(n0 x(_ n0)) }

::std::option::Option::unwrap_or::2 { x(n0 n0) }

::std::option::Option::unwrap { fn(enum(::std::option::Option::unwrap::1 enum(_ n0)) n0) }

::std::option::Option::unwrap::1 { enum(n0 n0) }

