
::main { ::option_party::main }

::option_party::main {
  fn(n0 _)
  ::std::io::println = fn(ref(n0 n2) fn(tup(4 fn(n1 tup(109 tup(97 tup(112 tup(58 n1)))))) _))
  ::option_party::print_option_u32 = fn(ref(n2 n5) fn(n4 _))
  ::std::option::Option::map = fn(ref(::std::option::Option::None _) fn(fn(@add(1 n3) n3) n4))
  ::option_party::print_option_u32 = fn(ref(n5 n9) fn(n8 _))
  ::std::option::Option::Some = fn(0 n6)
  ::std::option::Option::map = fn(ref(n6 _) fn(fn(@add(1 n7) n7) n8))
  ::option_party::print_option_u32 = fn(ref(n9 n13) fn(n12 _))
  ::std::option::Option::Some = fn(100 n10)
  ::std::option::Option::map = fn(ref(n10 _) fn(fn(@add(1 n11) n11) n12))
  ::std::io::println = fn(ref(n13 n15) fn(tup(17 fn(n14 tup(105 tup(110 tup(99 tup(114 tup(101 tup(109 tup(101 tup(110 tup(116 tup(95 tup(111 tup(112 tup(116 tup(105 tup(111 tup(110 tup(58 n14))))))))))))))))))) _))
  ::option_party::increment_option = fn(ref(::std::option::Option::None n16) _)
  ::option_party::print_option_u32 = fn(ref(n15 n18) fn(n16 _))
  ::std::option::Option::Some = fn(0 n17)
  ::option_party::increment_option = fn(ref(n17 dup5(n104 n105)) _)
  ::option_party::print_option_u32 = fn(ref(n18 n19) fn(n104 _))
  ::option_party::increment_option = fn(ref(n105 n20) _)
  ::option_party::print_option_u32 = fn(ref(n19 n21) fn(n20 _))
  ::std::io::println = fn(ref(n21 n23) fn(tup(8 fn(n22 tup(102 tup(108 tup(97 tup(116 tup(116 tup(101 tup(110 tup(58 n22)))))))))) _))
  ::option_party::print_option_u32 = fn(ref(n23 n25) fn(n24 _))
  ::std::option::Option::flatten = fn(ref(::std::option::Option::None _) n24)
  ::option_party::print_option_u32 = fn(ref(n25 n28) fn(n27 _))
  ::std::option::Option::Some = fn(::std::option::Option::None n26)
  ::std::option::Option::flatten = fn(ref(n26 _) n27)
  ::option_party::print_option_u32 = fn(ref(n28 n32) fn(n31 _))
  ::std::option::Option::Some = fn(123 n29)
  ::std::option::Option::Some = fn(n29 n30)
  ::std::option::Option::flatten = fn(ref(n30 _) n31)
  ::std::io::println = fn(ref(n32 n34) fn(tup(12 fn(n33 tup(97 tup(100 tup(100 tup(95 tup(111 tup(112 tup(116 tup(105 tup(111 tup(110 tup(115 tup(58 n33)))))))))))))) _))
  ::option_party::print_option_u32 = fn(ref(n34 n36) fn(n35 _))
  ::option_party::add_options = fn(::std::option::Option::None fn(::std::option::Option::None n35))
  ::option_party::print_option_u32 = fn(ref(n36 n39) fn(n38 _))
  ::std::option::Option::Some = fn(1 n37)
  ::option_party::add_options = fn(n37 fn(::std::option::Option::None n38))
  ::option_party::print_option_u32 = fn(ref(n39 n42) fn(n41 _))
  ::option_party::add_options = fn(::std::option::Option::None fn(n40 n41))
  ::std::option::Option::Some = fn(2 n40)
  ::option_party::print_option_u32 = fn(ref(n42 n46) fn(n45 _))
  ::std::option::Option::Some = fn(1 n43)
  ::option_party::add_options = fn(n43 fn(n44 n45))
  ::std::option::Option::Some = fn(2 n44)
  ::std::io::println = fn(ref(n46 n48) fn(tup(3 fn(n47 tup(111 tup(114 tup(58 n47))))) _))
  ::option_party::print_option_u32 = fn(ref(n48 n50) fn(n49 _))
  ::std::option::Option::or = fn(ref(::std::option::Option::None _) fn(::std::option::Option::None n49))
  ::option_party::print_option_u32 = fn(ref(n50 n53) fn(n52 _))
  ::std::option::Option::Some = fn(1 n51)
  ::std::option::Option::or = fn(ref(n51 _) fn(::std::option::Option::None n52))
  ::option_party::print_option_u32 = fn(ref(n53 n56) fn(n55 _))
  ::std::option::Option::or = fn(ref(::std::option::Option::None _) fn(n54 n55))
  ::std::option::Option::Some = fn(2 n54)
  ::option_party::print_option_u32 = fn(ref(n56 n60) fn(n59 _))
  ::std::option::Option::Some = fn(1 n57)
  ::std::option::Option::or = fn(ref(n57 _) fn(n58 n59))
  ::std::option::Option::Some = fn(2 n58)
  ::std::io::println = fn(ref(n60 n62) fn(tup(10 fn(n61 tup(117 tup(110 tup(119 tup(114 tup(97 tup(112 tup(95 tup(111 tup(114 tup(58 n61)))))))))))) _))
  ::option_party::print_u32 = fn(ref(n62 n64) fn(n63 _))
  ::std::option::Option::unwrap_or = fn(ref(::std::option::Option::None _) fn(0 n63))
  ::option_party::print_u32 = fn(ref(n64 n67) fn(n66 _))
  ::std::option::Option::Some = fn(1 n65)
  ::std::option::Option::unwrap_or = fn(ref(n65 _) fn(0 n66))
  ::std::io::println = fn(ref(n67 n69) fn(tup(8 fn(n68 tup(105 tup(115 tup(95 tup(115 tup(111 tup(109 tup(101 tup(58 n68)))))))))) _))
  ::option_party::print_bool = fn(ref(n69 n71) fn(n70 _))
  ::std::option::Option::None = enum(::option_party::main::1 enum(0 n70))
  ::option_party::print_bool = fn(ref(n71 n73) fn(n72 _))
  ::std::option::Option::Some = fn(_ enum(::option_party::main::3 enum(0 n72)))
  ::std::io::println = fn(ref(n73 n75) fn(tup(8 fn(n74 tup(105 tup(115 tup(95 tup(110 tup(111 tup(110 tup(101 tup(58 n74)))))))))) _))
  ::option_party::print_bool = fn(ref(n75 n77) fn(n76 _))
  ::std::option::Option::None = enum(::option_party::main::5 enum(1 n76))
  ::option_party::print_bool = fn(ref(n77 n79) fn(n78 _))
  ::std::option::Option::Some = fn(_ enum(::option_party::main::7 enum(1 n78)))
  ::std::io::println = fn(ref(n79 n81) fn(tup(12 fn(n80 tup(105 tup(115 tup(95 tup(115 tup(111 tup(109 tup(101 tup(95 tup(97 tup(110 tup(100 tup(58 n80)))))))))))))) _))
  ::option_party::print_bool = fn(ref(n81 n83) fn(n82 _))
  ::std::option::Option::None = enum(::option_party::main::10 enum(0 n82))
  ::option_party::print_bool = fn(ref(n83 n85) fn(n84 _))
  ::std::option::Option::Some = fn(0 enum(::option_party::main::15 enum(0 n84)))
  ::option_party::print_bool = fn(ref(n85 n87) fn(n86 _))
  ::std::option::Option::Some = fn(1 enum(::option_party::main::20 enum(0 n86)))
  ::std::io::println = fn(ref(n87 n89) fn(tup(16 fn(n88 tup(105 tup(115 tup(95 tup(115 tup(111 tup(109 tup(101 tup(95 tup(105 tup(109 tup(112 tup(108 tup(105 tup(101 tup(115 tup(58 n88)))))))))))))))))) _))
  ::option_party::print_bool = fn(ref(n89 n91) fn(n90 _))
  ::std::option::Option::None = enum(::option_party::main::25 enum(1 n90))
  ::option_party::print_bool = fn(ref(n91 n93) fn(n92 _))
  ::std::option::Option::Some = fn(0 enum(::option_party::main::30 enum(1 n92)))
  ::option_party::print_bool = fn(ref(n93 n95) fn(n94 _))
  ::std::option::Option::Some = fn(1 enum(::option_party::main::35 enum(1 n94)))
  ::std::io::println = fn(ref(n95 n97) fn(tup(7 fn(n96 tup(117 tup(110 tup(119 tup(114 tup(97 tup(112 tup(58 n96))))))))) _))
  ::option_party::print_u32 = fn(ref(n97 n100) fn(n99 _))
  ::std::option::Option::Some = fn(42 n98)
  ::std::option::Option::unwrap = fn(ref(n98 _) n99)
  ::option_party::print_u32 = fn(ref(n100 n102) fn(n101 _))
  ::std::option::Option::unwrap = fn(ref(::std::option::Option::None _) n101)
  ::std::io::println = fn(ref(n102 _) fn(tup(27 fn(n103 tup(105 tup(111 tup(32 tup(119 tup(105 tup(108 tup(108 tup(32 tup(110 tup(101 tup(118 tup(101 tup(114 tup(32 tup(119 tup(111 tup(114 tup(107 tup(32 tup(97 tup(103 tup(97 tup(105 tup(110 tup(32 tup(58 tup(40 n103))))))))))))))))))))))))))))) _))
}

::option_party::main::1 { enum(_ 1) }

::option_party::main::3 { enum(_ 1) }

::option_party::main::5 { enum(_ 0) }

::option_party::main::7 { enum(_ 0) }

::option_party::main::10 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::15 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::20 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::25 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::30 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::main::35 { enum(@lt$(0 ?(0 1 n0)) n0) }

::option_party::print_option_u32 {
  fn(n0 fn(enum(::option_party::print_option_u32::1 enum(::option_party::print_option_u32::2 n3)) n5))
  ::std::io::println = fn(n0 fn(n4 n5))
  ::std::str::concat = fn(tup(2 fn(n2 tup(32 tup(32 n2)))) fn(n3 n4))
}

::option_party::print_option_u32::1 {
  enum(n1 n5)
  ::std::u32::to_string = fn(n1 n2)
  ::std::str::concat = fn(tup(5 fn(n0 tup(83 tup(111 tup(109 tup(101 tup(40 n0))))))) fn(n2 n4))
  ::std::str::concat = fn(n4 fn(tup(1 fn(n3 tup(41 n3))) n5))
}

::option_party::print_option_u32::2 { tup(4 fn(n0 tup(78 tup(111 tup(110 tup(101 n0)))))) }

::option_party::print_u32 {
  fn(n0 fn(n3 n6))
  ::std::io::println = fn(n0 fn(n5 n6))
  ::std::u32::to_string = fn(n3 n4)
  ::std::str::concat = fn(tup(2 fn(n2 tup(32 tup(32 n2)))) fn(n4 n5))
}

::option_party::print_bool {
  fn(n0 fn(?(::option_party::print_bool::2 ::option_party::print_bool::1 n2) n3))
  ::std::io::println = fn(n0 fn(n2 n3))
}

::option_party::print_bool::1 { tup(6 fn(n0 tup(32 tup(32 tup(116 tup(114 tup(117 tup(101 n0)))))))) }

::option_party::print_bool::2 { tup(7 fn(n0 tup(32 tup(32 tup(102 tup(97 tup(108 tup(115 tup(101 n0))))))))) }

::option_party::increment_option {
  fn(n0 _)
  ::std::option::Option::as_ref = fn(n0 enum(::option_party::increment_option::1 enum(_ _)))
}

::option_party::increment_option::1 { enum(ref(@add(1 n0) n0) _) }

::option_party::add_options {
  fn(n0 fn(n1 n5))
  ::std::option::Option::and_then = fn(ref(n0 _) fn(fn(@add(n2 n3) n4) n5))
  ::std::option::Option::map = fn(ref(n1 _) fn(fn(n2 n3) n4))
}

::std::io::println {
  fn(ref(n0 n3) fn(n1 _))
  ::std::io::print = fn(ref(n0 n2) fn(n1 _))
  ::std::io::print_char = fn(ref(n2 n3) fn(10 _))
}

::std::io::print {
  fn(ref(n0 n1) fn(tup(n2 fn(_ n3)) _))
  ::std::io::print::1 = x(n0 x(n1 x(n2 n3)))
}

::std::io::print::1 { x(n0 x(n1 x(dup88(?(::std::io::print::3 ::std::io::print::2 x(n0 x(n1 x(n3 n2)))) n3) n2))) }

::std::io::print::2 {
  x(n1 x(n3 x(@sub(1 n4) tup(n0 n5))))
  ::std::io::print_char = fn(ref(n1 n2) fn(n0 _))
  ::std::io::print::1 = x(n2 x(n3 x(n4 n5)))
}

::std::io::print::3 { x(n0 x(n0 _)) }

::std::io::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::option::Option::Some { fn(n0 enum(enum(n0 n1) enum(_ n1))) }

::std::option::Option::None { enum(_ enum(n0 n0)) }

::std::option::Option::map { fn(ref(enum(::std::option::Option::map::1 enum(::std::option::Option::map::2 x(n0 n1))) _) fn(n0 n1)) }

::std::option::Option::map::1 {
  enum(n0 x(fn(n0 n1) n2))
  ::std::option::Option::Some = fn(n1 n2)
}

::std::option::Option::map::2 { x(_ ::std::option::Option::None) }

::std::option::Option::as_ref { fn(ref(enum(::std::option::Option::as_ref::1 enum(::std::option::Option::as_ref::2 x(n2 n3))) n3) n2) }

::std::option::Option::as_ref::1 {
  enum(n0 x(n3 enum(enum(n1 n2) enum(_ n2))))
  ::std::option::Option::Some = fn(ref(n0 n1) n3)
}

::std::option::Option::as_ref::2 { x(::std::option::Option::None enum(_ enum(n0 n0))) }

::std::option::Option::flatten { fn(ref(enum(::std::option::Option::flatten::2 enum(::std::option::Option::None n0)) _) n0) }

::std::option::Option::flatten::2 { enum(enum(::std::option::Option::flatten::3 enum(::std::option::Option::None n0)) n0) }

::std::option::Option::flatten::3 {
  enum(n0 n1)
  ::std::option::Option::Some = fn(n0 n1)
}

::std::option::Option::and_then {
  fn(ref(n0 _) fn(n1 n3))
  ::std::option::Option::map = fn(ref(n0 _) fn(n1 n2))
  ::std::option::Option::flatten = fn(ref(n2 _) n3)
}

::std::option::Option::or { fn(ref(enum(::std::option::Option::or::1 enum(::std::option::Option::or::2 x(n0 n1))) _) fn(n0 n1)) }

::std::option::Option::or::1 { enum(n0 x(_ enum(enum(n0 n1) enum(_ n1)))) }

::std::option::Option::or::2 { x(n0 n0) }

::std::option::Option::unwrap_or { fn(ref(enum(::std::option::Option::unwrap_or::1 enum(::std::option::Option::unwrap_or::2 x(n0 n1))) _) fn(n0 n1)) }

::std::option::Option::unwrap_or::1 { enum(n0 x(_ n0)) }

::std::option::Option::unwrap_or::2 { x(n0 n0) }

::std::option::Option::unwrap { fn(ref(enum(::std::option::Option::unwrap::1 enum(_ n0)) _) n0) }

::std::option::Option::unwrap::1 { enum(n0 n0) }

::std::str::concat { fn(tup(@add(n0 n1) fn(n3 n4)) fn(tup(n0 fn(n2 n3)) tup(n1 fn(n2 n4)))) }

::std::u32::to_string { fn(dup247(?(::std::u32::to_string::5 ::std::u32::to_string::1 x(n1 n0)) n1) n0) }

::std::u32::to_string::1 {
  x(n1 n2)
  ::std::u32::to_string::2 = x(n1 x(tup(0 fn(n0 n0)) n2))
}

::std::u32::to_string::2 { x(dup247(?(::std::u32::to_string::4 ::std::u32::to_string::3 x(n2 n0)) n2) n0) }

::std::u32::to_string::3 {
  x(dup247(@rem(10 n1) @div(10 n5)) x(tup(@add(1 n0) fn(n3 n4)) n6))
  48 = @add(n1 n2)
  ::std::u32::to_string::2 = x(n5 x(tup(n0 fn(n3 tup(n2 n4))) n6))
}

::std::u32::to_string::4 { x(_ x(n0 n0)) }

::std::u32::to_string::5 { x(_ tup(1 fn(n0 tup(48 n0)))) }

