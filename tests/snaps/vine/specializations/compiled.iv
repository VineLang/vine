
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::main { ::specializations::main }

::specializations::main {
  fn(ref(w1 w33) _)
  ::std::data::List::to_string::to_string::1 = fn(tup(4 tup(tup(1 tup(2 tup(3 tup(4 w41)))) w41)) w9)
  ::std::IO::println = fn(ref(w1 w6) fn(w9 _))
  ::std::data::List::to_string::to_string::2 = fn(tup(3 tup(tup(tup(3 tup(tup(97 tup(98 tup(99 w44))) w44)) tup(tup(3 tup(tup(100 tup(101 tup(102 w47))) w47)) tup(tup(3 tup(tup(103 tup(104 tup(105 w50))) w50)) w51))) w51)) w18)
  ::std::IO::println = fn(ref(w6 w12) fn(w18 _))
  ::std::data::List::to_string::to_string::3 = fn(tup(3 tup(tup(120 tup(121 tup(122 w52))) w52)) w24)
  ::std::IO::println = fn(ref(w12 w21) fn(w24 _))
  ::std::data::List::to_string::to_string::4 = fn(tup(2 tup(tup(1 tup(0 w53)) w53)) w30)
  ::std::IO::println = fn(ref(w21 w27) fn(w30 _))
  ::std::data::List::to_string::to_string::5 = fn(tup(2 tup(tup(tup(1 97) tup(tup(2 98) w54)) w54)) w38)
  ::std::IO::println = fn(ref(w27 w33) fn(w38 _))
}

::std::data::List::to_string::to_string::1 {
  fn(w0 tup(w13 tup(tup(91 w14) w15)))
  ::std::data::List::map = fn(w0 fn(::std::numeric::N32::to_string::to_string w5))
  ::std::data::List::join = fn(w5 fn(tup(2 tup(tup(44 tup(32 w12)) w12)) w7))
  ::std::unicode::String::to_string::to_string = fn(w7 tup(@n32_add(2 w13) tup(w14 tup(93 w15))))
}

::std::unicode::String::to_string::to_string { fn(n0 n0) }

::std::numeric::N32::to_string::to_string { fn(dup35(n0 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)))) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup35(n0 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))))) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::5 { x(dup29(@n32_rem(10 @n32_add$(48 n0)) @n32_div(10 dup35(n1 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))))))) x(tup(@n32_add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::data::List::to_string::to_string::2 {
  fn(w0 tup(w13 tup(tup(91 w14) w15)))
  ::std::data::List::map = fn(w0 fn(::std::unicode::String::to_string::to_string w5))
  ::std::data::List::join = fn(w5 fn(tup(2 tup(tup(44 tup(32 w12)) w12)) w7))
  ::std::unicode::String::to_string::to_string = fn(w7 tup(@n32_add(2 w13) tup(w14 tup(93 w15))))
}

::std::data::List::to_string::to_string::3 {
  fn(w0 tup(w13 tup(tup(91 w14) w15)))
  ::std::data::List::map = fn(w0 fn(::std::unicode::Char::to_string::to_string w5))
  ::std::data::List::join = fn(w5 fn(tup(2 tup(tup(44 tup(32 w12)) w12)) w7))
  ::std::unicode::String::to_string::to_string = fn(w7 tup(@n32_add(2 w13) tup(w14 tup(93 w15))))
}

::std::unicode::Char::to_string::to_string { fn(n0 tup(1 tup(tup(n0 n1) n1))) }

::std::data::List::to_string::to_string::4 {
  fn(w0 tup(w13 tup(tup(91 w14) w15)))
  ::std::data::List::map = fn(w0 fn(::std::logical::Bool::to_string::to_string w5))
  ::std::data::List::join = fn(w5 fn(tup(2 tup(tup(44 tup(32 w12)) w12)) w7))
  ::std::unicode::String::to_string::to_string = fn(w7 tup(@n32_add(2 w13) tup(w14 tup(93 w15))))
}

::std::logical::Bool::to_string::to_string { fn(?(::std::logical::Bool::to_string::to_string::3 ::std::logical::Bool::to_string::to_string::2 w6) w6) }

::std::logical::Bool::to_string::to_string::2 { tup(4 tup(tup(116 tup(114 tup(117 tup(101 w4)))) w4)) }

::std::logical::Bool::to_string::to_string::3 { tup(5 tup(tup(102 tup(97 tup(108 tup(115 tup(101 w4))))) w4)) }

::std::data::List::to_string::to_string::5 {
  fn(w0 tup(w13 tup(tup(91 w14) w15)))
  ::std::data::List::map = fn(w0 fn(::std::unicode::ToString::pair::to_string::1 w5))
  ::std::data::List::join = fn(w5 fn(tup(2 tup(tup(44 tup(32 w12)) w12)) w7))
  ::std::unicode::String::to_string::to_string = fn(w7 tup(@n32_add(2 w13) tup(w14 tup(93 w15))))
}

::std::unicode::ToString::pair::to_string::1 {
  fn(tup(w0 w1) tup(w11 tup(tup(40 w12) w13)))
  ::std::numeric::N32::to_string::to_string = fn(w0 tup(@n32_add(4 w14) tup(w12 tup(44 tup(32 w15)))))
  ::std::unicode::Char::to_string::to_string = fn(w1 tup(@n32_add(w14 w11) tup(w15 tup(41 w13))))
}

::std::data::List::map { fn(tup(dup187(n0 dup35(n1 @n32_ne(0 ?(::std::data::List::map::3 ::std::data::List::map::2 x(n1 x(n2 x(n3 x(n4 n5)))))))) tup(n2 _)) fn(n3 tup(n0 tup(n4 n5)))) }

::std::data::List::map::2 { x(@n32_sub(1 dup35(n0 @n32_ne(0 ?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 x(n1 x(n2 x(n3 n4)))))))) x(tup(n5 n1) x(dup207(fn(n5 n6) n2) x(tup(n6 n3) n4)))) }

::std::data::List::map::3 { x(_ x(_ x(_ x(n0 n0)))) }

::std::data::List::join { fn(tup(dup35(n0 @n32_ne(0 ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n0 n1) x(x(n2 n3) enum(::std::data::List::join::4 enum(::std::data::List::join::5 x(n4 x(tup(n1 n3) n5))))))))) tup(n2 _)) fn(n4 n5)) }

::std::data::List::join::4 { enum(n0 x(n1 x(tup(dup35(n2 @n32_ne(0 ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n2 n3) x(x(n4 n5) enum(::std::data::List::join::9 enum(::std::data::List::join::10 x(n1 x(tup(n3 n5) x(n0 n6)))))))))) n4) n6))) }

::std::data::List::join::5 { x(_ x(_ tup(0 tup(n0 n0)))) }

::std::data::List::join::9 { enum(tup(n0 tup(n1 n2)) x(dup286(tup(@n32_add(n0 n3) tup(n4 n1)) n5) x(tup(dup35(n6 @n32_ne(0 ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::data::List::join::9 enum(::std::data::List::join::10 x(n5 x(tup(n7 n9) x(tup(n10 tup(n11 n2)) n12)))))))))) n8) x(tup(@n32_add(n3 n10) tup(n11 n4)) n12)))) }

::std::data::List::join::10 { x(_ x(_ x(n0 n0))) }

::std::data::List::IntoIter::next::2 { x(x(@n32_sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::IntoIter::next::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup35(n2 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))))) tup(n3 _)) _)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@n32_sub(1 dup35(n3 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4)))))) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

