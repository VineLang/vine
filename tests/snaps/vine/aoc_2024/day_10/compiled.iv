
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::std::IO::read_byte { fn(ref(dup(n0 @io_read_byte(n1 dup(n2 @seq$(n0 n3)))) n3) fn(n1 n2)) }

::main { ::day_10::main }

::day_10::main {
  fn(ref(w1 w41) _)
  ::std::IO::full_input = fn(ref(w1 w6) w8)
  ::std::unicode::String::split_trim = fn(w8 fn(tup(1 tup(tup(10 w50) w50)) w15))
  ::std::data::List::map = fn(w15 fn(fn(w51 w51) w17))
  ::day_10::cross = fn(w17 fn(fn(dup13(w108 dup13(w110 dup13(w112 dup13(w114 dup13(@eq(48 ?(::day_10::main::5 ::day_10::main::4 x(w143 x(x(w66 w142) x(x(w68 w140) x(x(w70 w138) x(w77 x(w78 x(w85 x(w86 x(w93 x(w94 x(w101 x(w102 dup41(w118 dup41(w120 dup41(w122 w124))))))))))))))))) w143))))) fn(tup(tup(tup(w77 w78) tup(w108 w118)) tup(tup(tup(w85 w86) tup(w110 w120)) tup(tup(tup(w93 w94) tup(w112 w122)) tup(tup(w101 w102) tup(w114 w124))))) fn(ref(tup(w64 tup(w66 tup(w68 w70))) tup(w64 tup(w142 tup(w140 w138)))) _))) fn(tup(46 0) fn(ref(tup(w6 0) tup(w22 tup(_ tup(w26 w28)))) _))))
  ::std::numeric::N32::to_string::to_string = fn(w26 tup(@add(8 w144) tup(w145 w146)))
  ::std::IO::println = fn(ref(w22 w34) fn(tup(w144 tup(tup(83 tup(99 tup(111 tup(114 tup(101 tup(115 tup(58 tup(32 w145)))))))) w146)) _))
  ::std::numeric::N32::to_string::to_string = fn(w28 tup(@add(9 w149) tup(w150 w151)))
  ::std::IO::println = fn(ref(w34 w41) fn(tup(w149 tup(tup(82 tup(97 tup(116 tup(105 tup(110 tup(103 tup(115 tup(58 tup(32 w150))))))))) w151)) _))
}

::day_10::main::4 {
  x(_ x(x(dup50(w0 @add(1 w3)) w3) x(x(w19 w19) x(x(w17 w17) x(_ x(_ x(_ x(_ x(_ x(_ x(_ x(_ tup(w5 1)))))))))))))
  ::day_10::set = fn(w0 w5)
}

::day_10::main::5 {
  x(dup55(@sub(1 dup69(w43 dup69(w49 dup69(w55 w61)))) @eq(57 ?(::day_10::main::12 ::day_10::main::11 x(w34 x(w32 x(w60 x(w58 w64))))))) x(x(w36 w36) x(w34 x(w32 x(w30 x(w29 x(w28 x(w27 x(w26 x(w25 x(w24 x(w23 w64))))))))))))
  ::day_10::main::6 = x(w43 x(x(0 w42) x(x(0 w40) fn(w30 fn(w29 _)))))
  ::day_10::main::6 = x(w49 x(x(w42 w48) x(x(w40 w46) fn(w28 fn(w27 _)))))
  ::day_10::main::6 = x(w55 x(x(w48 w54) x(x(w46 w52) fn(w26 fn(w25 _)))))
  ::day_10::main::6 = x(w61 x(x(w54 w60) x(x(w52 w58) fn(w24 fn(w23 _)))))
}

::day_10::main::6 { x(w12 x(w11 x(w9 fn(@eq(w12 ?(::day_10::main::9 ::day_10::main::8 x(w11 x(w9 x(w1 x(w2 w16)))))) fn(tup(w1 w2) w16))))) }

::day_10::main::8 { x(x(@n32_or(w8 w2) w2) x(x(@add(w7 w5) w5) x(w8 x(w7 _)))) }

::day_10::main::9 { x(x(w6 w6) x(x(w4 w4) _)) }

::day_10::main::11 {
  x(x(@add(w1 w3) w3) x(x(@add(w8 w6) w6) x(w9 x(w8 _))))
  ::day_10::count = fn(w9 w1)
}

::day_10::main::12 { x(x(w9 w9) x(x(w7 w7) x(w5 x(w4 tup(w5 w4))))) }

::std::numeric::N32::to_string::to_string { fn(dup118(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup127(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup127(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup130(@rem(10 @add$(48 n0)) @div(10 dup127(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::day_10::set { fn(dup137(@n32_shl$(1 n0) dup137(@n32_and(32 ?(::day_10::set::f::3 ::day_10::set::f::2 x(n0 x(0 n1)))) dup137(@n32_and(64 ?(::day_10::set::f::3 ::day_10::set::f::2 x(n1 x(0 n2)))) @n32_and(128 ?(::day_10::set::f::3 ::day_10::set::f::2 x(n2 x(0 n3))))))) n3) }

::day_10::set::f { fn(?(::day_10::set::f::3 ::day_10::set::f::2 x(n0 x(n1 n2))) fn(n0 fn(n1 n2))) }

::day_10::set::f::2 { x(n0 x(n1 tup(n1 n0))) }

::day_10::set::f::3 { x(n0 x(n1 tup(n0 n1))) }

::day_10::count { fn(tup(tup(tup(dup168(?(::day_10::count::4 ::day_10::count::3 x(n0 x(0 @add(n1 @add(n2 @add(n3 n4)))))) n0) dup168(?(::day_10::count::4 ::day_10::count::3 x(n5 x(0 n1))) n5)) tup(dup168(?(::day_10::count::4 ::day_10::count::3 x(n6 x(0 @add(n7 n2)))) n6) dup168(?(::day_10::count::4 ::day_10::count::3 x(n8 x(0 n7))) n8))) tup(tup(dup168(?(::day_10::count::4 ::day_10::count::3 x(n9 x(0 @add(n10 @add(n11 n3))))) n9) dup168(?(::day_10::count::4 ::day_10::count::3 x(n12 x(0 n10))) n12)) tup(dup168(?(::day_10::count::4 ::day_10::count::3 x(n13 x(0 @add(n14 n11)))) n13) dup168(?(::day_10::count::4 ::day_10::count::3 x(n15 x(0 n14))) n15)))) n4) }

::day_10::count::1 { fn(dup168(?(::day_10::count::4 ::day_10::count::3 x(n0 x(0 n1))) n0) n1) }

::day_10::count::2 { x(dup168(?(::day_10::count::4 ::day_10::count::3 x(n0 n1)) n0) n1) }

::day_10::count::3 { x(dup171(@n32_and(1 n0) @n32_shr(1 dup168(?(::day_10::count::4 ::day_10::count::3 x(n1 x(n2 n3))) n1))) x(@add(n0 n2) n3)) }

::day_10::count::4 { x(_ x(n0 n0)) }

::day_10::count::5 { fn(tup(dup168(?(::day_10::count::4 ::day_10::count::3 x(n0 x(0 @add(n1 n2)))) n0) dup168(?(::day_10::count::4 ::day_10::count::3 x(n3 x(0 n1))) n3)) n2) }

::day_10::count::6 { fn(tup(tup(dup168(?(::day_10::count::4 ::day_10::count::3 x(n0 x(0 @add(n1 @add(n2 n3))))) n0) dup168(?(::day_10::count::4 ::day_10::count::3 x(n4 x(0 n1))) n4)) tup(dup168(?(::day_10::count::4 ::day_10::count::3 x(n5 x(0 @add(n6 n2)))) n5) dup168(?(::day_10::count::4 ::day_10::count::3 x(n7 x(0 n6))) n7))) n3) }

::day_10::Channel::send { fn(tup(n0 n1) fn(n1 n0)) }

::day_10::cross { fn(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(tup(tup(n2 n3) n4) n5) enum(::day_10::cross::4 enum(::day_10::cross::5 x(tup(n1 tup(n5 n6)) x(n7 x(n8 x(x(n9 n10) x(n11 tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n12 n13) x(x(n14 n15) enum(::day_10::drop_all::4 enum(_ x(tup(n13 tup(n15 n16)) n17)))))) n12) tup(n14 n16)))))))))))) n0) tup(tup(tup(dup317(dup328(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n18 x(tup(n19 _) x(tup(0 tup(n20 n20)) n11))))) n18) n2) n3) n4) n6)) fn(n7 fn(dup224(n19 dup224(n8 n17)) fn(ref(n9 n10) _)))) }

::day_10::cross::1 { x(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) enum(::day_10::cross::4 enum(::day_10::cross::5 x(tup(n1 tup(n3 n4)) n5)))))) n0) tup(n2 n4)) n5) }

::day_10::cross::4 { enum(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) enum(::day_10::cross::10 enum(::day_10::cross::11 x(n4 x(x(n5 n6) x(tup(n1 tup(n3 n7)) x(x(tup(n8 _) tup(_ n9)) x(tup(n10 ref(n11 n12)) tup(_ ref(n13 n13)))))))))))) n0) tup(n2 n7)) x(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n14 n15) x(x(n16 n17) enum(::day_10::cross::4 enum(::day_10::cross::5 x(tup(n15 tup(n17 n18)) x(n19 x(n20 x(x(n6 n21) x(tup(n22 tup(n12 n23)) n24)))))))))) n14) tup(n16 n18)) x(dup242(n4 n19) x(dup243(n8 dup243(n9 n20)) x(x(n5 n21) x(tup(dup557(n22 n10) tup(n11 n23)) n24)))))) }

::day_10::cross::5 { x(_ x(_ x(_ x(x(n0 n0) x(n1 n1))))) }

::day_10::cross::7 { x(n0 x(n1 x(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n2 n3) x(x(n4 n5) enum(::day_10::cross::10 enum(::day_10::cross::11 x(n0 x(n1 x(tup(n3 tup(n5 n6)) n7)))))))) n2) tup(n4 n6)) n7))) }

::day_10::cross::10 { enum(n0 x(dup269(fn(n0 fn(tup(n1 tup(tup(dup309(_ n2) n3) tup(tup(dup309(_ n4) n5) n6))) fn(ref(n7 n8) _))) n9) x(x(n7 n10) x(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n11 n12) x(x(n13 n14) enum(::day_10::cross::10 enum(::day_10::cross::11 x(n9 x(x(n8 n10) x(tup(n12 tup(n14 n15)) x(x(tup(dup308(_ n5) n4) n16) x(tup(n17 n18) n19)))))))))) n11) tup(n13 n15)) x(x(n6 n16) x(tup(dup563(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n20 n17) x(x(n21 n18) enum(::std::logical::Option::unwrap::3 enum(_ ref(n1 tup(dup308(_ n3) n2))))))) n20) n21) n19)))))) }

::day_10::cross::11 { x(_ x(x(n0 n0) x(_ x(x(n1 n1) x(n2 n2))))) }

::day_10::drop_all { fn(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) enum(::day_10::drop_all::4 enum(_ x(tup(n1 tup(n3 n4)) n5)))))) n0) tup(n2 n4)) fn(n5 _)) }

::day_10::drop_all::1 { x(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) enum(::day_10::drop_all::4 enum(_ x(tup(n1 tup(n3 n4)) n5)))))) n0) tup(n2 n4)) n5) }

::day_10::drop_all::4 { enum(tup(_ n0) x(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n1 n2) x(x(n3 n4) enum(::day_10::drop_all::4 enum(_ x(tup(n2 tup(n4 n5)) n6)))))) n1) tup(n3 n5)) dup298(n0 n6))) }

::day_10::foo_channel { fn(ref(n0 tup(dup308(_ n1) n2)) tup(n0 tup(dup309(_ n2) n1))) }

::day_10::new_channel { tup(tup(dup308(_ n0) n1) tup(dup309(_ n1) n0)) }

::day_10::neglect_channel { fn(n0 tup(n0 _)) }

::std::data::List::len { fn(ref(tup(dup317(n0 n1) n2) tup(n1 n2)) n0) }

::std::data::List::new { fn(dup328(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 x(n1 x(tup(0 tup(n2 n2)) n3))))) n0) fn(n1 n3)) }

::std::data::List::new::1 { x(dup328(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 n1))) n0) n1) }

::std::data::List::new::2 { x(@sub(1 dup328(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 x(n1 x(tup(n2 tup(n3 n4)) n5))))) n0)) x(dup334(n6 n1) x(tup(@add(1 n2) tup(n3 tup(n6 n4))) n5))) }

::std::data::List::new::3 { x(_ x(_ x(n0 n0))) }

::std::data::List::get { fn(ref(tup(n0 tup(n1 n2)) tup(n0 tup(n3 n2))) fn(dup348(?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n3) ref(tup(n4 n5) tup(n6 n5))) n7)) n7) ref(n4 n6))) }

::std::data::List::get::1 { x(n0 dup348(?(::std::data::List::get::3 ::std::data::List::get::2 x(n0 n1)) n1)) }

::std::data::List::get::2 { x(x(ref(tup(n0 n1) tup(n0 n2)) n3) @sub(1 dup348(?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n2) n3) n4)) n4))) }

::std::data::List::get::3 { x(x(n0 n0) _) }

::std::data::List::map { fn(tup(dup380(n0 dup390(?(::std::data::List::map::3 ::std::data::List::map::2 x(n1 x(n2 x(n3 x(n4 n5))))) n1)) tup(n2 _)) fn(n3 tup(n0 tup(n4 n5)))) }

::std::data::List::map::1 { x(dup390(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 n1)) n0) n1) }

::std::data::List::map::2 { x(@sub(1 dup390(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 x(n1 x(n2 x(n3 n4))))) n0)) x(tup(n5 n1) x(dup399(fn(n5 n6) n2) x(tup(n6 n3) n4)))) }

::std::data::List::map::3 { x(_ x(_ x(_ x(n0 n0)))) }

::std::data::List::pop_front { fn(ref(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) tup(n2 n5)) tup(n1 tup(n3 n5))) n4) }

::std::data::List::pop_front::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::pop_front::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::data::List::push_back { fn(ref(tup(@add(1 n0) tup(n1 tup(n2 n3))) tup(n0 tup(n1 n3))) fn(n2 _)) }

::std::data::List::iter { fn(ref(tup(dup557(n0 n1) tup(n2 n3)) tup(n0 tup(n4 n3))) tup(n1 ref(n2 n4))) }

::std::data::List::Iter::next { fn(ref(tup(dup563(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::Iter::next::2 { x(x(@sub(1 n0) n0) x(x(ref(tup(n1 n2) tup(n3 n4)) ref(n2 n4)) enum(enum(ref(n1 n3) n5) enum(_ n5)))) }

::std::data::List::Iter::next::3 { x(x(n0 n0) x(x(ref(n1 n1) _) ::std::logical::Option::None)) }

::std::data::List::Iter::drop { fn(ref(tup(_ ref(n0 n0)) _) _) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::unicode::String::len { fn(ref(tup(dup2100(n0 n1) n2) tup(n0 n2)) n1) }

::std::unicode::String::split_trim { fn(tup(dup2100(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(tup(dup2100(n6 @eq(0 dup2144(?(::std::unicode::String::split_trim::4 ::std::unicode::String::split_trim::3 x(1 dup2137(?(::std::unicode::String::split_trim::10 ::std::unicode::String::split_trim::9 x(x(tup(0 tup(n7 n7)) n8) x(n9 x(tup(n6 n10) _)))) n11))) ?(::std::unicode::String::split_trim::16 ::std::unicode::String::split_trim::15 x(n12 dup2139(_ n9)))))) n10) enum(::std::unicode::String::split_trim::23 enum(::std::unicode::String::split_trim::24 x(n13 x(n8 x(n11 x(x(n12 1) n14))))))))))))) n5) fn(dup2133(tup(dup2100(n2 n1) n3) n13) n14)) }

::std::unicode::String::split_trim::1 { x(tup(dup2100(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(tup(dup2100(n6 @eq(0 dup2144(?(::std::unicode::String::split_trim::4 ::std::unicode::String::split_trim::3 x(n7 dup2137(?(::std::unicode::String::split_trim::10 ::std::unicode::String::split_trim::9 x(x(n8 n9) x(n10 x(tup(n6 n11) _)))) n12))) ?(::std::unicode::String::split_trim::16 ::std::unicode::String::split_trim::15 x(n13 dup2139(n14 n10)))))) n11) enum(::std::unicode::String::split_trim::23 enum(::std::unicode::String::split_trim::24 x(n15 x(n9 x(n12 x(x(n13 n16) n17))))))))))))) n5) x(dup2133(tup(dup2100(n2 n1) n3) n15) x(n8 x(n7 x(x(n14 n16) n17))))) }

::std::unicode::String::split_trim::3 { x(?(0 1 n0) n0) }

::std::unicode::String::split_trim::4 { x(_ 0) }

::std::unicode::String::split_trim::9 { x(x(n0 n0) _) }

::std::unicode::String::split_trim::10 { x(n0 x(?(::std::unicode::String::split_trim::12 ::std::unicode::String::split_trim::11 x(n0 n1)) n1)) }

::std::unicode::String::split_trim::11 { x(x(n0 n0) _) }

::std::unicode::String::split_trim::12 { x(x(tup(@add(1 n0) tup(n1 tup(n2 n3))) tup(n0 tup(n1 n3))) x(n2 _)) }

::std::unicode::String::split_trim::15 { x(?(0 1 n0) n0) }

::std::unicode::String::split_trim::16 { x(_ 0) }

::std::unicode::String::split_trim::23 { enum(tup(dup2100(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(tup(dup2100(n6 @eq(0 dup2144(?(::std::unicode::String::split_trim::4 ::std::unicode::String::split_trim::3 x(n7 dup2137(?(::std::unicode::String::split_trim::10 ::std::unicode::String::split_trim::9 x(x(n8 n9) x(n10 x(tup(n6 n11) _)))) n12))) ?(::std::unicode::String::split_trim::16 ::std::unicode::String::split_trim::15 x(n13 dup2139(n14 n10)))))) n11) enum(::std::unicode::String::split_trim::23 enum(::std::unicode::String::split_trim::24 x(n15 x(n9 x(n12 x(x(n13 n16) n17))))))))))))) n5) x(dup2133(tup(dup2100(n2 n1) n3) n15) x(n8 x(n7 x(x(n14 n16) n17))))) }

::std::unicode::String::split_trim::24 { x(_ x(n0 x(_ x(x(n1 n1) n0)))) }

::std::unicode::String::split_once { fn(tup(dup2100(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) n6)))))) n5) fn(tup(dup2100(n2 n1) n3) n6)) }

::std::unicode::String::split_once::1 { x(tup(dup2100(n0 n1) n2) x(n3 x(tup(dup2100(n4 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))) n5) n6))) }

::std::unicode::String::split_once::2 { x(tup(dup557(n0 dup563(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n1 n2) x(x(ref(n3 n4) n5) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(tup(n0 tup(n4 n6)) x(n7 x(tup(n8 tup(n9 n10)) x(tup(n2 n5) x(tup(n11 ref(n12 n9)) n13)))))))))) n1)) tup(n3 n6)) x(n7 x(tup(dup557(n8 n11) tup(n12 n10)) n13))) }

::std::unicode::String::split_once::3 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::5 { x(n0 x(n1 x(n2 x(tup(dup563(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n3 n4) x(x(n5 n6) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(n0 x(n1 x(n2 x(tup(n4 n6) n7))))))))) n3) n5) n7)))) }

::std::unicode::String::split_once::8 { enum(ref(dup2223(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(tup(dup563(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::unicode::String::split_once::12 enum(::std::unicode::String::split_once::13 x(n2 x(n3 x(n4 x(n5 x(tup(n7 n9) x(n1 n10))))))))))) n6) n8) n10)))))) }

::std::unicode::String::split_once::9 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))))) }

::std::unicode::String::split_once::12 { enum(ref(dup2237(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(n6 x(@ne(n1 ?(::std::unicode::String::split_once::5 ::std::unicode::String::split_once::16 x(n2 x(n3 x(n4 x(n5 x(n6 n7))))))) n7))))))) }

::std::unicode::String::split_once::13 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) x(_ tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4))))))))) }

::std::unicode::String::split_once::14 { x(n0 x(tup(_ tup(_ n1)) x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))) }

::std::unicode::String::split_once::16 { x(n0 x(n1 x(tup(dup409(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n2 n3) x(x(n4 n5) enum(::std::unicode::String::split_once::21 enum(::std::unicode::String::split_once::22 x(n0 x(n1 x(tup(n3 tup(n5 n6)) n7)))))))) n2) tup(n4 n6)) x(tup(_ ref(n8 n8)) x(tup(_ ref(n9 n9)) n7))))) }

::std::unicode::String::split_once::21 { enum(n0 x(tup(dup2100(n1 n2) n3) x(tup(@add(1 n4) tup(n5 tup(n0 n6))) x(tup(dup2100(n7 @le$(n2 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n1 n3) x(tup(n4 tup(n5 n6)) x(tup(n7 n8) n9)))))) n8) n9)))) }

::std::unicode::String::split_once::22 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::23 { x(tup(@add(n0 n1) tup(n2 n3)) x(tup(n0 tup(n3 n4)) tup(tup(n1 tup(n2 n4)) ::std::logical::Option::None))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2473(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2473(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2473(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2473(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

::std::IO::full_input { fn(ref(dup(n0 @io_read_byte(0 dup(dup2563(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(tup(0 tup(n3 n3)) x(n4 n5))))) n4) @seq$(n0 n1)))) n2) n5) }

::std::IO::full_input::1 { x(x(dup(n0 @io_read_byte(0 dup(dup2563(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(n3 x(n4 n5))))) n4) @seq$(n0 n1)))) n2) x(n3 n5)) }

::std::IO::full_input::3 { x(x(dup(n0 @io_read_byte(0 dup(dup2563(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(tup(n3 tup(n4 n5)) x(n6 n7))))) n6) @seq$(n0 n1)))) n2) x(tup(@add(1 n3) tup(n4 tup(n8 n5))) x(n8 n7))) }

::std::IO::full_input::4 { x(x(n0 n0) x(n1 x(_ n1))) }

