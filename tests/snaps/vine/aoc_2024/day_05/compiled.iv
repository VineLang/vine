
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::std::IO::read_byte { fn(ref(dup(n0 @io_read_byte(n1 dup(n2 @seq$(n0 n3)))) n3) fn(n1 n2)) }

::main { ::day_05::main }

::day_05::main {
  fn(ref(w1 w20) _)
  ::std::data::List::new = fn(100 fn(0 w8))
  ::day_05::main::1 = x(x(w1 w30) x(w8 w28))
  ::day_05::main::9 = x(x(w30 w37) x(w28 x(x(0 w34) x(0 w32))))
  ::std::numeric::N32::to_string::to_string = fn(w34 tup(@add(8 w38) tup(w39 w40)))
  ::std::IO::println = fn(ref(w37 w13) fn(tup(w38 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w39)))))))) w40)) _))
  ::std::numeric::N32::to_string::to_string = fn(w32 tup(@add(8 w43) tup(w44 w45)))
  ::std::IO::println = fn(ref(w13 w20) fn(tup(w43 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w44)))))))) w45)) _))
}

::day_05::main::1 {
  x(x(w8 w12) w6)
  ::std::IO::read_line = fn(ref(w8 w1) enum(::day_05::main::4 enum(::day_05::main::5 x(x(w1 w12) w6))))
}

::day_05::main::4 {
  enum(w0 x(w5 w3))
  ::std::unicode::String::len = fn(ref(w0 w7) ?(::day_05::main::7 ::day_05::main::6 x(w5 x(w3 w7))))
}

::day_05::main::5 { x(x(w3 w3) x(w1 w1)) }

::day_05::main::6 {
  x(w26 x(x(w24 w31) w22))
  ::std::unicode::String::split_once = fn(w22 fn(tup(1 tup(tup(124 w29) w29)) tup(w3 w4)))
  ::std::numeric::N32::parse = fn(w3 w7)
  ::std::logical::Option::unwrap = fn(w7 w8)
  ::std::logical::Option::unwrap = fn(w4 w11)
  ::std::numeric::N32::parse = fn(w11 w12)
  ::std::logical::Option::unwrap = fn(w12 w13)
  ::std::data::List::get = fn(ref(w24 w16) fn(w13 w19))
  ::day_05::set_bit = fn(w19 fn(w8 fn(1 _)))
  ::day_05::main::1 = x(w26 x(w16 w31))
}

::day_05::main::7 { x(x(w4 w4) x(x(w2 w2) _)) }

::day_05::main::9 {
  x(x(w11 w18) w9)
  ::std::IO::read_line = fn(ref(w11 w1) enum(::day_05::main::12 enum(::day_05::main::13 x(x(w1 w18) w9))))
}

::day_05::main::12 {
  enum(w0 x(w8 x(w6 x(x(w5 w72) x(w3 w70)))))
  ::std::unicode::String::split = fn(w0 fn(tup(1 tup(tup(44 w45) w45)) w11))
  ::std::numeric::N32::parse = fn(w46 w50)
  ::std::logical::Option::unwrap = fn(w50 w51)
  ::std::data::List::map = fn(w11 fn(fn(w46 w51) w13))
  ::std::data::List::len = fn(ref(w17 w20) @div(2 w23))
  ::std::data::List::get = fn(ref(w13 w17) fn(w23 ref(dup50(w27 w26) w26)))
  ::std::data::List::iter = fn(ref(w20 w34) w36)
  ::day_05::main::15 = x(x(w6 w58) x(x(1 ?(::day_05::main::22 ::day_05::main::21 x(x(w58 w68) x(x(w5 w66) x(x(w3 w64) x(w34 x(w27 _))))))) x(0 x(w36 w53))))
  ::std::data::List::Iter::drop = fn(ref(w53 _) _)
  ::day_05::main::9 = x(w8 x(w68 x(x(w66 w72) x(w64 w70))))
}

::day_05::main::13 { x(x(w6 w6) x(_ x(x(w3 w3) x(w1 w1)))) }

::day_05::main::15 {
  x(w11 x(w9 x(w7 x(w6 w13))))
  ::std::data::List::Iter::next = fn(ref(w6 w1) enum(::day_05::main::18 enum(::day_05::main::19 x(w11 x(w9 x(w7 x(w1 w13)))))))
}

::day_05::main::18 {
  enum(ref(dup101(w1 dup101(w12 w20)) w1) x(x(w10 w33) x(x(@n32_and(w14 w16) w31) x(dup97(w11 @n32_or(w24 w26)) w5))))
  ::day_05::get_bit = fn(w11 fn(w12 @eq(0 w14)))
  ::std::data::List::get = fn(ref(w10 w18) fn(w20 ref(dup90(w24 w23) w23)))
  ::day_05::main::15 = x(x(w18 w33) x(x(w16 w31) x(w26 w5)))
}

::day_05::main::19 { x(x(w6 w6) x(x(w4 w4) x(_ x(w1 w1)))) }

::day_05::main::21 { x(x(w11 w11) x(x(@add(w4 w2) w2) x(x(w7 w7) x(_ x(w4 _))))) }

::day_05::main::22 {
  x(w35 x(x(w33 w33) x(x(@add(w24 w26) w26) x(w29 _))))
  ::std::data::List::iter = fn(ref(w29 w5) w7)
  ::day_05::main::23 = x(x(0 w38) w7)
  ::day_05::main::28 = x(w35 x(w5 x(w38 x(x(tup(0 tup(w39 w39)) w43) tup(0 tup(w40 w40))))))
  ::std::data::List::len = fn(ref(w14 _) @div(2 w20))
  ::std::data::List::get = fn(ref(w43 w14) fn(w20 ref(dup112(w24 w23) w23)))
}

::day_05::main::23 {
  x(w7 w5)
  ::std::data::List::Iter::next = fn(ref(w5 w1) enum(::day_05::main::26 enum(::day_05::main::27 x(w7 w1))))
}

::day_05::main::26 {
  enum(ref(dup137(w1 w10) w1) x(x(w6 w14) w4))
  ::day_05::set_bit = fn(ref(w6 w8) fn(w10 fn(1 _)))
  ::day_05::main::23 = x(x(w8 w14) w4)
}

::day_05::main::27 { x(x(w2 w2) _) }

::day_05::main::28 {
  x(w11 x(w9 w8))
  ::std::data::List::pop_front = fn(ref(w9 w1) enum(::day_05::main::31 enum(::day_05::main::32 x(w11 x(w1 w8)))))
}

::day_05::main::31 {
  enum(dup161(w12 w25) x(x(w8 w38) x(w6 x(dup154(w17 w30) x(x(w4 w34) w2)))))
  ::std::data::List::get = fn(ref(w8 w10) fn(w12 ref(dup149(@n32_and(w17 dup162(w21 w24)) w15) w15)))
  ::day_05::is_empty = fn(w21 ?(::day_05::main::35 ::day_05::main::34 x(x(w30 w31) x(x(w4 w29) x(x(w2 w27) x(w25 x(w24 _)))))))
  ::day_05::main::28 = x(x(w10 w38) x(w6 x(w31 x(x(w29 w34) w27))))
}

::day_05::main::32 { x(x(w6 w6) x(_ x(_ x(x(w2 w2) _)))) }

::day_05::main::34 {
  x(x(w19 w6) x(x(w17 w2) x(x(w15 w4) x(w13 _))))
  ::day_05::main::process = fn(w13 fn(ref(tup(w17 tup(w15 w19)) tup(w2 tup(w4 w6))) _))
}

::day_05::main::35 {
  x(x(w14 w14) x(x(w12 w12) x(x(w10 w5) x(w8 x(w7 _)))))
  ::std::data::List::concat = fn(w10 fn(tup(1 tup(tup(tup(w8 w7) w15) w15)) w5))
}

::std::numeric::N32::to_string::to_string { fn(dup182(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup191(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup191(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup194(@rem(10 @add$(48 n0)) @div(10 dup191(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::day_05::main::process {
  fn(dup200(w12 dup200(w19 w50)) fn(ref(tup(w2 tup(w4 w6)) w33) _))
  ::std::data::List::concat = fn(w2 fn(tup(1 tup(tup(w12 w43) w43)) w15))
  ::day_05::set_bit = fn(ref(w6 w17) fn(w19 fn(0 _)))
  ::std::data::List::into_iter = fn(w4 w28)
  ::day_05::main::process::1 = x(w50 x(x(tup(0 tup(w44 w44)) w49) x(x(w25 w47) w28)))
  ref(w25 w47) = ref(tup(w15 tup(w49 w17)) w33)
}

::day_05::main::process::1 {
  x(w10 x(w9 x(w7 w5)))
  ::std::data::List::IntoIter::next = fn(ref(w5 w1) enum(::day_05::main::process::4 enum(::day_05::main::process::5 x(w10 x(w9 x(w7 w1))))))
}

::day_05::main::process::4 {
  enum(tup(w2 w3) x(dup225(w15 w32) x(x(w10 w31) x(x(w8 w29) w6))))
  ::day_05::set_bit = fn(ref(w3 dup235(w18 w21)) fn(w15 fn(0 _)))
  ::day_05::is_empty = fn(w18 ?(::day_05::main::process::8 ::day_05::main::process::7 x(x(w10 w26) x(x(w8 w24) x(w2 x(w21 _))))))
  ::day_05::main::process::1 = x(w32 x(x(w26 w31) x(x(w24 w29) w6)))
}

::day_05::main::process::5 { x(_ x(x(w4 w4) x(x(w2 w2) _))) }

::day_05::main::process::7 {
  x(x(w11 w11) x(x(w9 w2) x(w7 _)))
  ::day_05::main::process = fn(w7 fn(ref(w9 w2) _))
}

::day_05::main::process::8 {
  x(x(w12 w5) x(x(w10 w10) x(w8 x(w7 _))))
  ::std::data::List::concat = fn(w12 fn(tup(1 tup(tup(tup(w8 w7) w13) w13)) w5))
}

::day_05::get_bit { fn(tup(n0 n1) fn(dup254(@n32_and(64 ?(::day_05::get_bit::3 ::day_05::get_bit::2 x(n0 x(n1 tup(n2 n3))))) dup254(@n32_and(32 ?(::day_05::get_bit::6 ::day_05::get_bit::5 x(n2 x(n3 @n32_and(n4 @ne(0 n5)))))) @n32_shl$(1 n4))) n5)) }

::day_05::get_bit::2 { x(_ x(n0 n0)) }

::day_05::get_bit::3 { x(n0 x(_ n0)) }

::day_05::get_bit::5 { x(_ x(n0 n0)) }

::day_05::get_bit::6 { x(n0 x(_ n0)) }

::day_05::set_bit { fn(ref(tup(n0 n1) tup(n2 n3)) fn(dup275(@n32_and(64 ?(::day_05::set_bit::3 ::day_05::set_bit::2 x(x(n0 n2) x(x(n1 n3) ref(tup(n4 n5) tup(n6 n7)))))) dup275(@n32_and(32 ?(::day_05::set_bit::6 ::day_05::set_bit::5 x(x(n4 n6) x(x(n5 n7) ref(n8 n9))))) n10)) fn(?(::day_05::set_bit::9 ::day_05::set_bit::8 x(n10 x(x(n8 n9) n11))) n11))) }

::day_05::set_bit::2 { x(x(n0 n0) x(x(n1 n2) ref(n1 n2))) }

::day_05::set_bit::3 { x(x(n0 n1) x(x(n2 n2) ref(n0 n1))) }

::day_05::set_bit::5 { x(x(n0 n0) x(x(n1 n2) ref(n1 n2))) }

::day_05::set_bit::6 { x(x(n0 n1) x(x(n2 n2) ref(n0 n1))) }

::day_05::set_bit::8 { x(@n32_shl$(1 n0) x(x(@n32_or(n0 n1) n1) _)) }

::day_05::set_bit::9 { x(@n32_shl$(1 @n32_xor$(4294967295 n0)) x(x(@n32_and(n0 n1) n1) _)) }

::day_05::is_empty { fn(tup(tup(@n32_or(n0 @n32_or(n1 @n32_or(n2 @eq(0 n3)))) n0) tup(n1 n2)) n3) }

::std::data::List::len { fn(ref(tup(dup323(n0 n1) n2) tup(n1 n2)) n0) }

::std::data::List::new { fn(dup334(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 x(n1 x(tup(0 tup(n2 n2)) n3))))) n0) fn(n1 n3)) }

::std::data::List::new::1 { x(dup334(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 n1))) n0) n1) }

::std::data::List::new::2 { x(@sub(1 dup334(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 x(n1 x(tup(n2 tup(n3 n4)) n5))))) n0)) x(dup340(n6 n1) x(tup(@add(1 n2) tup(n3 tup(n6 n4))) n5))) }

::std::data::List::new::3 { x(_ x(_ x(n0 n0))) }

::std::data::List::get { fn(ref(tup(n0 tup(n1 n2)) tup(n0 tup(n3 n2))) fn(dup354(?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n3) ref(tup(n4 n5) tup(n6 n5))) n7)) n7) ref(n4 n6))) }

::std::data::List::get::1 { x(n0 dup354(?(::std::data::List::get::3 ::std::data::List::get::2 x(n0 n1)) n1)) }

::std::data::List::get::2 { x(x(ref(tup(n0 n1) tup(n0 n2)) n3) @sub(1 dup354(?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n2) n3) n4)) n4))) }

::std::data::List::get::3 { x(x(n0 n0) _) }

::std::data::List::map { fn(tup(dup386(n0 dup396(?(::std::data::List::map::3 ::std::data::List::map::2 x(n1 x(n2 x(n3 x(n4 n5))))) n1)) tup(n2 _)) fn(n3 tup(n0 tup(n4 n5)))) }

::std::data::List::map::1 { x(dup396(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 n1)) n0) n1) }

::std::data::List::map::2 { x(@sub(1 dup396(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 x(n1 x(n2 x(n3 n4))))) n0)) x(tup(n5 n1) x(dup405(fn(n5 n6) n2) x(tup(n6 n3) n4)))) }

::std::data::List::map::3 { x(_ x(_ x(_ x(n0 n0)))) }

::std::data::List::pop_front { fn(ref(tup(dup415(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) tup(n2 n5)) tup(n1 tup(n3 n5))) n4) }

::std::data::List::pop_front::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::pop_front::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::data::List::push_back { fn(ref(tup(@add(1 n0) tup(n1 tup(n2 n3))) tup(n0 tup(n1 n3))) fn(n2 _)) }

::std::data::List::iter { fn(ref(tup(dup563(n0 n1) tup(n2 n3)) tup(n0 tup(n4 n3))) tup(n1 ref(n2 n4))) }

::std::data::List::Iter::next { fn(ref(tup(dup569(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::Iter::next::2 { x(x(@sub(1 n0) n0) x(x(ref(tup(n1 n2) tup(n3 n4)) ref(n2 n4)) enum(enum(ref(n1 n3) n5) enum(_ n5)))) }

::std::data::List::Iter::next::3 { x(x(n0 n0) x(x(ref(n1 n1) _) ::std::logical::Option::None)) }

::std::data::List::Iter::drop { fn(ref(tup(_ ref(n0 n0)) _) _) }

::std::data::List::into_iter { fn(tup(n0 tup(n1 _)) tup(n0 n1)) }

::std::data::List::IntoIter::next { fn(ref(tup(dup595(?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::IntoIter::next::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::IntoIter::next::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::numeric::N32::parse { fn(tup(dup1498(?(::std::numeric::N32::parse::3 ::std::numeric::N32::parse::2 x(n0 x(n1 n2))) n0) tup(n1 _)) n2) }

::std::numeric::N32::parse::2 { x(dup1508(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(0 n2)))) n0) x(n1 n2)) }

::std::numeric::N32::parse::3 { x(_ x(_ ::std::logical::Option::None)) }

::std::numeric::N32::parse::4 { x(dup1508(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::parse::5 { x(n0 x(tup(dup1517(dup1512(@le$(48 @n32_and(n1 ?(::std::numeric::N32::parse::9 ::std::numeric::N32::parse::8 x(n0 x(n2 x(n3 x(n4 n5))))))) @le(57 n1)) n4) n2) x(n3 n5))) }

::std::numeric::N32::parse::6 { x(_ x(_ x(n0 enum(enum(n0 n1) enum(_ n1))))) }

::std::numeric::N32::parse::8 { x(@sub(1 dup1508(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(n2 n3)))) n0)) x(n1 x(@mul(10 @add(n4 n2)) x(@sub(48 n4) n3)))) }

::std::numeric::N32::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N32::parse::10 { x(n0 n0) }

::std::unicode::String::len { fn(ref(tup(dup2106(n0 n1) n2) tup(n0 n2)) n1) }

::std::unicode::String::split { fn(tup(dup2106(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(1 tup(tup(n6 n8) n8)) n9))))))))))) n5) fn(dup2115(tup(dup2106(n2 n1) n3) n7) n9)) }

::std::unicode::String::split::1 { x(tup(dup2106(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup2115(tup(dup2106(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::5 { enum(tup(dup2106(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup2115(tup(dup2106(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::6 { x(_ x(n0 n0)) }

::std::unicode::String::split_once { fn(tup(dup2106(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) n6)))))) n5) fn(tup(dup2106(n2 n1) n3) n6)) }

::std::unicode::String::split_once::1 { x(tup(dup2106(n0 n1) n2) x(n3 x(tup(dup2106(n4 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))) n5) n6))) }

::std::unicode::String::split_once::2 { x(tup(dup563(n0 dup569(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n1 n2) x(x(ref(n3 n4) n5) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(tup(n0 tup(n4 n6)) x(n7 x(tup(n8 tup(n9 n10)) x(tup(n2 n5) x(tup(n11 ref(n12 n9)) n13)))))))))) n1)) tup(n3 n6)) x(n7 x(tup(dup563(n8 n11) tup(n12 n10)) n13))) }

::std::unicode::String::split_once::3 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::5 { x(n0 x(n1 x(n2 x(tup(dup569(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n3 n4) x(x(n5 n6) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(n0 x(n1 x(n2 x(tup(n4 n6) n7))))))))) n3) n5) n7)))) }

::std::unicode::String::split_once::8 { enum(ref(dup2229(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(tup(dup569(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::unicode::String::split_once::12 enum(::std::unicode::String::split_once::13 x(n2 x(n3 x(n4 x(n5 x(tup(n7 n9) x(n1 n10))))))))))) n6) n8) n10)))))) }

::std::unicode::String::split_once::9 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))))) }

::std::unicode::String::split_once::12 { enum(ref(dup2243(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(n6 x(@ne(n1 ?(::std::unicode::String::split_once::5 ::std::unicode::String::split_once::16 x(n2 x(n3 x(n4 x(n5 x(n6 n7))))))) n7))))))) }

::std::unicode::String::split_once::13 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) x(_ tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4))))))))) }

::std::unicode::String::split_once::14 { x(n0 x(tup(_ tup(_ n1)) x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))) }

::std::unicode::String::split_once::16 { x(n0 x(n1 x(tup(dup415(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n2 n3) x(x(n4 n5) enum(::std::unicode::String::split_once::21 enum(::std::unicode::String::split_once::22 x(n0 x(n1 x(tup(n3 tup(n5 n6)) n7)))))))) n2) tup(n4 n6)) x(tup(_ ref(n8 n8)) x(tup(_ ref(n9 n9)) n7))))) }

::std::unicode::String::split_once::21 { enum(n0 x(tup(dup2106(n1 n2) n3) x(tup(@add(1 n4) tup(n5 tup(n0 n6))) x(tup(dup2106(n7 @le$(n2 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n1 n3) x(tup(n4 tup(n5 n6)) x(tup(n7 n8) n9)))))) n8) n9)))) }

::std::unicode::String::split_once::22 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::23 { x(tup(@add(n0 n1) tup(n2 n3)) x(tup(n0 tup(n3 n4)) tup(tup(n1 tup(n2 n4)) ::std::logical::Option::None))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2479(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2479(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2479(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2479(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

::std::IO::read_line { fn(ref(dup(n0 @io_read_byte(0 dup(dup2522(@ne(0 ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::2 { x(n0 x(dup2528(@eq(10 ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(n0 x(n1 n2)))) n1) enum(enum(n2 n3) enum(_ n3)))) }

::std::IO::read_line::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 { x(x(n0 n0) x(_ tup(0 tup(n1 n1)))) }

::std::IO::read_line::6 { x(x(dup(n0 @io_read_byte(10 dup(dup2545(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(1 tup(tup(n4 n5) n5)) n6) _))))) n3) @seq$(n0 n1)))) n2) x(n4 n6)) }

::std::IO::read_line::7 { x(x(dup(n0 @io_read_byte(10 dup(dup2545(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::9 { x(x(dup(n0 @io_read_byte(10 dup(dup2545(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(n4 tup(n5 n6)) n7) n8))))) n3) @seq$(n0 n1)))) n2) x(n9 x(x(tup(@add(1 n4) tup(n5 tup(n9 n6))) n7) n8))) }

::std::IO::read_line::10 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

