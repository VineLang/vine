
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::std::numeric::N64::add { fn(tup(dup(@add(n0 n1) @n32_add_high(n2 n3)) @add(n4 @add(n3 n5))) fn(tup(dup(n0 n2) n4) tup(n1 n5))) }

::std::numeric::N64::sub { fn(tup(dup(@sub(n0 n1) @lt(n2 n3)) @sub(n4 @sub(n3 n5))) fn(tup(dup(n0 n2) n4) tup(n1 n5))) }

::std::numeric::N64::mul { fn(tup(dup(@mul(n0 n1) dup(@n32_mul_high(n2 n3) @mul(n4 @add(n5 @add(n3 n6))))) n7) fn(tup(dup(n0 dup(n2 @mul(n7 n5))) n4) tup(n1 n6))) }

::std::numeric::N64::mul_n32_n32 { fn(dup(@mul(n0 n1) @n32_mul_high(n2 n3)) fn(dup(n0 n2) tup(n1 n3))) }

::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::std::IO::read_byte { fn(ref(dup(n0 @io_read_byte(n1 dup(n2 @seq$(n0 n3)))) n3) fn(n1 n2)) }

::main { ::day_13::main }

::day_13::main {
  fn(ref(w1 w27) _)
  ::std::IO::full_input = fn(ref(w1 w6) w8)
  ::std::unicode::String::split = fn(w8 fn(tup(2 tup(tup(10 tup(10 w36)) w36)) w12))
  ::std::numeric::N64::from_n32 = fn(10 w14)
  ::std::numeric::N64::pow_n32 = fn(w14 fn(13 w15))
  ::day_13::main::1 = x(w12 x(w15 x(x(0 w40) x(0 w38))))
  ::std::numeric::N32::to_string::to_string = fn(w40 tup(@add(8 w43) tup(w44 w45)))
  ::std::IO::println = fn(ref(w6 w20) fn(tup(w43 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w44)))))))) w45)) _))
  ::std::numeric::N64::to_string::to_string = fn(w38 tup(@add(8 w48) tup(w49 w50)))
  ::std::IO::println = fn(ref(w20 w27) fn(tup(w48 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w49)))))))) w50)) _))
}

::day_13::main::1 {
  x(w10 w9)
  ::std::data::List::pop_front = fn(ref(w10 w1) enum(::day_13::main::4 enum(::day_13::main::5 x(w1 w9))))
}

::day_13::main::4 {
  enum(w0 x(w7 x(dup23(w123 dup23(w128 w225)) x(x(w5 w224) x(w3 w222)))))
  ::std::unicode::String::split_once = fn(w0 fn(tup(1 tup(tup(43 w182) w182)) tup(_ w11)))
  ::std::logical::Option::unwrap = fn(w11 w14)
  ::std::unicode::String::split_once = fn(w14 fn(tup(4 tup(tup(44 tup(32 tup(89 tup(43 w185)))) w185)) tup(w17 w18)))
  ::std::logical::Option::unwrap = fn(w18 w21)
  ::std::unicode::String::split_once = fn(w21 fn(tup(13 tup(tup(10 tup(66 tup(117 tup(116 tup(116 tup(111 tup(110 tup(32 tup(66 tup(58 tup(32 tup(88 tup(43 w188))))))))))))) w188)) tup(w24 w25)))
  ::std::logical::Option::unwrap = fn(w25 w28)
  ::std::unicode::String::split_once = fn(w28 fn(tup(4 tup(tup(44 tup(32 tup(89 tup(43 w191)))) w191)) tup(w31 w32)))
  ::std::logical::Option::unwrap = fn(w32 w35)
  ::std::unicode::String::split_once = fn(w35 fn(tup(10 tup(tup(10 tup(80 tup(114 tup(105 tup(122 tup(101 tup(58 tup(32 tup(88 tup(61 w194)))))))))) w194)) tup(w38 w39)))
  ::std::logical::Option::unwrap = fn(w39 w42)
  ::std::unicode::String::split_once = fn(w42 fn(tup(4 tup(tup(44 tup(32 tup(89 tup(61 w197)))) w197)) tup(w45 w46)))
  ::std::logical::Option::unwrap = fn(w46 w49)
  ::std::unicode::String::split_once = fn(w49 fn(tup(1 tup(tup(10 w200) w200)) tup(w52 _)))
  ::std::numeric::N32::parse = fn(w17 w55)
  ::std::logical::Option::unwrap = fn(w55 dup43(@mul(w79 w80) dup43(@mul(w97 w98) dup43(@mul(w107 @add(w111 @eq(w202 ?(::day_13::main::8 ::day_13::main::7 x(x(w5 w210) x(w208 x(w207 x(w206 x(w120 _))))))))) dup43(w146 w160)))))
  ::std::numeric::N32::parse = fn(w24 w59)
  ::std::logical::Option::unwrap = fn(w59 dup44(@mul(w82 w83) dup44(@mul(w100 w101) dup44(@mul(w115 @add(w119 w120)) dup44(w150 w170)))))
  ::std::numeric::N32::parse = fn(w31 w63)
  ::std::logical::Option::unwrap = fn(w63 dup45(w82 dup45(@mul(w90 w91) dup45(@mul(w110 w111) dup45(w137 w164)))))
  ::std::numeric::N32::parse = fn(w38 w67)
  ::std::logical::Option::unwrap = fn(w67 dup46(w79 dup46(@mul(w87 w88) dup46(@mul(w118 w119) dup46(w133 w174)))))
  ::std::numeric::N32::parse = fn(w45 w71)
  ::std::logical::Option::unwrap = fn(w71 dup47(w87 dup47(w100 dup47(w202 w124))))
  ::std::numeric::N32::parse = fn(w52 w75)
  ::std::logical::Option::unwrap = fn(w75 dup48(w90 dup48(w97 dup48(w208 w129))))
  ::std::numeric::N32::diff = fn(w80 fn(w83 dup49(w93 dup49(w103 dup49(w142 w155)))))
  ::std::numeric::N32::diff = fn(w88 fn(w91 @div(w93 dup50(w107 dup50(w115 w207)))))
  ::std::numeric::N32::diff = fn(w98 fn(w101 @div(w103 dup51(w110 dup51(w118 w206)))))
  ::std::numeric::N64::from_n32 = fn(w124 w125)
  ::std::numeric::N64::add = fn(w123 fn(w125 dup54(w135 dup54(w152 w212))))
  ::std::numeric::N64::from_n32 = fn(w129 w130)
  ::std::numeric::N64::add = fn(w128 fn(w130 dup55(w139 dup55(w148 w218))))
  ::std::numeric::N64::from_n32 = fn(w133 w134)
  ::std::numeric::N64::mul = fn(w134 fn(w135 w136))
  ::std::numeric::N64::from_n32 = fn(w137 w138)
  ::std::numeric::N64::mul = fn(w138 fn(w139 w140))
  ::std::numeric::N64::diff = fn(w136 fn(w140 w141))
  ::std::numeric::N64::div_rem_n32 = fn(w141 fn(w142 tup(dup56(w159 dup56(w169 w217)) _)))
  ::std::numeric::N64::from_n32 = fn(w146 w147)
  ::std::numeric::N64::mul = fn(w147 fn(w148 w149))
  ::std::numeric::N64::from_n32 = fn(w150 w151)
  ::std::numeric::N64::mul = fn(w151 fn(w152 w153))
  ::std::numeric::N64::diff = fn(w149 fn(w153 w154))
  ::std::numeric::N64::div_rem_n32 = fn(w154 fn(w155 tup(dup57(w163 dup57(w173 w216)) _)))
  ::std::numeric::N64::from_n32 = fn(w160 w161)
  ::std::numeric::N64::mul = fn(w159 fn(w161 w162))
  ::std::numeric::N64::from_n32 = fn(w164 w165)
  ::std::numeric::N64::mul = fn(w163 fn(w165 w166))
  ::std::numeric::N64::add = fn(w162 fn(w166 w167))
  ::std::numeric::N64::from_n32 = fn(w170 w171)
  ::std::numeric::N64::mul = fn(w169 fn(w171 w172))
  ::std::numeric::N64::from_n32 = fn(w174 w175)
  ::std::numeric::N64::mul = fn(w173 fn(w175 w176))
  ::std::numeric::N64::add = fn(w172 fn(w176 w177))
  ::std::numeric::N64::eq = fn(w167 fn(w212 ?(::day_13::main::14 ::day_13::main::13 x(x(w3 w220) x(w218 x(w217 x(w216 x(w177 _))))))))
  ::day_13::main::1 = x(w7 x(w225 x(x(w210 w224) x(w220 w222))))
}

::day_13::main::5 { x(_ x(_ x(x(w3 w3) x(w1 w1)))) }

::day_13::main::7 { x(w9 x(w7 x(w6 x(w5 x(@eq(w7 ?(::day_13::main::10 ::day_13::main::9 x(w9 x(w6 x(w5 w10))))) w10))))) }

::day_13::main::8 { x(x(w6 w6) _) }

::day_13::main::9 { x(x(@add(w3 w5) w5) x(@mul(3 @add(w7 w3)) x(w7 _))) }

::day_13::main::10 { x(x(w4 w4) _) }

::day_13::main::13 {
  x(w9 x(w7 x(w6 x(w5 x(w4 w10)))))
  ::std::numeric::N64::eq = fn(w4 fn(w7 ?(::day_13::main::16 ::day_13::main::15 x(w9 x(w6 x(w5 w10))))))
}

::day_13::main::14 { x(x(w6 w6) _) }

::day_13::main::15 {
  x(x(w12 w6) x(w10 x(w9 _)))
  ::std::numeric::N64::from_n32 = fn(3 w2)
  ::std::numeric::N64::mul = fn(w10 fn(w2 w3))
  ::std::numeric::N64::add = fn(w3 fn(w9 w5))
  ::std::numeric::N64::add = fn(w12 fn(w5 w6))
}

::day_13::main::16 { x(x(w4 w4) _) }

::std::numeric::N32::to_string::to_string { fn(dup93(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup102(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup102(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup105(@rem(10 @add$(48 n0)) @div(10 dup102(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::numeric::N64::to_string::to_string { fn(dup111(tup(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n0 x(0 ?(::std::numeric::N64::to_string::to_string::3 ::std::numeric::N64::to_string::to_string::2 x(n1 n2)))))) n0) n1) n2) }

::std::numeric::N64::to_string::to_string::2 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N64::to_string::to_string::3 { x(dup120(tup(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n0 x(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(n1 x(tup(0 tup(n2 n2)) n3))))))) n0) n1) n3) }

::std::numeric::N64::to_string::to_string::4 { x(dup120(tup(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n0 x(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(n1 n2)))))) n0) n1) n2) }

::std::numeric::N64::to_string::to_string::5 { x(_ x(n0 n0)) }

::std::numeric::N64::to_string::to_string::6 { x(tup(n0 dup1514(@div(10 n1) @rem(10 dup1515(@lt$(10 ?(::std::numeric::N64::div_rem_n32::3 ::std::numeric::N64::div_rem_n32::2 x(x(n2 dup1535(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(x(n0 dup1513(@div(10 n3) @rem(10 @add$(48 n4)))) x(n5 x(10 x(0 @add(n3 dup120(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n6 x(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(tup(n7 n8) x(tup(n9 tup(tup(n4 n10) n11)) n12))))))) n7))))))) n5)) x(10 x(x(n1 dup120(n6 n8)) _))))) n2)))) x(tup(@add$(1 n9) tup(n10 n11)) n12)) }

::std::data::List::pop_front { fn(ref(tup(dup224(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) tup(n2 n5)) tup(n1 tup(n3 n5))) n4) }

::std::data::List::pop_front::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::pop_front::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::data::List::iter { fn(ref(tup(dup372(n0 n1) tup(n2 n3)) tup(n0 tup(n4 n3))) tup(n1 ref(n2 n4))) }

::std::data::List::Iter::next { fn(ref(tup(dup378(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::Iter::next::2 { x(x(@sub(1 n0) n0) x(x(ref(tup(n1 n2) tup(n3 n4)) ref(n2 n4)) enum(enum(ref(n1 n3) n5) enum(_ n5)))) }

::std::data::List::Iter::next::3 { x(x(n0 n0) x(x(ref(n1 n1) _) ::std::logical::Option::None)) }

::std::data::List::Iter::drop { fn(ref(tup(_ ref(n0 n0)) _) _) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::numeric::N32::parse { fn(tup(dup1307(?(::std::numeric::N32::parse::3 ::std::numeric::N32::parse::2 x(n0 x(n1 n2))) n0) tup(n1 _)) n2) }

::std::numeric::N32::parse::2 { x(dup1317(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(0 n2)))) n0) x(n1 n2)) }

::std::numeric::N32::parse::3 { x(_ x(_ ::std::logical::Option::None)) }

::std::numeric::N32::parse::4 { x(dup1317(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::parse::5 { x(n0 x(tup(dup1326(dup1321(@le$(48 @n32_and(n1 ?(::std::numeric::N32::parse::9 ::std::numeric::N32::parse::8 x(n0 x(n2 x(n3 x(n4 n5))))))) @le(57 n1)) n4) n2) x(n3 n5))) }

::std::numeric::N32::parse::6 { x(_ x(_ x(n0 enum(enum(n0 n1) enum(_ n1))))) }

::std::numeric::N32::parse::8 { x(@sub(1 dup1317(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(n2 n3)))) n0)) x(n1 x(@mul(10 @add(n4 n2)) x(@sub(48 n4) n3)))) }

::std::numeric::N32::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N32::parse::10 { x(n0 n0) }

::std::numeric::N32::diff { fn(dup1380(@lt$(n0 ?(::std::numeric::N32::diff::3 ::std::numeric::N32::diff::2 x(n1 x(n2 n3)))) n1) fn(dup1381(n0 n2) n3)) }

::std::numeric::N32::diff::2 { x(@sub(n0 n1) x(n0 n1)) }

::std::numeric::N32::diff::3 { x(n0 x(@sub(n0 n1) n1)) }

::std::numeric::N64::one { tup(1 0) }

::std::numeric::N64::from_n32 { fn(n0 tup(n0 0)) }

::std::numeric::N64::div_rem_n32 { fn(tup(n0 dup1514(@div(n1 n2) @rem(n3 dup1515(@lt$(n4 ?(::std::numeric::N64::div_rem_n32::3 ::std::numeric::N64::div_rem_n32::2 x(x(n5 dup1535(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(x(n0 dup1513(@div(n6 n7) @rem(n8 n9))) x(n10 x(n11 x(0 @add(n7 n12)))))) n10)) x(n13 x(x(n2 n14) _))))) n5)))) fn(dup1517(n1 dup1517(n3 dup1517(n4 dup1517(n13 dup1517(n11 dup1517(n6 n8)))))) tup(tup(n12 n14) n9))) }

::std::numeric::N64::div_rem_n32::2 { x(x(dup1527(@div(n0 n1) @rem(n2 n3)) n3) x(dup1528(n0 n2) x(x(_ n1) _))) }

::std::numeric::N64::div_rem_n32::3 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

::std::numeric::N64::div_rem_n32::4 { x(n0 x(dup1535(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(n0 x(n1 n2))) n1) n2)) }

::std::numeric::N64::div_rem_n32::5 { x(x(dup(@sub(n0 n1) @lt(n2 n3)) n4) x(dup1542(n5 @sub(n6 @sub(n3 dup1535(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(x(n1 n4) x(n7 x(n8 x(n9 n10))))) n7)))) x(dup1544(@div$(4294967295 @mul(n5 dup1548(n11 dup(@mul(n12 dup(n0 n2)) @n32_mul_high(n13 n6))))) dup1544(dup(n12 n13) n8)) x(@add(n11 n9) n10)))) }

::std::numeric::N64::div_rem_n32::6 { x(x(n0 n0) x(_ x(_ x(n1 n1)))) }

::std::numeric::N64::eq { fn(tup(@eq(n0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n1 x(n2 n3)))) n1) fn(tup(n0 n2) n3)) }

::std::numeric::N64::eq::2 { x(@eq(n0 ?(0 1 n1)) x(n0 n1)) }

::std::numeric::N64::eq::3 { x(_ x(_ 0)) }

::std::numeric::N64::ge { fn(tup(n0 dup1675(@lt$(n1 ?(::std::numeric::N64::ge::3 ::std::numeric::N64::ge::2 x(n0 x(n2 x(n3 x(n4 n5)))))) n2)) fn(tup(n3 dup1677(n1 n4)) n5)) }

::std::numeric::N64::ge::2 { x(_ x(_ x(_ x(_ 1)))) }

::std::numeric::N64::ge::3 { x(n0 x(@eq(n1 ?(::std::numeric::N64::ge::5 ::std::numeric::N64::ge::4 x(n0 x(n2 n3)))) x(n2 x(n1 n3)))) }

::std::numeric::N64::ge::4 { x(@le$(n0 ?(0 1 n1)) x(n0 n1)) }

::std::numeric::N64::ge::5 { x(_ x(_ 0)) }

::std::numeric::N64::pow_n32 { fn(n0 fn(dup1784(?(::std::numeric::N64::pow_n32::3 ::std::numeric::N64::pow_n32::2 x(n0 x(n1 x(::std::numeric::N64::one n2)))) n1) n2)) }

::std::numeric::N64::pow_n32::1 { x(n0 x(dup1784(?(::std::numeric::N64::pow_n32::3 ::std::numeric::N64::pow_n32::2 x(n0 x(n1 n2))) n1) n2)) }

::std::numeric::N64::pow_n32::2 { x(dup1787(n0 dup1787(tup(dup(@mul(n1 n2) dup(@n32_mul_high(n3 n4) @mul(n5 @add(n6 @add(n4 n7))))) n8) tup(dup(n1 dup(n3 @mul(n8 n6))) n5))) x(dup1789(@rem(2 ?(::std::numeric::N64::pow_n32::6 ::std::numeric::N64::pow_n32::5 x(n0 x(x(n9 n10) _)))) @div(2 dup1784(?(::std::numeric::N64::pow_n32::3 ::std::numeric::N64::pow_n32::2 x(tup(n2 n7) x(n11 x(n10 n12)))) n11))) x(n9 n12))) }

::std::numeric::N64::pow_n32::3 { x(_ x(_ x(n0 n0))) }

::std::numeric::N64::pow_n32::5 { x(tup(dup(n0 dup(n1 @mul(n2 n3))) n4) x(x(tup(dup(@mul(n0 n5) dup(@n32_mul_high(n1 n6) @mul(n4 @add(n3 @add(n6 n7))))) n2) tup(n5 n7)) _)) }

::std::numeric::N64::pow_n32::6 { x(_ x(x(n0 n0) _)) }

::std::numeric::N64::diff { fn(dup1819(tup(n0 dup1675(@lt$(n1 ?(::std::numeric::N64::ge::3 ::std::numeric::N64::ge::2 x(n0 x(n2 x(n3 x(n4 ?(::std::numeric::N64::diff::3 ::std::numeric::N64::diff::2 x(n5 x(n6 n7))))))))) n2)) n5) fn(dup1820(tup(n3 dup1677(n1 n4)) n6) n7)) }

::std::numeric::N64::diff::2 { x(tup(dup(@sub(n0 n1) @lt(n2 n3)) @sub(n4 @sub(n3 n5))) x(tup(dup(n0 n2) n4) tup(n1 n5))) }

::std::numeric::N64::diff::3 { x(tup(dup(n0 n1) n2) x(tup(dup(@sub(n0 n3) @lt(n1 n4)) @sub(n2 @sub(n4 n5))) tup(n3 n5))) }

::std::unicode::String::len { fn(ref(tup(dup1895(n0 n1) n2) tup(n0 n2)) n1) }

::std::unicode::String::split { fn(tup(dup1895(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(1 tup(tup(n6 n8) n8)) n9))))))))))) n5) fn(dup1904(tup(dup1895(n2 n1) n3) n7) n9)) }

::std::unicode::String::split::1 { x(tup(dup1895(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup1904(tup(dup1895(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::5 { enum(tup(dup1895(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup1904(tup(dup1895(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::6 { x(_ x(n0 n0)) }

::std::unicode::String::split_once { fn(tup(dup1895(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) n6)))))) n5) fn(tup(dup1895(n2 n1) n3) n6)) }

::std::unicode::String::split_once::1 { x(tup(dup1895(n0 n1) n2) x(n3 x(tup(dup1895(n4 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))) n5) n6))) }

::std::unicode::String::split_once::2 { x(tup(dup372(n0 dup378(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n1 n2) x(x(ref(n3 n4) n5) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(tup(n0 tup(n4 n6)) x(n7 x(tup(n8 tup(n9 n10)) x(tup(n2 n5) x(tup(n11 ref(n12 n9)) n13)))))))))) n1)) tup(n3 n6)) x(n7 x(tup(dup372(n8 n11) tup(n12 n10)) n13))) }

::std::unicode::String::split_once::3 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::5 { x(n0 x(n1 x(n2 x(tup(dup378(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n3 n4) x(x(n5 n6) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(n0 x(n1 x(n2 x(tup(n4 n6) n7))))))))) n3) n5) n7)))) }

::std::unicode::String::split_once::8 { enum(ref(dup2018(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(tup(dup378(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::unicode::String::split_once::12 enum(::std::unicode::String::split_once::13 x(n2 x(n3 x(n4 x(n5 x(tup(n7 n9) x(n1 n10))))))))))) n6) n8) n10)))))) }

::std::unicode::String::split_once::9 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))))) }

::std::unicode::String::split_once::12 { enum(ref(dup2032(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(n6 x(@ne(n1 ?(::std::unicode::String::split_once::5 ::std::unicode::String::split_once::16 x(n2 x(n3 x(n4 x(n5 x(n6 n7))))))) n7))))))) }

::std::unicode::String::split_once::13 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) x(_ tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4))))))))) }

::std::unicode::String::split_once::14 { x(n0 x(tup(_ tup(_ n1)) x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))) }

::std::unicode::String::split_once::16 { x(n0 x(n1 x(tup(dup224(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n2 n3) x(x(n4 n5) enum(::std::unicode::String::split_once::21 enum(::std::unicode::String::split_once::22 x(n0 x(n1 x(tup(n3 tup(n5 n6)) n7)))))))) n2) tup(n4 n6)) x(tup(_ ref(n8 n8)) x(tup(_ ref(n9 n9)) n7))))) }

::std::unicode::String::split_once::21 { enum(n0 x(tup(dup1895(n1 n2) n3) x(tup(@add(1 n4) tup(n5 tup(n0 n6))) x(tup(dup1895(n7 @le$(n2 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n1 n3) x(tup(n4 tup(n5 n6)) x(tup(n7 n8) n9)))))) n8) n9)))) }

::std::unicode::String::split_once::22 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::23 { x(tup(@add(n0 n1) tup(n2 n3)) x(tup(n0 tup(n3 n4)) tup(tup(n1 tup(n2 n4)) ::std::logical::Option::None))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2268(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2268(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2268(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2268(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

::std::IO::full_input { fn(ref(dup(n0 @io_read_byte(0 dup(dup2358(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(tup(0 tup(n3 n3)) x(n4 n5))))) n4) @seq$(n0 n1)))) n2) n5) }

::std::IO::full_input::1 { x(x(dup(n0 @io_read_byte(0 dup(dup2358(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(n3 x(n4 n5))))) n4) @seq$(n0 n1)))) n2) x(n3 n5)) }

::std::IO::full_input::3 { x(x(dup(n0 @io_read_byte(0 dup(dup2358(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(tup(n3 tup(n4 n5)) x(n6 n7))))) n6) @seq$(n0 n1)))) n2) x(tup(@add(1 n3) tup(n4 tup(n8 n5))) x(n8 n7))) }

::std::IO::full_input::4 { x(x(n0 n0) x(n1 x(_ n1))) }

