
::std::logical::Option::None { enum(_ enum(r r)) }

::std::numeric::N64::add { fn(tup(dup(@add(bl0 l) @n32_add_high(bl1 c)) @add(bh @add(c h))) fn(tup(dup(bl0 bl1) bh) tup(l h))) }

::std::numeric::N64::sub { fn(tup(dup(@sub(bl0 l) @lt(bl1 c)) @sub(bh @sub(c h))) fn(tup(dup(bl0 bl1) bh) tup(l h))) }

::std::numeric::N64::mul { fn(tup(dup(@mul(bl0 l) dup(@n32_mul_high(bl1 ll) @mul(bh @add(hl @add(ll h))))) ah) fn(tup(dup(bl0 dup(bl1 @mul(ah hl))) bh) tup(l h))) }

::std::numeric::N64::mul_n32_n32 { fn(dup(@mul(b0 l) @n32_mul_high(b1 h)) fn(dup(b0 b1) tup(l h))) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::IO::read_byte { fn(ref(dup(io0 @io_read_byte(default dup(byte @seq$(io0 io1)))) io1) fn(default byte)) }

::main { ::day_07::main }

::day_07::main {
  fn(ref(w1 w17) _)
  ::std::numeric::N64::from_n32 = fn(0 w5)
  ::std::numeric::N64::from_n32 = fn(0 w7)
  ::day_07::main::1 = x(x(w1 w29) x(x(w5 w27) x(w7 w25)))
  ::std::numeric::N64::to_string::to_string = fn(w27 tup(@add(8 w30) tup(w31 w32)))
  ::std::IO::println = fn(ref(w29 w10) fn(tup(w30 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w31)))))))) w32)) _))
  ::std::numeric::N64::to_string::to_string = fn(w25 tup(@add(8 w35) tup(w36 w37)))
  ::std::IO::println = fn(ref(w10 w17) fn(tup(w35 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w36)))))))) w37)) _))
}

::day_07::main::1 {
  x(x(w10 w16) w8)
  ::std::IO::read_line = fn(ref(w10 w1) enum(::day_07::main::4 enum(::day_07::main::5 x(x(w1 w16) w8))))
}

::day_07::main::4 {
  enum(w0 x(w7 x(x(w5 w60) x(w3 w58))))
  ::std::unicode::String::split_once = fn(w0 fn(tup(2 tup(tup(58 tup(32 w38)) w38)) tup(w11 w12)))
  ::std::numeric::N64::parse = fn(w11 w15)
  ::std::logical::Option::unwrap = fn(w15 w16)
  ::std::logical::Option::unwrap = fn(w12 w19)
  ::std::unicode::String::split = fn(w19 fn(tup(1 tup(tup(32 w41) w41)) w21))
  ::std::data::List::pop_front = fn(ref(w21 w24) w26)
  ::std::logical::Option::unwrap = fn(w26 w27)
  ::std::numeric::N32::parse = fn(w27 w28)
  ::std::logical::Option::unwrap = fn(w28 w29)
  ::std::numeric::N64::from_n32 = fn(w29 w30)
  ::day_07::main::6 = x(w24 x(x(tup(1 tup(tup(w30 w42) w42)) w47) x(tup(0 tup(w43 w43)) w45)))
  ::day_07::main::20 = x(x(w5 w56) x(x(w3 w54) x(w16 x(w47 x(w45 _)))))
  ::day_07::main::1 = x(w7 x(x(w56 w60) x(w54 w58)))
}

::day_07::main::5 { x(x(w5 w5) x(x(w3 w3) x(w1 w1))) }

::day_07::main::6 {
  x(w9 w8)
  ::std::data::List::pop_front = fn(ref(w9 w1) enum(::day_07::main::9 enum(::day_07::main::10 x(w1 w8))))
}

::day_07::main::9 {
  enum(w0 x(w6 x(x(dup51(w17 dup51(w21 w34)) w89) x(dup54(w26 dup54(w30 w35)) w87))))
  ::std::unicode::String::len = fn(ref(w0 w8) w10)
  ::std::numeric::N32::parse = fn(w8 w13)
  ::std::logical::Option::unwrap = fn(w13 w14)
  ::std::numeric::N64::from_n32 = fn(w14 dup59(w54 dup59(w60 dup59(w69 dup59(w75 w84)))))
  ::std::numeric::N64::add = fn(w50 fn(w54 w55))
  ::std::data::List::map = fn(w17 fn(fn(w50 w55) w19))
  ::std::numeric::N64::mul = fn(w56 fn(w60 w61))
  ::std::data::List::map = fn(w21 fn(fn(w56 w61) w23))
  ::day_07::main::13 = x(w10 x(1 w63))
  ::std::numeric::N64::add = fn(w65 fn(w69 w70))
  ::std::data::List::map = fn(w26 fn(fn(w65 w70) w28))
  ::std::numeric::N64::mul = fn(w71 fn(w75 w76))
  ::std::data::List::map = fn(w30 fn(fn(w71 w76) w32))
  ::std::data::List::concat = fn(w34 fn(w35 w36))
  ::std::numeric::N64::from_n32 = fn(w63 w82)
  ::std::numeric::N64::mul = fn(w77 fn(w82 w83))
  ::std::numeric::N64::add = fn(w83 fn(w84 w85))
  ::std::data::List::map = fn(w36 fn(fn(w77 w85) w38))
  ::std::data::List::concat = fn(w19 fn(w23 w42))
  ::std::data::List::concat = fn(w28 fn(w32 w46))
  ::std::data::List::concat = fn(w46 fn(w38 w48))
  ::day_07::main::6 = x(w6 x(x(w42 w89) x(w48 w87)))
}

::day_07::main::10 { x(_ x(x(w3 w3) x(w1 w1))) }

::day_07::main::13 { x(dup85(@lt$(0 ?(::day_07::main::15 ::day_07::main::14 x(w7 w3))) w7) w3) }

::day_07::main::14 {
  x(@sub(1 w3) x(@mul(10 w1) w8))
  ::day_07::main::13 = x(w3 x(w1 w8))
}

::day_07::main::15 { x(_ x(w1 w1)) }

::day_07::main::20 {
  x(w12 x(w10 x(w8 x(w7 w6))))
  ::std::data::List::pop_front = fn(ref(w7 w1) enum(::day_07::main::23 enum(::day_07::main::24 x(w12 x(w10 x(w8 x(w1 w6)))))))
}

::day_07::main::23 {
  enum(w0 x(w9 x(w7 x(dup108(w12 w17) w4))))
  ::std::numeric::N64::eq = fn(w0 fn(w12 ?(::day_07::main::20 ::day_07::main::26 x(w9 x(w7 x(w17 w4))))))
}

::day_07::main::24 {
  x(x(w7 w7) x(w5 x(w3 x(_ w1))))
  ::day_07::main::28 = x(w5 x(w3 w1))
}

::day_07::main::26 {
  x(x(w15 w2) x(x(w13 w6) x(dup124(w1 w5) _)))
  ::std::numeric::N64::add = fn(w15 fn(w1 w2))
  ::std::numeric::N64::add = fn(w13 fn(w5 w6))
}

::day_07::main::28 {
  x(w9 x(w7 x(w6 w10)))
  ::std::data::List::pop_front = fn(ref(w6 w1) enum(::day_07::main::31 enum(::day_07::main::32 x(w9 x(w7 x(w1 w10))))))
}

::day_07::main::31 {
  enum(w0 x(w6 x(dup143(w9 w13) w3)))
  ::std::numeric::N64::eq = fn(w0 fn(w9 ?(::day_07::main::28 ::day_07::main::34 x(w6 x(w13 w3)))))
}

::day_07::main::32 { x(x(w4 w4) _) }

::day_07::main::34 {
  x(x(w8 w2) x(w6 _))
  ::std::numeric::N64::add = fn(w8 fn(w6 w2))
}

::std::numeric::N64::to_string::to_string {
  fn(dup159(w5 w8) w7)
  ::std::numeric::N64::eq = fn(w5 fn(0 ?(::std::numeric::N64::to_string::to_string::3 ::std::numeric::N64::to_string::to_string::2 x(w8 w7))))
}

::std::numeric::N64::to_string::to_string::2 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N64::to_string::to_string::3 {
  x(w4 w9)
  ::std::numeric::N64::to_string::to_string::4 = x(w4 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N64::to_string::to_string::4 {
  x(dup168(w0 w7) w3)
  ::std::numeric::N64::eq = fn(w0 fn(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(w7 w3))))
}

::std::numeric::N64::to_string::to_string::5 { x(_ x(w1 w1)) }

::std::numeric::N64::to_string::to_string::6 {
  x(w17 x(w16 w20))
  ::std::numeric::N64::div_rem_n32 = fn(w17 fn(10 tup(w2 w3)))
  48 = @add(w3 w6)
  ::std::data::List::concat = fn(tup(1 tup(tup(w6 w18) w18)) fn(w16 w11))
  ::std::numeric::N64::to_string::to_string::4 = x(w2 x(w11 w20))
}

::std::data::List::map {
  fn(tup(dup242(w6 w22) tup(w1 _)) fn(w3 tup(w6 tup(w10 w19))))
  ::std::data::List::map::1 = x(w22 x(w1 x(w3 x(w10 w19))))
}

::std::data::List::map::1 { x(dup252(?(::std::data::List::map::3 ::std::data::List::map::2 x(w10 w4)) w10) w4) }

::std::data::List::map::2 {
  x(@sub(1 w18) x(tup(w1 w2) x(dup261(fn(w1 w9) w26) x(tup(w9 w11) w25))))
  ::std::data::List::map::1 = x(w18 x(w2 x(w26 x(w11 w25))))
}

::std::data::List::map::3 { x(_ x(_ x(_ x(w1 w1)))) }

::std::data::List::pop_front { fn(ref(tup(dup271(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(w16 w17) x(x(w3 w15) w13))) w16) tup(w3 w4)) tup(w17 tup(w15 w4))) w13) }

::std::data::List::pop_front::2 { x(x(@sub(1 w1) w1) x(x(tup(w3 w4) w4) enum(enum(w3 w15) enum(_ w15)))) }

::std::data::List::pop_front::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(w10 w18) tup(w6 w11)) fn(tup(w10 tup(w11 w21)) tup(w18 tup(w6 w21)))) }

::std::data::List::iter { fn(ref(tup(dup419(w0 w10) tup(w3 w4)) tup(w0 tup(w12 w4))) tup(w10 ref(w3 w12))) }

::std::data::List::Iter::next { fn(ref(tup(dup425(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(w15 w16) x(x(w3 w14) w12))) w15) w3) tup(w16 w14)) w12) }

::std::data::List::Iter::next::2 { x(x(@sub(1 w1) w1) x(x(ref(tup(w4 w7) tup(w5 w8)) ref(w7 w8)) enum(enum(ref(w4 w5) w21) enum(_ w21)))) }

::std::data::List::Iter::next::3 { x(x(w8 w8) x(x(ref(w2 w2) _) ::std::logical::Option::None)) }

::std::data::List::Iter::drop { fn(ref(tup(_ ref(w7 w7)) _) _) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ w7)) w7) }

::std::logical::Option::unwrap::3 { enum(w0 w0) }

::std::numeric::N32::parse { fn(tup(dup1372(?(::std::numeric::N32::parse::3 ::std::numeric::N32::parse::2 x(w14 x(w5 w12))) w14) tup(w5 _)) w12) }

::std::numeric::N32::parse::2 {
  x(w5 x(w4 w6))
  ::std::numeric::N32::parse::4 = x(w5 x(w4 x(0 w6)))
}

::std::numeric::N32::parse::3 {
  x(_ x(_ w4))
  ::std::numeric::N32::parse::10 = x(w4 ::std::logical::Option::None)
}

::std::numeric::N32::parse::4 { x(dup1382(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(w8 w3)) w8) w3) }

::std::numeric::N32::parse::5 {
  x(w18 x(tup(dup1391(dup1386(w20 @le(57 w23)) w26) w2) x(w16 w25)))
  48 = @le(w20 @n32_and(w23 ?(::std::numeric::N32::parse::9 ::std::numeric::N32::parse::8 x(w18 x(w2 x(w16 x(w26 w25)))))))
}

::std::numeric::N32::parse::6 {
  x(_ x(_ x(w1 w9)))
  ::std::numeric::N32::parse::10 = x(w9 enum(enum(w1 w7) enum(_ w7)))
}

::std::numeric::N32::parse::8 {
  x(@sub(1 w19) x(w3 x(@mul(10 @add(w15 w17)) x(@sub(48 w15) w20))))
  ::std::numeric::N32::parse::4 = x(w19 x(w3 x(w17 w20)))
}

::std::numeric::N32::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N32::parse::10 { x(w10 w10) }

::std::numeric::N64::from_n32 { fn(w0 tup(w0 0)) }

::std::numeric::N64::div_rem_n32 {
  fn(tup(w0 dup1579(@div(w7 w8) @rem(w10 dup1580(@lt$(w30 ?(::std::numeric::N64::div_rem_n32::3 ::std::numeric::N64::div_rem_n32::2 x(x(w36 w37) x(w35 x(x(w8 w34) _))))) w36)))) fn(dup1582(w7 dup1582(w10 dup1582(w30 dup1582(w35 dup1582(w40 dup1582(w16 w20)))))) tup(tup(w19 w34) w22)))
  ::std::numeric::N64::div_rem_n32::4 = x(x(w0 dup1578(@div(w16 w17) @rem(w20 w22))) x(w37 x(w40 x(0 @add(w17 w19)))))
}

::std::numeric::N64::div_rem_n32::2 { x(x(dup1592(@div(w1 w2) @rem(w4 w6)) w6) x(dup1593(w1 w4) x(x(_ w2) _))) }

::std::numeric::N64::div_rem_n32::3 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

::std::numeric::N64::div_rem_n32::4 { x(w6 x(dup1600(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(w6 x(w10 w3))) w10) w3)) }

::std::numeric::N64::div_rem_n32::5 {
  x(x(w27 w33) x(dup1607(w2 w9) x(dup1609(w0 dup1609(w12 w30)) x(@add(w5 w7) w29))))
  4294967295 = @div(w0 @mul(w2 dup1613(w5 w11)))
  ::std::numeric::N64::mul_n32_n32 = fn(w11 fn(w12 w13))
  ::std::numeric::N64::sub = fn(tup(w27 w9) fn(w13 tup(w15 w16)))
  ::std::numeric::N64::div_rem_n32::4 = x(x(w15 w33) x(w16 x(w30 x(w7 w29))))
}

::std::numeric::N64::div_rem_n32::6 { x(x(w5 w5) x(_ x(_ x(w1 w1)))) }

::std::numeric::N64::eq { fn(tup(@eq(w3 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(w1 x(w4 w13)))) w1) fn(tup(w3 w4) w13)) }

::std::numeric::N64::eq::2 { x(@eq(w4 ?(0 1 w6)) x(w4 w6)) }

::std::numeric::N64::eq::3 { x(_ x(_ 0)) }

::std::numeric::N64::parse { fn(tup(dup1806(?(::std::numeric::N64::parse::3 ::std::numeric::N64::parse::2 x(w14 x(w5 w12))) w14) tup(w5 _)) w12) }

::std::numeric::N64::parse::2 {
  x(w6 x(w5 w7))
  ::std::numeric::N64::from_n32 = fn(0 w0)
  ::std::numeric::N64::parse::4 = x(w6 x(w5 x(w0 w7)))
}

::std::numeric::N64::parse::3 {
  x(_ x(_ w4))
  ::std::numeric::N64::parse::10 = x(w4 ::std::logical::Option::None)
}

::std::numeric::N64::parse::4 { x(dup1816(?(::std::numeric::N64::parse::6 ::std::numeric::N64::parse::5 x(w8 w3)) w8) w3) }

::std::numeric::N64::parse::5 {
  x(w22 x(tup(dup1825(dup1820(w24 @le(57 w27)) w30) w2) x(w20 w29)))
  48 = @le(w24 @n32_and(w27 ?(::std::numeric::N64::parse::9 ::std::numeric::N64::parse::8 x(w22 x(w2 x(w20 x(w30 w29)))))))
}

::std::numeric::N64::parse::6 {
  x(_ x(_ x(w1 w10)))
  ::std::numeric::N64::parse::10 = x(w10 enum(enum(w1 w8) enum(_ w8)))
}

::std::numeric::N64::parse::8 {
  x(@sub(1 w23) x(w3 x(w2 x(@sub(48 w18) w24))))
  ::std::numeric::N64::from_n32 = fn(10 w13)
  ::std::numeric::N64::mul = fn(w2 fn(w13 w14))
  ::std::numeric::N64::from_n32 = fn(w18 w19)
  ::std::numeric::N64::add = fn(w14 fn(w19 w20))
  ::std::numeric::N64::parse::4 = x(w23 x(w3 x(w20 w24)))
}

::std::numeric::N64::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N64::parse::10 { x(w10 w10) }

::std::unicode::String::len { fn(ref(tup(dup1960(w0 w13) w2) tup(w0 w2)) w13) }

::std::unicode::String::split {
  fn(w0 fn(w1 w9))
  ::std::unicode::String::split::1 = x(w0 x(w1 x(tup(0 tup(w8 w8)) w9)))
}

::std::unicode::String::split::1 {
  x(w14 x(dup1969(w1 w20) x(w12 w18)))
  ::std::unicode::String::split_once = fn(w14 fn(w1 tup(w3 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(w20 x(w9 w18)))))))
  ::std::data::List::concat = fn(w12 fn(tup(1 tup(tup(w3 w15) w15)) w9))
}

::std::unicode::String::split::5 {
  enum(w0 w4)
  ::std::unicode::String::split::1 = x(w0 w4)
}

::std::unicode::String::split::6 { x(_ x(w1 w1)) }

::std::unicode::String::split_once {
  fn(w0 fn(w1 w16))
  ::std::unicode::String::split_once::1 = x(w1 x(tup(0 tup(w15 w15)) x(w0 w16)))
}

::std::unicode::String::split_once::1 {
  x(w12 x(w11 x(w10 w13)))
  ::std::unicode::String::len = fn(ref(w10 w1) @le$(w7 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(w5 x(w11 x(w1 w13))))))
  ::std::unicode::String::len = fn(ref(w12 w5) w7)
}

::std::unicode::String::split_once::2 {
  x(w27 x(w26 x(w25 w50)))
  ::std::data::List::iter = fn(ref(w27 w2) w5)
  ::std::data::List::iter = fn(ref(w25 w9) w12)
  ::std::unicode::String::split_once::5 = x(w2 x(w26 x(w9 x(w5 x(w12 w50)))))
}

::std::unicode::String::split_once::3 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::5 {
  x(w10 x(w9 x(w8 x(w7 w6))))
  ::std::data::List::Iter::next = fn(ref(w7 w1) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(w10 x(w9 x(w8 x(w1 w6)))))))
}

::std::unicode::String::split_once::8 {
  enum(ref(dup2083(w1 w16) w1) x(w9 x(w8 x(w7 x(w6 x(w5 w15))))))
  ::std::data::List::Iter::next = fn(ref(w5 w11) enum(::std::unicode::String::split_once::12 enum(::std::unicode::String::split_once::13 x(w9 x(w8 x(w7 x(w6 x(w11 x(w16 w15)))))))))
}

::std::unicode::String::split_once::9 {
  x(_ x(w4 x(w3 x(_ w1))))
  ::std::unicode::String::split_once::14 = x(w4 x(w3 w1))
}

::std::unicode::String::split_once::12 { enum(ref(dup2097(w1 w13) w1) x(w10 x(w9 x(w8 x(w7 x(w6 x(@ne(w13 ?(::std::unicode::String::split_once::5 ::std::unicode::String::split_once::16 x(w10 x(w9 x(w8 x(w7 x(w6 w15))))))) w15))))))) }

::std::unicode::String::split_once::13 {
  x(_ x(w5 x(w4 x(_ x(w2 x(_ w7))))))
  ::std::unicode::String::split_once::14 = x(w5 x(w4 x(w2 w7)))
}

::std::unicode::String::split_once::14 { x(w3 x(tup(_ tup(_ w12)) x(tup(w6 ref(w8 _)) tup(w3 enum(enum(tup(w6 tup(w8 w12)) w26) enum(_ w26)))))) }

::std::unicode::String::split_once::16 {
  x(w5 x(w4 x(w3 x(w2 x(w1 w37)))))
  ::std::data::List::Iter::drop = fn(ref(w2 _) _)
  ::std::data::List::Iter::drop = fn(ref(w1 _) _)
  ::std::data::List::pop_front = fn(ref(w3 w32) enum(::std::unicode::String::split_once::21 enum(::std::unicode::String::split_once::22 x(w5 x(w4 x(w32 w37))))))
}

::std::unicode::String::split_once::21 {
  enum(w0 x(w5 x(w4 w3)))
  ::std::data::List::concat = fn(w4 fn(tup(1 tup(tup(w0 w12) w12)) w11))
  ::std::unicode::String::split_once::1 = x(w5 x(w11 w3))
}

::std::unicode::String::split_once::22 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::23 {
  x(w14 x(w13 tup(w10 ::std::logical::Option::None)))
  ::std::data::List::concat = fn(w14 fn(w13 w10))
}

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(tup(w7 tup(w8 _)) _))
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 { x(w4 x(dup2333(?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1))) w6) w1)) }

::std::IO::print::2 {
  x(x(w17 w21) x(@sub(1 w1) tup(w4 w5)))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::read_line {
  fn(ref(w1 w17) w14)
  ::std::IO::read_byte = fn(ref(w1 w6) fn(0 dup2376(@ne(0 ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(w6 w17) x(w15 w14)))) w15)))
}

::std::IO::read_line::2 { x(w5 x(dup2382(@eq(10 ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(w5 x(w9 w8)))) w9) enum(enum(w8 w12) enum(_ w12)))) }

::std::IO::read_line::3 { x(x(w3 w3) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 { x(x(w4 w4) x(_ tup(0 tup(w7 w7)))) }

::std::IO::read_line::6 {
  x(w10 x(w8 w14))
  ::std::IO::read_line::7 = x(w10 x(x(tup(1 tup(tup(w8 w11) w11)) w14) _))
}

::std::IO::read_line::7 {
  x(x(w10 w18) w8)
  ::std::IO::read_byte = fn(ref(w10 w1) fn(10 dup2399(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(w1 w18) x(w16 w8)))) w16)))
}

::std::IO::read_line::9 {
  x(w9 x(w7 x(x(w6 w19) w17)))
  ::std::data::List::concat = fn(w6 fn(tup(1 tup(tup(w7 w10) w10)) w3))
  ::std::IO::read_line::7 = x(w9 x(x(w3 w19) w17))
}

::std::IO::read_line::10 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

