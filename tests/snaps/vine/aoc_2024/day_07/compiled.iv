
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::std::numeric::N64::add { fn(tup(dup(@add(n0 n1) @n32_add_high(n2 n3)) @add(n4 @add(n3 n5))) fn(tup(dup(n0 n2) n4) tup(n1 n5))) }

::std::numeric::N64::sub { fn(tup(dup(@sub(n0 n1) @lt(n2 n3)) @sub(n4 @sub(n3 n5))) fn(tup(dup(n0 n2) n4) tup(n1 n5))) }

::std::numeric::N64::mul { fn(tup(dup(@mul(n0 n1) dup(@n32_mul_high(n2 n3) @mul(n4 @add(n5 @add(n3 n6))))) n7) fn(tup(dup(n0 dup(n2 @mul(n7 n5))) n4) tup(n1 n6))) }

::std::numeric::N64::mul_n32_n32 { fn(dup(@mul(n0 n1) @n32_mul_high(n2 n3)) fn(dup(n0 n2) tup(n1 n3))) }

::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::std::IO::read_byte { fn(ref(dup(n0 @io_read_byte(n1 dup(n2 @seq$(n0 n3)))) n3) fn(n1 n2)) }

::main { ::day_07::main }

::day_07::main {
  fn(ref(w1 w17) _)
  ::std::numeric::N64::from_n32 = fn(0 w5)
  ::std::numeric::N64::from_n32 = fn(0 w7)
  ::day_07::main::1 = x(x(w1 w29) x(x(w5 w27) x(w7 w25)))
  ::std::numeric::N64::to_string::to_string = fn(w27 tup(@add(8 w30) tup(w31 w32)))
  ::std::IO::println = fn(ref(w29 w10) fn(tup(w30 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w31)))))))) w32)) _))
  ::std::numeric::N64::to_string::to_string = fn(w25 tup(@add(8 w35) tup(w36 w37)))
  ::std::IO::println = fn(ref(w10 w17) fn(tup(w35 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w36)))))))) w37)) _))
}

::day_07::main::1 {
  x(x(w10 w16) w8)
  ::std::IO::read_line = fn(ref(w10 w1) enum(::day_07::main::4 enum(::day_07::main::5 x(x(w1 w16) w8))))
}

::day_07::main::4 {
  enum(w0 x(w7 x(x(w5 w60) x(w3 w58))))
  ::std::unicode::String::split_once = fn(w0 fn(tup(2 tup(tup(58 tup(32 w38)) w38)) tup(w11 w12)))
  ::std::numeric::N64::parse = fn(w11 w15)
  ::std::logical::Option::unwrap = fn(w15 w16)
  ::std::logical::Option::unwrap = fn(w12 w19)
  ::std::unicode::String::split = fn(w19 fn(tup(1 tup(tup(32 w41) w41)) w21))
  ::std::data::List::pop_front = fn(ref(w21 w24) w26)
  ::std::logical::Option::unwrap = fn(w26 w27)
  ::std::numeric::N32::parse = fn(w27 w28)
  ::std::logical::Option::unwrap = fn(w28 w29)
  ::std::numeric::N64::from_n32 = fn(w29 w30)
  ::day_07::main::6 = x(w24 x(x(tup(1 tup(tup(w30 w42) w42)) w47) x(tup(0 tup(w43 w43)) w45)))
  ::day_07::main::20 = x(x(w5 w56) x(x(w3 w54) x(w16 x(w47 x(w45 _)))))
  ::day_07::main::1 = x(w7 x(x(w56 w60) x(w54 w58)))
}

::day_07::main::5 { x(x(w5 w5) x(x(w3 w3) x(w1 w1))) }

::day_07::main::6 {
  x(w9 w8)
  ::std::data::List::pop_front = fn(ref(w9 w1) enum(::day_07::main::9 enum(::day_07::main::10 x(w1 w8))))
}

::day_07::main::9 {
  enum(w0 x(w6 x(x(dup51(w17 dup51(w21 w34)) w89) x(dup54(w26 dup54(w30 w35)) w87))))
  ::std::unicode::String::len = fn(ref(w0 w8) w10)
  ::std::numeric::N32::parse = fn(w8 w13)
  ::std::logical::Option::unwrap = fn(w13 w14)
  ::std::numeric::N64::from_n32 = fn(w14 dup59(w54 dup59(w60 dup59(w69 dup59(w75 w84)))))
  ::std::numeric::N64::add = fn(w50 fn(w54 w55))
  ::std::data::List::map = fn(w17 fn(fn(w50 w55) w19))
  ::std::numeric::N64::mul = fn(w56 fn(w60 w61))
  ::std::data::List::map = fn(w21 fn(fn(w56 w61) w23))
  ::day_07::main::13 = x(w10 x(1 w63))
  ::std::numeric::N64::add = fn(w65 fn(w69 w70))
  ::std::data::List::map = fn(w26 fn(fn(w65 w70) w28))
  ::std::numeric::N64::mul = fn(w71 fn(w75 w76))
  ::std::data::List::map = fn(w30 fn(fn(w71 w76) w32))
  ::std::data::List::concat = fn(w34 fn(w35 w36))
  ::std::numeric::N64::from_n32 = fn(w63 w82)
  ::std::numeric::N64::mul = fn(w77 fn(w82 w83))
  ::std::numeric::N64::add = fn(w83 fn(w84 w85))
  ::std::data::List::map = fn(w36 fn(fn(w77 w85) w38))
  ::std::data::List::concat = fn(w19 fn(w23 w42))
  ::std::data::List::concat = fn(w28 fn(w32 w46))
  ::std::data::List::concat = fn(w46 fn(w38 w48))
  ::day_07::main::6 = x(w6 x(x(w42 w89) x(w48 w87)))
}

::day_07::main::10 { x(_ x(x(w3 w3) x(w1 w1))) }

::day_07::main::13 { x(dup85(@lt$(0 ?(::day_07::main::15 ::day_07::main::14 x(w7 w3))) w7) w3) }

::day_07::main::14 {
  x(@sub(1 w3) x(@mul(10 w1) w8))
  ::day_07::main::13 = x(w3 x(w1 w8))
}

::day_07::main::15 { x(_ x(w1 w1)) }

::day_07::main::20 {
  x(w12 x(w10 x(w8 x(w7 w6))))
  ::std::data::List::pop_front = fn(ref(w7 w1) enum(::day_07::main::23 enum(::day_07::main::24 x(w12 x(w10 x(w8 x(w1 w6)))))))
}

::day_07::main::23 {
  enum(w0 x(w9 x(w7 x(dup108(w12 w17) w4))))
  ::std::numeric::N64::eq = fn(w0 fn(w12 ?(::day_07::main::20 ::day_07::main::26 x(w9 x(w7 x(w17 w4))))))
}

::day_07::main::24 {
  x(x(w7 w7) x(w5 x(w3 x(_ w1))))
  ::day_07::main::28 = x(w5 x(w3 w1))
}

::day_07::main::26 {
  x(x(w15 w2) x(x(w13 w6) x(dup124(w1 w5) _)))
  ::std::numeric::N64::add = fn(w15 fn(w1 w2))
  ::std::numeric::N64::add = fn(w13 fn(w5 w6))
}

::day_07::main::28 {
  x(w9 x(w7 x(w6 w10)))
  ::std::data::List::pop_front = fn(ref(w6 w1) enum(::day_07::main::31 enum(::day_07::main::32 x(w9 x(w7 x(w1 w10))))))
}

::day_07::main::31 {
  enum(w0 x(w6 x(dup143(w9 w13) w3)))
  ::std::numeric::N64::eq = fn(w0 fn(w9 ?(::day_07::main::28 ::day_07::main::34 x(w6 x(w13 w3)))))
}

::day_07::main::32 { x(x(w4 w4) _) }

::day_07::main::34 {
  x(x(w8 w2) x(w6 _))
  ::std::numeric::N64::add = fn(w8 fn(w6 w2))
}

::std::numeric::N64::to_string::to_string { fn(dup159(tup(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n0 x(0 ?(::std::numeric::N64::to_string::to_string::3 ::std::numeric::N64::to_string::to_string::2 x(n1 n2)))))) n0) n1) n2) }

::std::numeric::N64::to_string::to_string::2 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N64::to_string::to_string::3 { x(dup168(tup(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n0 x(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(n1 x(tup(0 tup(n2 n2)) n3))))))) n0) n1) n3) }

::std::numeric::N64::to_string::to_string::4 { x(dup168(tup(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n0 x(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(n1 n2)))))) n0) n1) n2) }

::std::numeric::N64::to_string::to_string::5 { x(_ x(n0 n0)) }

::std::numeric::N64::to_string::to_string::6 { x(tup(n0 dup1579(@div(10 n1) @rem(10 dup1580(@lt$(10 ?(::std::numeric::N64::div_rem_n32::3 ::std::numeric::N64::div_rem_n32::2 x(x(n2 dup1600(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(x(n0 dup1578(@div(10 n3) @rem(10 @add$(48 n4)))) x(n5 x(10 x(0 @add(n3 dup168(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n6 x(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(tup(n7 n8) x(tup(n9 tup(tup(n4 n10) n11)) n12))))))) n7))))))) n5)) x(10 x(x(n1 dup168(n6 n8)) _))))) n2)))) x(tup(@add$(1 n9) tup(n10 n11)) n12)) }

::std::data::List::map { fn(tup(dup242(n0 dup252(?(::std::data::List::map::3 ::std::data::List::map::2 x(n1 x(n2 x(n3 x(n4 n5))))) n1)) tup(n2 _)) fn(n3 tup(n0 tup(n4 n5)))) }

::std::data::List::map::1 { x(dup252(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 n1)) n0) n1) }

::std::data::List::map::2 { x(@sub(1 dup252(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 x(n1 x(n2 x(n3 n4))))) n0)) x(tup(n5 n1) x(dup261(fn(n5 n6) n2) x(tup(n6 n3) n4)))) }

::std::data::List::map::3 { x(_ x(_ x(_ x(n0 n0)))) }

::std::data::List::pop_front { fn(ref(tup(dup271(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) tup(n2 n5)) tup(n1 tup(n3 n5))) n4) }

::std::data::List::pop_front::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::pop_front::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::data::List::iter { fn(ref(tup(dup419(n0 n1) tup(n2 n3)) tup(n0 tup(n4 n3))) tup(n1 ref(n2 n4))) }

::std::data::List::Iter::next { fn(ref(tup(dup425(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::Iter::next::2 { x(x(@sub(1 n0) n0) x(x(ref(tup(n1 n2) tup(n3 n4)) ref(n2 n4)) enum(enum(ref(n1 n3) n5) enum(_ n5)))) }

::std::data::List::Iter::next::3 { x(x(n0 n0) x(x(ref(n1 n1) _) ::std::logical::Option::None)) }

::std::data::List::Iter::drop { fn(ref(tup(_ ref(n0 n0)) _) _) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::numeric::N32::parse { fn(tup(dup1372(?(::std::numeric::N32::parse::3 ::std::numeric::N32::parse::2 x(n0 x(n1 n2))) n0) tup(n1 _)) n2) }

::std::numeric::N32::parse::2 { x(dup1382(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(0 n2)))) n0) x(n1 n2)) }

::std::numeric::N32::parse::3 { x(_ x(_ ::std::logical::Option::None)) }

::std::numeric::N32::parse::4 { x(dup1382(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::parse::5 { x(n0 x(tup(dup1391(dup1386(@le$(48 @n32_and(n1 ?(::std::numeric::N32::parse::9 ::std::numeric::N32::parse::8 x(n0 x(n2 x(n3 x(n4 n5))))))) @le(57 n1)) n4) n2) x(n3 n5))) }

::std::numeric::N32::parse::6 { x(_ x(_ x(n0 enum(enum(n0 n1) enum(_ n1))))) }

::std::numeric::N32::parse::8 { x(@sub(1 dup1382(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(n2 n3)))) n0)) x(n1 x(@mul(10 @add(n4 n2)) x(@sub(48 n4) n3)))) }

::std::numeric::N32::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N32::parse::10 { x(n0 n0) }

::std::numeric::N64::from_n32 { fn(n0 tup(n0 0)) }

::std::numeric::N64::div_rem_n32 { fn(tup(n0 dup1579(@div(n1 n2) @rem(n3 dup1580(@lt$(n4 ?(::std::numeric::N64::div_rem_n32::3 ::std::numeric::N64::div_rem_n32::2 x(x(n5 dup1600(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(x(n0 dup1578(@div(n6 n7) @rem(n8 n9))) x(n10 x(n11 x(0 @add(n7 n12)))))) n10)) x(n13 x(x(n2 n14) _))))) n5)))) fn(dup1582(n1 dup1582(n3 dup1582(n4 dup1582(n13 dup1582(n11 dup1582(n6 n8)))))) tup(tup(n12 n14) n9))) }

::std::numeric::N64::div_rem_n32::2 { x(x(dup1592(@div(n0 n1) @rem(n2 n3)) n3) x(dup1593(n0 n2) x(x(_ n1) _))) }

::std::numeric::N64::div_rem_n32::3 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

::std::numeric::N64::div_rem_n32::4 { x(n0 x(dup1600(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(n0 x(n1 n2))) n1) n2)) }

::std::numeric::N64::div_rem_n32::5 { x(x(dup(@sub(n0 n1) @lt(n2 n3)) n4) x(dup1607(n5 @sub(n6 @sub(n3 dup1600(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(x(n1 n4) x(n7 x(n8 x(n9 n10))))) n7)))) x(dup1609(@div$(4294967295 @mul(n5 dup1613(n11 dup(@mul(n12 dup(n0 n2)) @n32_mul_high(n13 n6))))) dup1609(dup(n12 n13) n8)) x(@add(n11 n9) n10)))) }

::std::numeric::N64::div_rem_n32::6 { x(x(n0 n0) x(_ x(_ x(n1 n1)))) }

::std::numeric::N64::eq { fn(tup(@eq(n0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n1 x(n2 n3)))) n1) fn(tup(n0 n2) n3)) }

::std::numeric::N64::eq::2 { x(@eq(n0 ?(0 1 n1)) x(n0 n1)) }

::std::numeric::N64::eq::3 { x(_ x(_ 0)) }

::std::numeric::N64::parse { fn(tup(dup1806(?(::std::numeric::N64::parse::3 ::std::numeric::N64::parse::2 x(n0 x(n1 n2))) n0) tup(n1 _)) n2) }

::std::numeric::N64::parse::2 { x(dup1816(?(::std::numeric::N64::parse::6 ::std::numeric::N64::parse::5 x(n0 x(n1 x(tup(0 0) n2)))) n0) x(n1 n2)) }

::std::numeric::N64::parse::3 { x(_ x(_ ::std::logical::Option::None)) }

::std::numeric::N64::parse::4 { x(dup1816(?(::std::numeric::N64::parse::6 ::std::numeric::N64::parse::5 x(n0 n1)) n0) n1) }

::std::numeric::N64::parse::5 { x(n0 x(tup(dup1825(dup1820(@le$(48 @n32_and(n1 ?(::std::numeric::N64::parse::9 ::std::numeric::N64::parse::8 x(n0 x(n2 x(n3 x(n4 n5))))))) @le(57 n1)) n4) n2) x(n3 n5))) }

::std::numeric::N64::parse::6 { x(_ x(_ x(n0 enum(enum(n0 n1) enum(_ n1))))) }

::std::numeric::N64::parse::8 { x(@sub(1 dup1816(?(::std::numeric::N64::parse::6 ::std::numeric::N64::parse::5 x(n0 x(n1 x(tup(n2 n3) n4)))) n0)) x(n1 x(tup(dup(@mul(10 dup(@add(n5 n2) @n32_add_high(n6 n7))) dup(@n32_mul_high(10 n8) @mul(0 @add(n9 @add(n8 @add(0 @add(n7 n3))))))) @mul$(10 n9)) x(@sub(48 dup(n5 n6)) n4)))) }

::std::numeric::N64::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N64::parse::10 { x(n0 n0) }

::std::unicode::String::len { fn(ref(tup(dup1960(n0 n1) n2) tup(n0 n2)) n1) }

::std::unicode::String::split { fn(tup(dup1960(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(1 tup(tup(n6 n8) n8)) n9))))))))))) n5) fn(dup1969(tup(dup1960(n2 n1) n3) n7) n9)) }

::std::unicode::String::split::1 { x(tup(dup1960(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup1969(tup(dup1960(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::5 { enum(tup(dup1960(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup1969(tup(dup1960(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::6 { x(_ x(n0 n0)) }

::std::unicode::String::split_once { fn(tup(dup1960(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) n6)))))) n5) fn(tup(dup1960(n2 n1) n3) n6)) }

::std::unicode::String::split_once::1 { x(tup(dup1960(n0 n1) n2) x(n3 x(tup(dup1960(n4 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))) n5) n6))) }

::std::unicode::String::split_once::2 { x(tup(dup419(n0 dup425(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n1 n2) x(x(ref(n3 n4) n5) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(tup(n0 tup(n4 n6)) x(n7 x(tup(n8 tup(n9 n10)) x(tup(n2 n5) x(tup(n11 ref(n12 n9)) n13)))))))))) n1)) tup(n3 n6)) x(n7 x(tup(dup419(n8 n11) tup(n12 n10)) n13))) }

::std::unicode::String::split_once::3 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::5 { x(n0 x(n1 x(n2 x(tup(dup425(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n3 n4) x(x(n5 n6) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(n0 x(n1 x(n2 x(tup(n4 n6) n7))))))))) n3) n5) n7)))) }

::std::unicode::String::split_once::8 { enum(ref(dup2083(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(tup(dup425(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::unicode::String::split_once::12 enum(::std::unicode::String::split_once::13 x(n2 x(n3 x(n4 x(n5 x(tup(n7 n9) x(n1 n10))))))))))) n6) n8) n10)))))) }

::std::unicode::String::split_once::9 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))))) }

::std::unicode::String::split_once::12 { enum(ref(dup2097(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(n6 x(@ne(n1 ?(::std::unicode::String::split_once::5 ::std::unicode::String::split_once::16 x(n2 x(n3 x(n4 x(n5 x(n6 n7))))))) n7))))))) }

::std::unicode::String::split_once::13 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) x(_ tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4))))))))) }

::std::unicode::String::split_once::14 { x(n0 x(tup(_ tup(_ n1)) x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))) }

::std::unicode::String::split_once::16 { x(n0 x(n1 x(tup(dup271(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n2 n3) x(x(n4 n5) enum(::std::unicode::String::split_once::21 enum(::std::unicode::String::split_once::22 x(n0 x(n1 x(tup(n3 tup(n5 n6)) n7)))))))) n2) tup(n4 n6)) x(tup(_ ref(n8 n8)) x(tup(_ ref(n9 n9)) n7))))) }

::std::unicode::String::split_once::21 { enum(n0 x(tup(dup1960(n1 n2) n3) x(tup(@add(1 n4) tup(n5 tup(n0 n6))) x(tup(dup1960(n7 @le$(n2 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n1 n3) x(tup(n4 tup(n5 n6)) x(tup(n7 n8) n9)))))) n8) n9)))) }

::std::unicode::String::split_once::22 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::23 { x(tup(@add(n0 n1) tup(n2 n3)) x(tup(n0 tup(n3 n4)) tup(tup(n1 tup(n2 n4)) ::std::logical::Option::None))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2333(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2333(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2333(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2333(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

::std::IO::read_line { fn(ref(dup(n0 @io_read_byte(0 dup(dup2376(@ne(0 ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::2 { x(n0 x(dup2382(@eq(10 ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(n0 x(n1 n2)))) n1) enum(enum(n2 n3) enum(_ n3)))) }

::std::IO::read_line::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 { x(x(n0 n0) x(_ tup(0 tup(n1 n1)))) }

::std::IO::read_line::6 { x(x(dup(n0 @io_read_byte(10 dup(dup2399(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(1 tup(tup(n4 n5) n5)) n6) _))))) n3) @seq$(n0 n1)))) n2) x(n4 n6)) }

::std::IO::read_line::7 { x(x(dup(n0 @io_read_byte(10 dup(dup2399(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::9 { x(x(dup(n0 @io_read_byte(10 dup(dup2399(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(n4 tup(n5 n6)) n7) n8))))) n3) @seq$(n0 n1)))) n2) x(n9 x(x(tup(@add(1 n4) tup(n5 tup(n9 n6))) n7) n8))) }

::std::IO::read_line::10 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

