
::std::data::Array::Node::to_leaf { fn(n0 n0) }

::std::data::Array::Node::as_leaf { fn(n0 n0) }

::std::data::Array::Node::leaf { fn(n0 n0) }

::std::logical::Option::None { enum(_ enum(n0 n0)) }

::std::ops::Ord::Lt { enum(n0 enum(_ enum(_ n0))) }

::std::ops::Ord::Eq { enum(_ enum(n0 enum(_ n0))) }

::std::ops::Ord::Gt { enum(_ enum(_ enum(n0 n0))) }

::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::std::IO::read_byte { fn(ref(dup(n0 @io_read_byte(n1 dup(n2 @seq$(n0 n3)))) n3) fn(n1 n2)) }

::main { ::day_16::main }

::day_16::main {
  fn(ref(w1 w34) _)
  ::day_16::main::1 = x(x(w1 w49) x(x(tup(0 tup(w41 w41)) w47) x(x(_ w45) x(_ w43))))
  ::std::data::Array::from_list = fn(w47 w10)
  ::std::data::Map::insert::1 = fn(ref(::std::data::Map::empty w14) fn(0 fn(tup(1 tup(tup(tup(w45 0) w50) w50)) _)))
  ::day_16::main::26 = x(w43 x(x(w10 w58) x(w14 x(x(0 w55) x(x(0 w53) 0)))))
  ::std::data::Array::to_list = fn(w58 ::day_16::main::57)
  ::std::numeric::N32::to_string::to_string = fn(w55 tup(@add(8 w61) tup(w62 w63)))
  ::std::IO::println = fn(ref(w49 w27) fn(tup(w61 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w62)))))))) w63)) _))
  ::std::numeric::N32::to_string::to_string = fn(w53 tup(@add(8 w66) tup(w67 w68)))
  ::std::IO::println = fn(ref(w27 w34) fn(tup(w66 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w67)))))))) w68)) _))
}

::day_16::main::1 {
  x(x(w12 w20) w10)
  ::std::IO::read_line = fn(ref(w12 w1) enum(::day_16::main::4 enum(::day_16::main::5 x(x(w1 w20) w10))))
}

::day_16::main::4 {
  enum(w0 x(w9 x(x(w7 w33) x(x(w5 w31) x(w3 w29)))))
  ::day_16::main::6 = x(x(w7 w27) x(x(w5 w25) x(x(w3 w23) x(w0 x(tup(0 tup(w18 w18)) w20)))))
  ::std::data::Array::from_list = fn(w20 w16)
  ::std::data::List::push_back = fn(ref(w27 w13) fn(w16 _))
  ::day_16::main::1 = x(w9 x(x(w13 w33) x(x(w25 w31) x(w23 w29))))
}

::day_16::main::5 { x(x(w7 w7) x(x(w5 w5) x(x(w3 w3) x(w1 w1)))) }

::day_16::main::6 {
  x(w15 x(w13 x(w11 x(w9 w8))))
  ::std::data::List::pop_front = fn(ref(w9 w2) enum(::day_16::main::9 enum(::day_16::main::10 x(w15 x(w13 x(w11 x(w2 w8)))))))
}

::day_16::main::9 {
  enum(dup78(@eq(83 ?(::day_16::main::13 ::day_16::main::12 x(x(w10 w39) x(x(w8 w37) x(x(w6 w35) x(x(w3 w33) x(w31 _))))))) dup78(w31 @ne(35 w16))) x(x(w10 w49) x(x(w8 w47) x(x(w6 w45) x(w4 x(w3 w42))))))
  1 = @sub$(0 w17)
  1 = @sub$(0 w19)
  1 = @sub$(0 w21)
  1 = @sub$(0 w23)
  ::std::data::List::push_back = fn(ref(w33 w13) fn(tup(w16 tup(tup(4 tup(tup(tup(w17 _) tup(tup(w19 _) tup(tup(w21 _) tup(tup(w23 _) w40)))) w40)) 0)) _))
  ::day_16::main::6 = x(x(w39 w49) x(x(w37 w47) x(x(w35 w45) x(w4 x(w13 w42)))))
}

::day_16::main::10 { x(x(w8 w8) x(x(w6 w6) x(x(w4 w4) x(_ x(w1 w1))))) }

::day_16::main::12 {
  x(x(w19 w5) x(x(_ tup(w3 w7)) x(x(w15 w15) x(x(w13 w1) _))))
  ::std::data::List::len = fn(ref(w13 w1) w3)
  ::std::data::List::len = fn(ref(w19 w5) w7)
}

::day_16::main::13 { x(w11 x(x(w9 w9) x(w7 x(w5 x(@eq(69 ?(::day_16::main::15 ::day_16::main::14 x(w11 x(w7 x(w5 w12))))) w12))))) }

::day_16::main::14 {
  x(x(w16 w5) x(x(_ tup(w3 w7)) x(x(w12 w1) _)))
  ::std::data::List::len = fn(ref(w12 w1) w3)
  ::std::data::List::len = fn(ref(w16 w5) w7)
}

::day_16::main::15 { x(x(w6 w6) x(x(w4 w4) x(x(w2 w2) _))) }

::day_16::main::16 {
  x(x(w32 w10) x(w30 fn(w0 fn(dup115(tup(w6 w7) w38) fn(w2 w34)))))
  ::std::data::Array::get = fn(ref(w32 w10) fn(w7 w14))
  ::std::data::Array::get = fn(w14 fn(w6 ref(tup(dup119(w19 ?(::day_16::main::19 ::day_16::main::18 x(w30 x(w0 x(w38 x(w2 x(x(w22 w36) w34))))))) tup(w22 w23)) tup(w19 tup(w36 w23)))))
}

::day_16::main::18 {
  x(w21 x(dup127(@lt(w23 ?(::day_16::main::22 ::day_16::main::21 x(w21 x(w32 x(w18 x(w30 x(x(w28 dup132(w5 w36)) x(x(w8 w27) _)))))))) dup127(w32 @eq(w36 ?(::day_16::main::25 ::day_16::main::24 x(w39 w38))))) x(w18 x(dup129(w3 w30) x(x(w16 w1) w38)))))
  ::std::data::List::get = fn(ref(w16 w1) fn(w3 ref(tup(dup133(w23 w28) w8) tup(w5 dup134(w27 w39)))))
}

::day_16::main::19 { x(x(w7 w7) x(_ x(_ x(_ x(x(w2 w2) 0))))) }

::day_16::main::21 {
  x(x(w25 w4) x(dup144(w1 w6) x(w22 x(w21 x(x(_ w1) x(x(0 _) w15))))))
  ::std::data::Map::get_or_insert::1 = fn(ref(w25 w4) fn(w6 fn(tup(0 tup(w26 w26)) w9)))
  ::std::data::List::push_back = fn(w9 fn(tup(w22 w21) w15))
}

::day_16::main::22 { x(x(w9 w9) x(_ x(_ x(_ x(x(w4 w4) x(x(w2 w2) _)))))) }

::day_16::main::24 { x(w0 w0) }

::day_16::main::25 { x(_ 0) }

::day_16::main::26 { x(w9 x(w8 x(w6 x(w5 x(w3 dup164(?(::day_16::main::28 ::day_16::main::27 x(w9 x(w8 x(w6 x(w5 x(w3 w10)))))) w10)))))) }

::day_16::main::27 { x(_ x(x(w7 w7) x(_ x(x(w4 w4) x(x(w2 w2) _))))) }

::day_16::main::28 {
  x(w13 x(w12 x(w10 w9)))
  ::std::data::Map::remove_min::1 = fn(ref(w10 w1) enum(::day_16::main::31 enum(::day_16::main::32 x(w13 x(w12 x(w1 w9))))))
}

::day_16::main::31 {
  enum(tup(w2 w3) x(dup179(w27 w36) x(x(w13 w35) x(w11 x(x(w10 w32) x(x(w8 w30) w6))))))
  ::day_16::main::34 = x(w27 x(x(w13 w26) x(x(w11 w24) x(x(w10 w22) x(x(w8 w20) x(x(w6 w18) x(w2 w3)))))))
  ::day_16::main::26 = x(w36 x(x(w26 w35) x(w24 x(x(w22 w32) x(x(w20 w30) w18)))))
}

::day_16::main::32 { x(_ x(x(w7 w7) x(_ x(x(w4 w4) x(x(w2 w2) _))))) }

::day_16::main::34 {
  x(w17 x(w16 x(w14 x(w12 x(w10 x(w8 x(w6 w5)))))))
  ::std::data::List::pop_front = fn(ref(w5 w1) enum(::day_16::main::37 enum(::day_16::main::38 x(w17 x(w16 x(w14 x(w12 x(w10 x(w8 x(w6 w1))))))))))
}

::day_16::main::37 {
  enum(tup(dup235(tup(dup237(w31 w65) dup238(w26 w64)) w67) dup236(w44 w66)) x(dup216(w79 w92) x(x(w17 w91) x(x(w15 w89) x(x(w13 w87) x(x(w11 w85) x(x(w9 w83) x(dup233(@le(w55 ?(::day_16::main::41 ::day_16::main::40 x(w79 x(x(w24 w78) x(x(w15 w76) x(x(w13 w74) x(x(w11 w72) x(x(w9 w70) x(w68 x(w67 x(w66 x(w65 x(w64 x(x(w37 w63) x(x(w60 w61) x(x(w49 w59) _)))))))))))))))) dup233(w68 w81)) w6))))))))
  ::std::data::Array::get = fn(ref(w17 w24) fn(w26 w28))
  ::std::data::Array::get = fn(w28 fn(w31 ref(tup(w33 tup(w35 w37)) tup(w33 tup(w42 w63)))))
  ::std::data::List::get = fn(ref(w35 w42) fn(w44 ref(tup(dup244(w55 w60) w59) tup(w61 w49))))
  ::day_16::main::34 = x(w92 x(x(w78 w91) x(x(w76 w89) x(x(w74 w87) x(x(w72 w85) x(x(w70 w83) x(w81 w6)))))))
}

::day_16::main::38 { x(_ x(x(w11 w11) x(x(w9 w9) x(x(w7 w7) x(x(w5 w5) x(x(w3 w3) _)))))) }

::day_16::main::40 { x(tup(w3 w4) x(w30 x(w28 x(w26 x(w24 x(x(w22 w21) x(dup267(w0 dup267(w40 w51)) x(w19 x(w18 x(@eq(w3 ?(::day_16::main::44 ::day_16::main::43 x(w26 x(x(w22 dup265(w21 ?(::day_16::main::50 ::day_16::main::49 x(w30 x(w28 x(w51 x(w19 x(w18 x(x(w38 dup275(w10 ?(::day_16::main::53 ::day_16::main::52 x(w24 x(w15 w57))))) _))))))))) x(w40 x(w16 x(x(w11 w38) x(w4 _)))))))) x(w16 x(w15 x(x(_ w0) x(x(w11 w10) w57)))))))))))))) }

::day_16::main::41 { x(_ x(x(w21 w21) x(x(w19 w19) x(x(w17 w17) x(x(w15 w15) x(x(w13 w13) x(_ x(_ x(_ x(_ x(_ x(x(w6 w6) x(x(w4 w4) x(x(w2 w2) _)))))))))))))) }

::day_16::main::43 { x(w12 x(w10 x(w8 x(@eq(w4 ?(::day_16::main::46 ::day_16::main::45 x(w12 x(w10 x(w8 x(w6 w13)))))) x(w6 x(w4 w13)))))) }

::day_16::main::44 { x(x(w9 w9) x(x(w7 w7) x(_ x(_ x(x(w3 w3) _))))) }

::day_16::main::45 { x(x(_ w7) x(x(_ 1) x(w7 x(x(_ 1) _)))) }

::day_16::main::46 { x(x(w7 w7) x(x(w5 w5) x(_ x(x(w2 w2) _)))) }

::day_16::main::49 { x(x(w9 w9) x(x(w7 w7) x(_ x(_ x(_ x(x(w2 w2) _)))))) }

::day_16::main::50 {
  x(x(w44 w59) x(x(w42 w57) x(dup324(@add(1 w10) dup324(@add(1000 w21) @add(1000 w29))) x(dup325(@add(w13 w14) dup325(w22 w30)) x(dup326(@add(3 @rem(4 w2)) dup326(@add(1 @rem(4 w6)) dup326(w12 w15))) x(x(@n32_or(w16 @n32_or(w24 @n32_or(w32 w34))) w34) _))))))
  ::day_16::main::16 = x(x(w44 w49) x(x(w42 w47) fn(w10 fn(w14 fn(w15 w16)))))
  ::day_16::delta = fn(w12 w13)
  ::day_16::main::16 = x(x(w49 w54) x(x(w47 w52) fn(w21 fn(w22 fn(w2 w24)))))
  ::day_16::main::16 = x(x(w54 w59) x(x(w52 w57) fn(w29 fn(w30 fn(w6 w32)))))
}

::day_16::main::52 { x(w5 x(x(dup340(?(::day_16::main::55 ::day_16::main::54 x(w5 x(x(w7 w8) w6))) w7) w8) w6)) }

::day_16::main::53 { x(x(w4 w4) x(x(w2 w2) _)) }

::day_16::main::54 { x(x(w4 w4) x(x(w2 w2) _)) }

::day_16::main::55 { x(x(@add(1 w1) w1) x(x(_ 1) _)) }

::day_16::main::57 {
  w5
  ::std::data::List::pop_front = fn(ref(w5 w1) enum(::day_16::main::60 enum(_ w1)))
}

::day_16::main::60 {
  enum(w0 ::day_16::main::57)
  ::std::data::Array::to_list = fn(w0 ::day_16::main::62)
}

::day_16::main::62 {
  w5
  ::std::data::List::pop_front = fn(ref(w5 w1) enum(::day_16::main::65 enum(_ w1)))
}

::day_16::main::65 { enum(tup(_ tup(::day_16::main::67 _)) ::day_16::main::62) }

::day_16::main::67 {
  w5
  ::std::data::List::pop_front = fn(ref(w5 w1) enum(::day_16::main::70 enum(_ w1)))
}

::day_16::main::70 { enum(tup(_ 0) ::day_16::main::67) }

::std::data::Map::insert::1 { fn(ref(tup(dup374(?(::std::data::Map::insert::1::3 ::std::data::Map::insert::1::2 x(x(n0 n1) x(x(n2 n3) x(n4 x(n5 n6))))) n0) n2) tup(n1 n3)) fn(n4 fn(n5 n6))) }

::std::data::Map::insert::1::2 { x(n0 x(x(tup(n1 tup(tup(dup446(n2 dup446(n3 n4)) n5) n6)) n7) x(dup445(n8 dup445(@lt(n3 ?(::std::numeric::N32::ord::cmp::3 ::std::numeric::N32::ord::cmp::2 x(n9 x(n4 enum(::std::data::Map::insert::1::8 enum(::std::data::Map::insert::1::9 enum(::std::data::Map::insert::1::10 x(n0 x(x(tup(n10 tup(tup(n11 n12) n13)) n7) x(n8 x(n14 x(x(n1 n10) x(x(n2 n11) x(x(n5 n12) x(x(n6 n13) x(n15 _)))))))))))))))) n9)) x(n14 n15)))) }

::std::data::Map::insert::1::3 { x(x(_ 1) x(x(_ tup(::std::data::Map::empty tup(tup(n0 n1) ::std::data::Map::empty))) x(n0 x(n1 ::std::logical::Option::None)))) }

::std::data::Map::insert::1::8 { x(x(_ n0) x(x(tup(tup(dup1510(dup1503(n1 n2) @add(n3 @add(1 n0))) n4) tup(n5 tup(dup1511(dup1502(n6 @mul$(3 @add(2 @le$(n2 ?(::std::data::Map::balance_right::3 ::std::data::Map::balance_right::2 x(tup(n1 n4) x(n5 x(tup(n6 n7) n8)))))))) n3) n7))) n8) x(n9 x(n10 x(x(tup(dup374(?(::std::data::Map::insert::1::3 ::std::data::Map::insert::1::2 x(x(n11 n12) x(x(n13 n14) x(n9 x(n10 n15))))) n11) n13) tup(n12 n14)) x(x(n16 n16) x(x(n17 n17) x(x(n18 n18) x(n15 _))))))))) }

::std::data::Map::insert::1::9 { x(x(n0 n0) x(x(n1 n1) x(n2 x(n3 x(x(n4 n4) x(x(_ n2) x(x(n5 n3) x(x(n6 n6) x(enum(enum(n5 n7) enum(_ n7)) _))))))))) }

::std::data::Map::insert::1::10 { x(x(_ n0) x(x(tup(tup(dup1510(dup1502(n1 @mul$(3 @add(2 @le$(n2 ?(::std::data::Map::balance_left::3 ::std::data::Map::balance_left::2 x(tup(n1 n3) x(n4 x(tup(n5 n6) n7)))))))) @add(n8 @add(1 n0))) n3) tup(n4 tup(dup1511(dup1503(n5 n2) n8) n6))) n7) x(n9 x(n10 x(x(n11 n11) x(x(n12 n12) x(x(n13 n13) x(x(tup(dup374(?(::std::data::Map::insert::1::3 ::std::data::Map::insert::1::2 x(x(n14 n15) x(x(n16 n17) x(n9 x(n10 n18))))) n14) n16) tup(n15 n17)) x(n18 _))))))))) }

::std::numeric::N32::ord::cmp { fn(ref(dup445(n0 dup445(@lt(n1 ?(::std::numeric::N32::ord::cmp::3 ::std::numeric::N32::ord::cmp::2 x(n2 x(n3 n4)))) n2)) n0) fn(ref(dup446(n5 dup446(n1 n3)) n5) n4)) }

::std::numeric::N32::ord::cmp::2 { x(_ x(_ ::std::ops::Ord::Lt)) }

::std::numeric::N32::ord::cmp::3 { x(@lt$(n0 ?(::std::ops::Ord::Eq ::std::ops::Ord::Gt n1)) x(n0 n1)) }

::std::data::Map::get_or_insert::1 { fn(ref(tup(dup374(?(::std::data::Map::insert::1::3 ::std::data::Map::insert::1::2 x(x(n0 n1) x(x(n2 n3) x(n4 x(n5 enum(::std::logical::Option::unwrap_or::4 enum(::std::logical::Option::unwrap_or::5 x(n6 n7)))))))) n0) n2) tup(n1 n3)) fn(n4 fn(n6 ref(n7 n5)))) }

::std::data::Map::remove_min::1 { fn(ref(tup(dup1230(n0 ?(::std::data::Map::remove_min::1::3 ::std::data::Map::remove_min::1::2 x(x(tup(n0 n1) n2) n3))) n1) n2) n3) }

::std::data::Map::remove_min::1::2 { x(x(tup(@sub(1 n0) tup(tup(dup1230(n1 ?(::std::data::Map::_remove_min::3 ::std::data::Map::_remove_min::2 x(x(tup(n2 tup(n3 n4)) n5) x(x(tup(n1 n6) n2) x(x(n7 n3) x(x(n8 n4) n9)))))) n6) tup(n7 n8))) tup(n0 n5)) enum(enum(n9 n10) enum(_ n10))) }

::std::data::Map::remove_min::1::3 { x(x(n0 n0) ::std::logical::Option::None) }

::std::numeric::N32::to_string::to_string { fn(dup478(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup487(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup487(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup490(@rem(10 @add$(48 n0)) @div(10 dup487(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::day_16::delta { fn(dup496(@n32_and(2 ?(1 ::day_16::delta::2 n0)) @n32_and(1 ?(::day_16::delta::6 ::day_16::delta::5 x(n0 n1)))) n1) }

::day_16::delta::2 { 4294967295 }

::day_16::delta::5 { x(n0 tup(0 n0)) }

::day_16::delta::6 { x(n0 tup(n0 0)) }

::std::data::List::len { fn(ref(tup(dup508(n0 n1) n2) tup(n1 n2)) n0) }

::std::data::List::get { fn(ref(tup(n0 tup(n1 n2)) tup(n0 tup(n3 n2))) fn(dup539(?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n3) ref(tup(n4 n5) tup(n6 n5))) n7)) n7) ref(n4 n6))) }

::std::data::List::get::1 { x(n0 dup539(?(::std::data::List::get::3 ::std::data::List::get::2 x(n0 n1)) n1)) }

::std::data::List::get::2 { x(x(ref(tup(n0 n1) tup(n0 n2)) n3) @sub(1 dup539(?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n2) n3) n4)) n4))) }

::std::data::List::get::3 { x(x(n0 n0) _) }

::std::data::List::pop_front { fn(ref(tup(dup600(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) tup(n2 n5)) tup(n1 tup(n3 n5))) n4) }

::std::data::List::pop_front::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::pop_front::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::data::List::push_back { fn(ref(tup(@add(1 n0) tup(n1 tup(n2 n3))) tup(n0 tup(n1 n3))) fn(n2 _)) }

::std::data::Array::empty { tup(0 _) }

::std::data::Array::from_list { fn(tup(dup845(?(::std::data::Array::from_fn::3 ::std::data::Array::from_fn::2 x(n0 x(n1 x(fn(ref(tup(n2 n3) n3) n2) n4)))) n0) tup(dup846(_ n1) _)) n4) }

::std::data::Array::to_list { fn(tup(dup918(n0 dup898(?(::std::data::Array::fold_back::3 ::std::data::Array::fold_back::2 x(n1 x(n2 x(n3 x(fn(n4 fn(n5 tup(n5 n4))) n6))))) n1)) n2) tup(n0 tup(n6 n3))) }

::std::data::Array::from_fn { fn(dup845(?(::std::data::Array::from_fn::3 ::std::data::Array::from_fn::2 x(n0 x(n1 x(n2 n3)))) n0) fn(ref(dup846(n4 n1) n4) fn(n2 n3))) }

::std::data::Array::from_fn::2 { x(dup851(dup1198(@eq(1 ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(n0 x(n1 x(fn(n2 tup(n3 n4)) tup(n5 n6)))))) n0) dup851(dup1004(?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(n7 dup971(?(::std::data::Array::push_front::3 ::std::data::Array::push_front::2 x(n8 x(ref(n9 n1) x(n10 _)))) dup971(n8 @add(1 _)))) x(ref(n6 n9) enum(::std::logical::Option::unwrap::3 enum(_ _))))) n7) n11)) x(n10 x(fn(ref(n2 n4) n3) tup(n11 n5)))) }

::std::data::Array::from_fn::3 { x(_ x(_ x(_ ::std::data::Array::empty))) }

::std::data::Array::fold_back { fn(tup(dup898(?(::std::data::Array::fold_back::3 ::std::data::Array::fold_back::2 x(n0 x(n1 x(n2 x(n3 n4))))) n0) n1) fn(n2 fn(n3 n4))) }

::std::data::Array::fold_back::2 { x(dup905(dup1053(?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(n0 dup943(?(::std::data::Array::push_back::3 ::std::data::Array::push_back::2 x(n1 x(ref(n2 n3) x(n4 _)))) dup943(n1 @add(1 _)))) x(ref(n5 n2) enum(::std::logical::Option::unwrap::3 enum(_ n6))))) n0) dup1178(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n7 x(n3 x(n8 x(n9 n5)))))) n7)) x(n8 x(n4 x(n9 n6)))) }

::std::data::Array::fold_back::3 { x(_ x(_ x(n0 x(_ n0)))) }

::std::data::Array::len { fn(ref(tup(dup918(n0 n1) n2) tup(n1 n2)) n0) }

::std::data::Array::get { fn(ref(tup(dup923(n0 dup933(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n1 n2) n3) x(n4 n5)))) n5)) n1) tup(n0 n2)) fn(n4 n3)) }

::std::data::Array::get::1 { x(n0 x(n1 dup933(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(n0 x(n1 n2)))) n2))) }

::std::data::Array::get::2 { x(x(ref(tup(n0 n1) tup(n2 n3)) n4) x(dup937(@rem(2 ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n5 tup(n6 dup933(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(n6 n4) x(n7 n8)))) n8))))))) @div(2 n7)) n5)) }

::std::data::Array::get::3 { x(x(n0 n0) _) }

::std::data::Array::push_back { fn(ref(tup(dup943(?(::std::data::Array::push_back::3 ::std::data::Array::push_back::2 x(n0 x(ref(n1 n2) x(n3 _)))) dup943(n0 @add(1 n4))) n1) tup(n4 n2)) fn(n3 _)) }

::std::data::Array::push_back::2 { x(dup963(@lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(x(n0 ref(n1 tup(n1 n2))) n3))) n3) x(n0 x(n2 _))) }

::std::data::Array::push_back::3 { x(_ x(ref(_ n0) x(n0 _))) }

::std::data::Array::push_back::4 { x(n0 dup963(@lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(n0 n1))) n1)) }

::std::data::Array::push_back::5 { x(x(ref(tup(n0 n1) tup(n2 n3)) n4) dup967(n5 @rem(2 ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n5 tup(n6 dup963(@lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(x(n6 n4) n7))) n7))))))))) }

::std::data::Array::push_back::6 { x(x(n0 n0) _) }

::std::data::Array::push_front { fn(ref(tup(dup971(?(::std::data::Array::push_front::3 ::std::data::Array::push_front::2 x(n0 x(ref(n1 n2) x(n3 _)))) dup971(n0 @add(1 n4))) n1) tup(n4 n2)) fn(n3 _)) }

::std::data::Array::push_front::2 { x(dup991(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(x(n0 ref(n1 tup(n2 n1))) n3))) n3) x(n0 x(n2 _))) }

::std::data::Array::push_front::3 { x(_ x(ref(_ n0) x(n0 _))) }

::std::data::Array::push_front::4 { x(n0 dup991(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(n0 n1))) n1)) }

::std::data::Array::push_front::5 { x(x(ref(tup(n0 n1) tup(n2 n0)) n3) @div(2 dup991(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(x(ref(n1 n2) n3) n4))) n4))) }

::std::data::Array::push_front::6 { x(x(n0 n0) _) }

::std::data::Array::pop_back { fn(ref(tup(dup1004(?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(n0 n1) x(ref(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::Array::pop_back::2 { x(x(dup1009(@eq(1 ?(::std::data::Array::pop_back::5 ::std::data::Array::pop_back::4 x(x(n0 n1) n2))) n0) n1) n2) }

::std::data::Array::pop_back::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::data::Array::pop_back::4 { x(x(_ 0) x(ref(n0 _) enum(enum(n0 n1) enum(_ n1)))) }

::std::data::Array::pop_back::5 { x(x(dup1020(dup1026(@sub(1 @rem(2 dup1028(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n1) x(x(n2 n3) x(n4 tup(n5 dup1027(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n5 x(n6 x(n7 x(x(tup(n1 n3) n8) n9)))))) n6)))))) n7))) n4) @sub(1 n10)) n10) x(ref(tup(n0 n2) n8) n9)) }

::std::data::Array::pop_back::6 { x(ref(tup(n0 n1) n2) x(dup1026(@sub(1 @rem(2 dup1028(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n3) x(x(n1 n4) x(n5 tup(n6 dup1027(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n6 x(n7 x(n8 x(x(tup(n3 n4) n2) n9)))))) n7)))))) n8))) n5) n9)) }

::std::data::Array::pop_back::8 { x(ref(n0 _) x(_ x(?(::std::data::Array::pop_back::12 ::std::data::Array::pop_back::11 x(n1 x(n2 n3))) x(x(tup(n1 n2) n3) enum(enum(n0 n4) enum(_ n4)))))) }

::std::data::Array::pop_back::9 { x(ref(tup(n0 n1) n2) x(dup1026(@sub(1 @rem(2 dup1028(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n3) x(x(n1 n4) x(n5 tup(n6 dup1027(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n6 x(n7 x(n8 x(x(tup(n3 n4) n2) n9)))))) n7)))))) n8))) n5) x(_ x(x(n10 n10) n9)))) }

::std::data::Array::pop_back::11 { x(n0 x(_ n0)) }

::std::data::Array::pop_back::12 { x(_ x(n0 n0)) }

::std::data::Array::pop_back::13 { x(n0 n0) }

::std::data::Array::pop_front { fn(ref(tup(dup1053(?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(n0 n1) x(ref(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::Array::pop_front::2 { x(x(dup1058(@eq(1 ?(::std::data::Array::pop_front::5 ::std::data::Array::pop_front::4 x(x(n0 n1) n2))) n0) n1) n2) }

::std::data::Array::pop_front::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::data::Array::pop_front::4 { x(x(_ 0) x(ref(n0 _) enum(enum(n0 n1) enum(_ n1)))) }

::std::data::Array::pop_front::5 { x(x(dup1069(@add(1 @div(2 dup1076(@eq(1 ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(n0 n1) x(n2 x(x(tup(n3 n1) n4) x(x(n5 n3) n6)))))) n2))) @sub(1 n7)) n7) x(ref(tup(n0 n5) n4) n6)) }

::std::data::Array::pop_front::6 { x(ref(tup(n0 n1) n2) x(@add(1 @div(2 dup1076(@eq(1 ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(n0 n3) x(n4 x(x(tup(n5 n3) n2) x(x(n1 n5) n6)))))) n4))) n6)) }

::std::data::Array::pop_front::8 { x(ref(n0 _) x(_ x(x(_ n1) x(x(n1 _) enum(enum(n0 n2) enum(_ n2)))))) }

::std::data::Array::pop_front::9 { x(ref(tup(n0 n1) n2) x(@add(1 @div(2 dup1076(@eq(1 ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(n0 n3) x(n4 x(x(tup(n5 n3) n2) x(x(n1 n5) n6)))))) n4))) x(x(n7 n7) x(x(n8 n8) n6)))) }

::std::data::Array::pop_front::10 { x(n0 n0) }

::std::data::Array::Node::half { fn(ref(tup(n0 n1) tup(n2 n3)) fn(n4 fn(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n4 n5)))) n5))) }

::std::data::Array::Node::half::2 { x(x(n0 n0) x(x(n1 n2) x(@div(2 n3) tup(ref(n1 n2) n3)))) }

::std::data::Array::Node::half::3 { x(x(n0 n1) x(x(n2 n2) x(@add(1 @div(2 n3)) tup(ref(n0 n1) n3)))) }

::std::data::Array::Node::zip_with { fn(dup1178(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n0 x(n1 x(n2 x(n3 n4)))))) n0) fn(n1 fn(n2 fn(n3 n4)))) }

::std::data::Array::Node::zip_with::2 { x(_ x(n0 x(n1 x(fn(n0 fn(n1 n2)) n2)))) }

::std::data::Array::Node::zip_with::3 { x(dup1189(@add(1 @div(2 dup1178(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n0 x(n1 x(n2 x(n3 n4)))))) n0))) @div(2 dup1178(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n5 x(n6 x(n7 x(n8 n9)))))) n5))) x(tup(n1 n6) x(tup(n2 n7) x(dup1192(n3 n8) tup(n4 n9))))) }

::std::data::Array::Node::unzip_with { fn(dup1198(@eq(1 ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(n0 x(n1 x(n2 n3))))) n0) fn(n1 fn(n2 n3))) }

::std::data::Array::Node::unzip_with::2 { x(_ x(n0 x(fn(n0 tup(n1 n2)) tup(n1 n2)))) }

::std::data::Array::Node::unzip_with::3 { x(dup1209(@add(1 @div(2 dup1198(@eq(1 ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(n0 x(n1 x(n2 tup(n3 n4)))))) n0))) @div(2 dup1198(@eq(1 ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(n5 x(n6 x(n7 tup(n8 n9)))))) n5))) x(tup(n1 n6) x(dup1211(n2 n7) tup(tup(n3 n8) tup(n4 n9))))) }

::std::data::Map::empty { tup(0 _) }

::std::data::Map::new { fn(tup(dup1230(n0 @add(n1 @add(1 n2))) n3) fn(n4 fn(tup(dup1230(n5 n1) n6) tup(n2 tup(tup(n0 n3) tup(n4 tup(n5 n6))))))) }

::std::data::Map::len { fn(ref(tup(dup1230(n0 n1) n2) tup(n0 n2)) n1) }

::std::data::Map::_remove_min { fn(ref(tup(@sub(1 n0) tup(tup(dup1230(n1 ?(::std::data::Map::_remove_min::3 ::std::data::Map::_remove_min::2 x(x(tup(n2 tup(n3 n4)) n5) x(x(tup(n1 n6) n2) x(x(n7 n3) x(x(n8 n4) n9)))))) n6) tup(n7 n8))) tup(n0 n5)) n9) }

::std::data::Map::_remove_min::2 { x(x(tup(tup(dup1502(n0 @mul$(3 @add(2 @le$(n1 ?(::std::data::Map::balance_left::3 ::std::data::Map::balance_left::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))))) n2) tup(n3 tup(dup1503(n4 n1) n5))) n6) x(x(tup(@sub(1 n7) tup(tup(dup1230(n8 ?(::std::data::Map::_remove_min::3 ::std::data::Map::_remove_min::2 x(x(tup(n9 tup(n10 n11)) n12) x(x(tup(n8 n13) n9) x(x(n14 n10) x(x(n15 n11) n16)))))) n13) tup(n14 n15))) tup(n7 n12)) x(x(n17 n17) x(x(n18 n18) n16)))) }

::std::data::Map::_remove_min::3 { x(x(_ n0) x(x(n1 n1) x(x(n2 _) x(x(tup(_ n0) _) n2)))) }

::std::data::Map::balance_left { fn(ref(tup(tup(dup1502(n0 @mul$(3 @add(2 @le$(n1 ?(::std::data::Map::balance_left::3 ::std::data::Map::balance_left::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))))) n2) tup(n3 tup(dup1503(n4 n1) n5))) n6) _) }

::std::data::Map::balance_left::2 { x(n0 x(n1 x(n2 tup(n0 tup(n1 n2))))) }

::std::data::Map::balance_left::3 { x(n0 x(n1 x(tup(_ tup(tup(dup1506(n2 @le(n3 ?(::std::data::Map::balance_left::6 ::std::data::Map::balance_left::5 x(n0 x(n1 x(tup(n2 n4) x(n5 x(tup(n6 n7) n8)))))))) n4) tup(n5 tup(dup1507(n6 @mul$(2 n3)) n7)))) n8))) }

::std::data::Map::balance_left::5 { x(tup(dup1230(n0 @add(n1 @add(1 n2))) n3) x(n4 x(tup(dup1230(n5 n1) n6) x(n7 x(n8 tup(tup(n2 tup(tup(n0 n3) tup(n4 tup(n5 n6)))) tup(n7 n8))))))) }

::std::data::Map::balance_left::6 { x(tup(dup1230(n0 @add(n1 @add(1 n2))) n3) x(n4 x(tup(_ tup(tup(dup1230(n5 n1) n6) tup(n7 tup(dup1230(n8 @add(n9 @add(1 n10))) n11)))) x(n12 x(tup(dup1230(n13 n9) n14) tup(tup(n2 tup(tup(n0 n3) tup(n4 tup(n5 n6)))) tup(n7 tup(n10 tup(tup(n8 n11) tup(n12 tup(n13 n14))))))))))) }

::std::data::Map::balance_right { fn(ref(tup(tup(dup1503(n0 n1) n2) tup(n3 tup(dup1502(n4 @mul$(3 @add(2 @le$(n1 ?(::std::data::Map::balance_right::3 ::std::data::Map::balance_right::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))))) n5))) n6) _) }

::std::data::Map::balance_right::2 { x(n0 x(n1 x(n2 tup(n0 tup(n1 n2))))) }

::std::data::Map::balance_right::3 { x(tup(_ tup(tup(dup1507(n0 @mul$(2 n1)) n2) tup(n3 tup(dup1506(n4 @le(n1 ?(::std::data::Map::balance_right::6 ::std::data::Map::balance_right::5 x(n5 x(n6 x(tup(n0 n2) x(n3 x(tup(n4 n7) n8)))))))) n7)))) x(n5 x(n6 n8))) }

::std::data::Map::balance_right::5 { x(n0 x(tup(dup1230(n1 n2) n3) x(n4 x(n5 x(tup(dup1230(n6 @add(n2 @add(1 n7))) n8) tup(n4 tup(n5 tup(n7 tup(tup(n6 n8) tup(n0 tup(n1 n3))))))))))) }

::std::data::Map::balance_right::6 { x(n0 x(tup(dup1230(n1 n2) n3) x(tup(dup1230(n4 @add(n5 @add(1 n6))) n7) x(n8 x(tup(_ tup(tup(dup1230(n9 n5) n10) tup(n11 tup(dup1230(n12 @add(n2 @add(1 n13))) n14)))) tup(tup(n6 tup(tup(n4 n7) tup(n8 tup(n9 n10)))) tup(n11 tup(n13 tup(tup(n12 n14) tup(n0 tup(n1 n3))))))))))) }

::std::data::Map::is_balanced { fn(ref(tup(dup1502(n0 @mul$(3 @add(2 @le$(n1 n2)))) n3) tup(n0 n3)) fn(ref(tup(dup1503(n4 n1) n5) tup(n4 n5)) n2)) }

::std::data::Map::is_single { fn(ref(tup(dup1506(n0 @le(n1 n2)) n3) tup(n0 n3)) fn(ref(tup(dup1507(n4 @mul$(2 n1)) n5) tup(n4 n5)) n2)) }

::std::data::Map::size { fn(ref(tup(tup(dup1510(n0 @add(n1 @add(1 n2))) n3) tup(n4 tup(dup1511(n5 n1) n6))) tup(tup(n0 n3) tup(n4 tup(n5 n6)))) n2) }

::std::logical::Option::unwrap_or { fn(enum(::std::logical::Option::unwrap_or::4 enum(::std::logical::Option::unwrap_or::5 x(n0 n1))) fn(n0 n1)) }

::std::logical::Option::unwrap_or::4 { enum(n0 x(_ n0)) }

::std::logical::Option::unwrap_or::5 { x(n0 n0) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2653(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2653(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2653(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2653(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

::std::IO::read_line { fn(ref(dup(n0 @io_read_byte(0 dup(dup2696(@ne(0 ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::2 { x(n0 x(dup2702(@eq(10 ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(n0 x(n1 n2)))) n1) enum(enum(n2 n3) enum(_ n3)))) }

::std::IO::read_line::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 { x(x(n0 n0) x(_ tup(0 tup(n1 n1)))) }

::std::IO::read_line::6 { x(x(dup(n0 @io_read_byte(10 dup(dup2719(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(1 tup(tup(n4 n5) n5)) n6) _))))) n3) @seq$(n0 n1)))) n2) x(n4 n6)) }

::std::IO::read_line::7 { x(x(dup(n0 @io_read_byte(10 dup(dup2719(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::9 { x(x(dup(n0 @io_read_byte(10 dup(dup2719(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(n4 tup(n5 n6)) n7) n8))))) n3) @seq$(n0 n1)))) n2) x(n9 x(x(tup(@add(1 n4) tup(n5 tup(n9 n6))) n7) n8))) }

::std::IO::read_line::10 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

