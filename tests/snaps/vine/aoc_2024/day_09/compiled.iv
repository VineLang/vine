
::std::logical::Option::None { enum(_ enum(r r)) }

::std::numeric::N64::add {
  fn(tup(dup(al0 al1) ah) fn(tup(dup(bl0 bl1) bh) tup(l h)))
  al0 = @add(bl0 l)
  al1 = @n32_add_high(bl1 c)
  ah = @add(bh @add(c h))
}

::std::numeric::N64::sub {
  fn(tup(dup(al0 al1) ah) fn(tup(dup(bl0 bl1) bh) tup(l h)))
  al0 = @sub(bl0 l)
  al1 = @lt(bl1 c)
  ah = @sub(bh @sub(c h))
}

::std::numeric::N64::mul_n32_n32 {
  fn(dup(a0 a1) fn(dup(b0 b1) tup(l h)))
  a0 = @mul(b0 l)
  a1 = @n32_mul_high(b1 h)
}

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::IO::read_byte { fn(ref(dup(io0 @io_read_byte(default dup(byte @seq$(io0 io1)))) io1) fn(default byte)) }

::main { ::day_09::main }

::day_09::main {
  fn(ref(w1 w20) _)
  ::std::IO::read_line = fn(ref(w1 w6) w8)
  ::std::logical::Option::unwrap = fn(w8 w9)
  dup5(w15 w23) = w9
  ::day_09::part1 = fn(w15 w16)
  ::std::numeric::N64::to_string::to_string = fn(w16 w17)
  w17 = tup(@add(8 w31) tup(w29 w32))
  ::std::IO::println = fn(ref(w6 w12) fn(tup(w31 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w29)))))))) w32)) _))
  ::day_09::part2 = fn(w23 w24)
  ::std::numeric::N64::to_string::to_string = fn(w24 w25)
  w25 = tup(@add(8 w36) tup(w34 w37))
  ::std::IO::println = fn(ref(w12 w20) fn(tup(w36 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w34)))))))) w37)) _))
}

::std::numeric::N64::to_string::to_string {
  fn(dup8(w5 w8) w7)
  ::std::numeric::N64::eq = fn(w5 fn(0 w6))
  w6 = ?(::std::numeric::N64::to_string::to_string::3 ::std::numeric::N64::to_string::to_string::2 x(w8 w7))
}

::std::numeric::N64::to_string::to_string::2 {
  x(_ w0)
  w0 = tup(w3 tup(tup(48 w4) w5))
  1 = w3
  w4 = w5
}

::std::numeric::N64::to_string::to_string::3 {
  x(w4 w9)
  ::std::numeric::N64::to_string::to_string::4 = x(w4 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N64::to_string::to_string::4 {
  x(dup17(w0 w7) w3)
  ::std::numeric::N64::eq = fn(w0 fn(0 w1))
  w1 = ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(w7 w3))
}

::std::numeric::N64::to_string::to_string::5 { x(_ x(w1 w1)) }

::std::numeric::N64::to_string::to_string::6 {
  x(w17 x(w16 w20))
  ::std::numeric::N64::div_rem_n32 = fn(w17 fn(10 w1))
  tup(w2 w3) = w1
  48 = @add(w3 w6)
  ::std::data::List::concat = fn(tup(1 tup(tup(w6 w18) w18)) fn(w16 w11))
  ::std::numeric::N64::to_string::to_string::4 = x(w2 x(w11 w20))
}

::day_09::part1 {
  fn(w0 w28)
  ::day_09::part1::1 = x(w0 x(x(tup(0 tup(w15 w15)) w23) x(x(tup(0 tup(w16 w16)) w21) x(x(0 w19) 0))))
  ::day_09::part1::7 = x(w23 x(w21 x(x(0 w28) x(0 w19))))
}

::day_09::part1::1 {
  x(w14 w13)
  ::std::data::List::pop_front = fn(ref(w14 w2) w5)
  w5 = enum(::day_09::part1::4 enum(::day_09::part1::5 x(w2 w13)))
}

::day_09::part1::4 {
  enum(w0 x(w9 x(x(w8 w48) x(x(w6 w46) x(x(w4 w44) dup63(w25 dup63(w33 w40)))))))
  w0 = @sub(48 w11)
  dup66(w26 dup66(w34 w37)) = w11
  ::std::data::List::pop_front = fn(ref(w9 w15) w18)
  ::std::logical::Option::unwrap_or = fn(w18 fn(48 w19))
  w19 = @sub(48 w20)
  ::std::data::List::push_back = fn(ref(w8 w23) fn(tup(w25 tup(w26 w20)) _))
  ::std::data::List::push_front = fn(ref(w6 w31) fn(tup(w33 w34) _))
  w4 = @add(w37 w39)
  w40 = @add(1 w41)
  ::day_09::part1::1 = x(w15 x(x(w23 w48) x(x(w31 w46) x(x(w39 w44) w41))))
}

::day_09::part1::5 { x(_ x(x(w6 w6) x(x(w4 w4) x(x(w2 w2) _)))) }

::day_09::part1::6 {
  x(x(w29 w22) x(x(dup75(w4 dup75(w14 w16)) w24) w3))
  w3 = fn(w0 fn(w1 _))
  w4 = @add(w1 w6)
  dup78(w10 dup78(w12 w23)) = w6
  w10 = @sub(1 w11)
  w11 = @mul(w12 w13)
  w14 = @sub(1 w15)
  w15 = @mul(w16 w17)
  w13 = @sub(w17 w18)
  w18 = @div(2 w19)
  ::std::numeric::N64::mul_n32_n32 = fn(w0 fn(w19 w20))
  ::std::numeric::N64::add = fn(w29 fn(w20 w21))
  w22 = w21
  w24 = w23
}

::day_09::part1::7 {
  x(w6 x(w5 x(w4 x(w2 dup86(w0 w7)))))
  w0 = ?(::day_09::part1::9 ::day_09::part1::8 x(w6 x(w5 x(w4 x(w2 w7)))))
}

::day_09::part1::8 {
  x(w32 x(w31 x(x(w30 w48) x(w28 dup98(w10 w18)))))
  ::std::data::List::pop_front = fn(ref(w32 w1) w3)
  ::std::logical::Option::unwrap = fn(w3 w4)
  tup(w5 tup(w6 w7)) = w4
  ::std::numeric::N32::min = fn(w6 fn(w10 w11))
  dup104(w15 w17) = w11
  ::day_09::part1::6 = x(x(w30 w37) x(x(w28 w35) w33))
  w33 = fn(w5 fn(w15 _))
  w18 = @sub(w17 dup99(w21 w25))
  ::std::numeric::N32::min = fn(w7 fn(w21 w22))
  dup105(w24 w38) = w22
  w25 = @sub(w24 w26)
  ::day_09::part1::10 = x(x(w31 w44) x(x(w37 w42) x(x(w35 w40) w38)))
  ::day_09::part1::7 = x(w1 x(w44 x(x(w42 w48) x(w40 w26))))
}

::day_09::part1::9 { x(_ x(_ x(x(w3 w3) _))) }

::day_09::part1::10 {
  x(w7 x(w5 x(w3 dup114(w0 w8))))
  w0 = ?(::day_09::part1::12 ::day_09::part1::11 x(w7 x(w5 x(w3 w8))))
}

::day_09::part1::11 {
  x(x(w32 w48) x(x(w30 w46) x(x(w28 w44) dup125(w12 w24))))
  ::std::data::List::get = fn(ref(w32 w1) fn(0 w3))
  ref(tup(dup127(w4 w20) dup129(w11 w16)) tup(w4 w6)) = w3
  ::std::numeric::N32::min = fn(w11 fn(w12 w13))
  dup130(w15 dup130(w21 w23)) = w13
  w16 = @sub(w15 dup128(w6 w33))
  w33 = ?(::day_09::part1::15 ::day_09::part1::14 x(x(w1 w36) _))
  ::day_09::part1::6 = x(x(w30 w41) x(x(w28 w39) w37))
  w37 = fn(w20 fn(w21 _))
  w24 = @sub(w23 w25)
  ::day_09::part1::10 = x(x(w36 w48) x(x(w41 w46) x(x(w39 w44) w25)))
}

::day_09::part1::12 { x(x(w6 w6) x(x(w4 w4) x(x(w2 w2) _))) }

::day_09::part1::14 { x(x(w2 w2) _) }

::day_09::part1::15 {
  x(x(w6 w1) _)
  ::std::data::List::pop_front = fn(ref(w6 w1) _)
}

::day_09::part2 {
  fn(w0 w22)
  ::day_09::part2::1 = x(w0 x(x(tup(0 tup(w12 w12)) w19) x(x(tup(0 tup(w13 w13)) w17) 0)))
  ::day_09::part2::6 = x(w19 x(w17 x(0 w22)))
}

::day_09::part2::1 {
  x(w13 w12)
  ::std::data::List::pop_front = fn(ref(w13 w2) w5)
  w5 = enum(::day_09::part2::4 enum(::day_09::part2::5 x(w2 w12)))
}

::day_09::part2::4 {
  enum(w0 x(w8 x(x(w7 w51) x(x(w5 w49) x(dup168(w26 w29) dup170(w24 w44))))))
  w0 = @sub(48 w10)
  dup173(w25 w30) = w10
  ::std::data::List::pop_front = fn(ref(w8 w14) w17)
  ::std::logical::Option::unwrap_or = fn(w17 fn(48 w18))
  w18 = @sub(48 w19)
  dup174(w37 w41) = w19
  ::std::data::List::push_front = fn(ref(w5 w22) fn(tup(w24 tup(w25 w26)) _))
  w29 = @add(w30 w31)
  dup175(w36 w40) = w31
  ::std::data::List::push_back = fn(ref(w7 w34) fn(tup(w36 w37) _))
  w40 = @add(w41 w42)
  w44 = @add(1 w45)
  ::day_09::part2::1 = x(w14 x(x(w34 w51) x(x(w22 w49) x(w42 w45))))
}

::day_09::part2::5 { x(_ x(x(w5 w5) x(x(w3 w3) _))) }

::day_09::part2::6 {
  x(w8 x(w7 w6))
  ::std::data::List::pop_front = fn(ref(w7 w1) w3)
  w3 = enum(::day_09::part2::9 enum(::day_09::part2::10 x(w8 x(w1 w6))))
}

::day_09::part2::9 {
  enum(w0 x(w11 x(w10 x(w9 w49))))
  w0 = tup(w2 tup(dup192(w47 w24) dup193(w17 w46)))
  ::std::data::List::iter = fn(ref(w11 w13) w15)
  ::day_09::part2::11 = x(w47 x(w46 x(x(w15 w45) x(w17 dup196(w23 dup196(w33 w35))))))
  ::std::data::List::Iter::drop = fn(ref(w45 _) _)
  w23 = @add(w24 w25)
  dup198(w29 w31) = w25
  w29 = @sub(1 w30)
  w30 = @mul(w31 w32)
  w33 = @sub(1 w34)
  w34 = @mul(w35 w36)
  w32 = @sub(w36 w37)
  w37 = @div(2 w38)
  ::std::numeric::N64::mul_n32_n32 = fn(w2 fn(w38 w39))
  ::std::numeric::N64::add = fn(w9 fn(w39 w40))
  ::day_09::part2::6 = x(w13 x(w10 x(w40 w49)))
}

::day_09::part2::10 { x(_ x(_ x(w1 w1))) }

::day_09::part2::11 {
  x(w10 x(w9 x(x(w8 w14) w6)))
  ::std::data::List::Iter::next = fn(ref(w8 w1) w3)
  w3 = enum(::day_09::part2::14 enum(::day_09::part2::15 x(w10 x(w9 x(x(w1 w14) w6)))))
}

::day_09::part2::14 {
  enum(w0 x(w19 x(dup213(w23 w33) x(w17 w15))))
  w0 = ref(w2 w5)
  w2 = tup(dup219(w22 w27) w9)
  w5 = tup(w28 w26)
  w22 = @lt$(w23 w24)
  w24 = ?(::day_09::part2::18 ::day_09::part2::17 x(w19 x(w33 x(w17 x(w15 x(x(w27 w28) x(w9 w26)))))))
}

::day_09::part2::15 { x(_ x(_ x(x(w3 w3) x(w1 w1)))) }

::day_09::part2::17 { x(_ x(_ x(x(w7 w7) x(x(w5 w5) x(x(w3 w3) x(w1 w1)))))) }

::day_09::part2::18 {
  x(dup235(w12 w24) x(w8 x(w7 x(w5 x(w3 x(dup244(w13 w15) w16))))))
  w12 = @le(w13 w14)
  w14 = ?(::day_09::part2::21 ::day_09::part2::20 x(w24 x(w8 x(w7 x(w5 x(w3 x(w15 w16)))))))
}

::day_09::part2::20 {
  x(dup245(w2 w5) x(_ x(x(w15 w15) x(x(_ w1) x(x(dup249(w0 w6) w7) x(w9 w4))))))
  w1 = w0
  w9 = @sub(w2 w4)
  w6 = @add(w5 w7)
}

::day_09::part2::21 {
  x(w9 x(w8 x(w7 x(w5 x(x(w3 w3) x(w1 w1))))))
  ::day_09::part2::11 = x(w9 x(w8 x(w7 w5)))
}

::std::data::List::get {
  fn(ref(tup(w1 tup(w3 w5)) tup(w1 tup(w4 w5))) fn(w9 w13))
  ::std::data::List::get::1 = x(x(ref(w3 w4) w24) w9)
  w13 = ref(w14 w15)
  ref(tup(w14 w16) tup(w15 w16)) = w24
}

::std::data::List::get::1 {
  x(w3 dup291(w0 w4))
  w0 = ?(::std::data::List::get::3 ::std::data::List::get::2 x(w3 w4))
}

::std::data::List::get::2 {
  x(x(w14 w17) w12)
  ref(tup(w1 w3) tup(w1 w4)) = w14
  w12 = @sub(1 w11)
  ::std::data::List::get::1 = x(x(ref(w3 w4) w17) w11)
}

::std::data::List::get::3 { x(x(w2 w2) _) }

::std::data::List::pop_front {
  fn(ref(tup(dup352(w12 w16) tup(w3 w4)) tup(w17 tup(w15 w4))) w13)
  w12 = ?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(w16 w17) x(x(w3 w15) w13)))
}

::std::data::List::pop_front::2 {
  x(x(w14 w1) x(x(w12 w7) w9))
  w14 = @sub(1 w1)
  tup(w3 w4) = w12
  w7 = w4
  w9 = enum(enum(w3 w15) enum(_ w15))
}

::std::data::List::pop_front::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::data::List::concat {
  fn(w0 fn(w1 w22))
  tup(w5 tup(w6 w15)) = w0
  tup(w10 tup(w11 w21)) = w1
  w15 = w11
  w5 = @add(w10 w18)
  w22 = tup(w18 tup(w6 w21))
}

::std::data::List::push_back {
  fn(ref(w1 w9) fn(w3 _))
  ::std::data::List::concat = fn(w1 fn(tup(1 tup(tup(w3 w11) w11)) w9))
}

::std::data::List::push_front {
  fn(ref(w1 w10) fn(w3 _))
  ::std::data::List::concat = fn(tup(1 tup(tup(w3 w12) w12)) fn(w1 w9))
  w10 = w9
}

::std::data::List::iter {
  fn(ref(tup(dup500(w0 w10) tup(w3 w4)) tup(w0 tup(w12 w4))) w14)
  w14 = tup(w10 ref(w3 w12))
}

::std::data::List::Iter::next {
  fn(ref(tup(dup506(w11 w15) w3) tup(w16 w14)) w12)
  w11 = ?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(w15 w16) x(x(w3 w14) w12)))
}

::std::data::List::Iter::next::2 {
  x(x(w20 w1) x(x(w18 w13) w15))
  w20 = @sub(1 w1)
  ref(tup(w4 w7) tup(w5 w8)) = w18
  w13 = ref(w7 w8)
  w15 = enum(enum(ref(w4 w5) w21) enum(_ w21))
}

::std::data::List::Iter::next::3 {
  x(x(w8 w8) x(x(w6 _) ::std::logical::Option::None))
  ref(w2 w2) = w6
}

::std::data::List::Iter::drop {
  fn(ref(w1 _) _)
  tup(_ ref(w7 w7)) = w1
}

::std::logical::Option::unwrap_or {
  fn(w0 fn(w1 w8))
  w0 = enum(::std::logical::Option::unwrap_or::4 enum(::std::logical::Option::unwrap_or::5 x(w1 w8)))
}

::std::logical::Option::unwrap_or::4 { enum(w0 x(_ w0)) }

::std::logical::Option::unwrap_or::5 { x(w1 w1) }

::std::logical::Option::unwrap {
  fn(w0 w7)
  w0 = enum(::std::logical::Option::unwrap::3 enum(_ w7))
}

::std::logical::Option::unwrap::3 { enum(w0 w0) }

::std::numeric::N32::min {
  fn(dup1508(w6 w11) fn(dup1509(w7 w10) w9))
  w6 = @lt(w7 w8)
  w8 = ?(::std::numeric::N32::min::3 ::std::numeric::N32::min::2 x(w11 x(w10 w9)))
}

::std::numeric::N32::min::2 { x(w3 x(_ w3)) }

::std::numeric::N32::min::3 { x(_ x(w2 w2)) }

::std::numeric::N64::div_rem_n32 {
  fn(tup(w0 dup1660(w6 w11)) fn(dup1663(w7 dup1663(w10 dup1663(w30 dup1663(w35 dup1663(w40 dup1663(w16 w20)))))) w27))
  w6 = @div(w7 w8)
  w11 = @rem(w10 dup1661(w29 w36))
  w29 = @lt$(w30 w31)
  w31 = ?(::std::numeric::N64::div_rem_n32::3 ::std::numeric::N64::div_rem_n32::2 x(x(w36 w37) x(w35 x(x(w8 w34) _))))
  ::std::numeric::N64::div_rem_n32::4 = x(x(w0 dup1659(w15 w21)) x(w37 x(w40 x(0 w39))))
  w15 = @div(w16 w17)
  w39 = @add(w17 w19)
  w21 = @rem(w20 w22)
  w27 = tup(tup(w19 w34) w22)
}

::std::numeric::N64::div_rem_n32::2 {
  x(x(dup1673(w0 w5) w6) x(dup1674(w1 w4) x(x(_ w3) _)))
  w0 = @div(w1 w2)
  w3 = w2
  w5 = @rem(w4 w6)
}

::std::numeric::N64::div_rem_n32::3 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

::std::numeric::N64::div_rem_n32::4 {
  x(w6 x(dup1681(w0 w10) w3))
  w0 = ?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(w6 x(w10 w3)))
}

::std::numeric::N64::div_rem_n32::5 {
  x(x(w27 w33) x(dup1688(w2 w9) x(dup1690(w0 dup1690(w12 w30)) x(w23 w29))))
  4294967295 = @div(w0 w1)
  w1 = @mul(w2 w3)
  dup1694(w5 w11) = w3
  w23 = @add(w5 w7)
  ::std::numeric::N64::mul_n32_n32 = fn(w11 fn(w12 w13))
  ::std::numeric::N64::sub = fn(tup(w27 w9) fn(w13 w14))
  tup(w15 w16) = w14
  ::std::numeric::N64::div_rem_n32::4 = x(x(w15 w33) x(w16 x(w30 x(w7 w29))))
}

::std::numeric::N64::div_rem_n32::6 { x(x(w5 w5) x(_ x(_ x(w1 w1)))) }

::std::numeric::N64::eq {
  fn(tup(w0 w1) fn(tup(w3 w4) w13))
  w0 = @eq(w3 w12)
  w12 = ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(w1 x(w4 w13)))
}

::std::numeric::N64::eq::2 {
  x(w5 x(w4 w6))
  w5 = @eq(w4 w2)
  w2 = ?(::std::numeric::N64::eq::5 1 w6)
}

::std::numeric::N64::eq::3 {
  x(_ x(_ w3))
  0 = w3
}

::std::numeric::N64::eq::5 {
  r
  0 = r
}

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(w3 _))
  tup(w7 tup(w8 _)) = w3
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 {
  x(w4 x(dup2414(w0 w6) w1))
  w0 = ?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1)))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 w14))
  w15 = @sub(1 w1)
  tup(w4 w5) = w14
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::read_line {
  fn(ref(w1 w17) w14)
  ::std::IO::read_byte = fn(ref(w1 w6) fn(0 w8))
  dup2457(w12 w15) = w8
  w12 = @ne(0 w13)
  w13 = ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(w6 w17) x(w15 w14)))
}

::std::IO::read_line::2 {
  x(w5 x(dup2463(w6 w9) w1))
  w6 = @eq(10 w7)
  w7 = ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(w5 x(w9 w8)))
  w1 = enum(enum(w8 w12) enum(_ w12))
}

::std::IO::read_line::3 { x(x(w3 w3) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 {
  x(x(w4 w4) x(_ w0))
  w0 = tup(w5 tup(w6 w7))
  0 = w5
  w6 = w7
}

::std::IO::read_line::6 {
  x(w10 x(w8 w6))
  ::std::IO::read_line::7 = x(w10 x(x(tup(1 tup(tup(w8 w11) w11)) w14) _))
  w6 = w14
}

::std::IO::read_line::7 {
  x(x(w10 w18) w8)
  ::std::IO::read_byte = fn(ref(w10 w1) fn(10 w3))
  dup2480(w11 w16) = w3
  w11 = @ne(10 w12)
  w12 = ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(w1 w18) x(w16 w8)))
}

::std::IO::read_line::9 {
  x(w9 x(w7 x(x(w6 w19) w17)))
  ::std::data::List::concat = fn(w6 fn(tup(1 tup(tup(w7 w10) w10)) w3))
  ::std::IO::read_line::7 = x(w9 x(x(w3 w19) w17))
}

::std::IO::read_line::10 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

