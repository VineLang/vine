
::std::data::Array::Node::to_leaf { fn(x x) }

::std::data::Array::Node::as_leaf { fn(x x) }

::std::data::Array::Node::leaf { fn(x x) }

::std::logical::Option::None { enum(_ enum(r r)) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::IO::read_byte { fn(ref(dup(io0 @io_read_byte(default dup(byte @seq$(io0 io1)))) io1) fn(default byte)) }

::main { ::day_15::main }

::day_15::main {
  fn(ref(w1 w60) _)
  ::day_15::main::1 = x(x(w1 w73) x(x(::std::data::Array::empty dup9(w8 w78)) x(0 x(_ dup16(w12 w34)))))
  ::day_15::main::20 = x(x(w73 w81) x(x(w78 dup10(w15 w87)) x(x(tup(0 tup(w74 w74)) w77) w12)))
  ::std::data::Array::to_list = fn(w15 w16)
  ::day_15::main::43 = x(x(0 w85) x(w16 0))
  ::day_15::main::18 = x(x(w81 w89) x(w87 _))
  ::std::numeric::N32::to_string::to_string = fn(w85 w26)
  w26 = tup(@add(8 w93) tup(w91 w94))
  ::std::IO::println = fn(ref(w89 w22) fn(tup(w93 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w91)))))))) w94)) _))
  ::std::data::Array::to_list = fn(w8 w29)
  ::std::data::Array::to_list = fn(w95 w101)
  ::day_15::main::57 = x(x(tup(0 tup(w105 w105)) w108) w101)
  ::std::data::Array::from_list = fn(w108 w104)
  ::std::data::List::map = fn(w29 fn(fn(w95 w104) w31))
  ::std::data::Array::from_list = fn(w31 w32)
  w34 = @mul(tup(2 1) w36)
  ::day_15::main::65 = x(x(w32 w112) x(w77 w36))
  ::std::data::Array::get = fn(ref(w112 w39) fn(0 w41))
  ::std::data::Array::len = fn(w41 _)
  ::std::data::Array::len = fn(ref(w39 dup14(w53 w118)) _)
  ::std::data::Array::to_list = fn(w53 w54)
  ::day_15::main::132 = x(x(0 w116) x(w54 0))
  ::day_15::main::18 = x(x(w22 w120) x(w118 _))
  ::std::numeric::N32::to_string::to_string = fn(w116 w64)
  w64 = tup(@add(8 w124) tup(w122 w125))
  ::std::IO::println = fn(ref(w120 w60) fn(tup(w124 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w122)))))))) w125)) _))
}

::day_15::main::1 {
  x(x(w11 w18) w9)
  ::std::IO::read_line = fn(ref(w11 w1) w3)
  w3 = enum(::day_15::main::4 enum(::day_15::main::5 x(x(w1 w18) w9)))
}

::day_15::main::4 {
  enum(w0 x(w8 x(w6 x(w4 w3))))
  ::std::unicode::String::len = fn(ref(w0 w10) w12)
  w12 = ?(::day_15::main::7 ::day_15::main::6 x(w8 x(w6 x(w4 x(w3 w10)))))
}

::day_15::main::5 { x(x(w6 w6) x(x(w4 w4) x(_ x(w1 w1)))) }

::day_15::main::6 {
  x(w31 x(x(w29 w42) x(dup69(w37 w22) x(x(w26 w39) w24))))
  ::std::data::List::iter = fn(ref(w24 w3) w6)
  ::day_15::main::9 = x(w37 x(x(w26 w36) x(0 x(w6 w33))))
  ::std::data::List::Iter::drop = fn(ref(w33 _) _)
  w3 = dup63(w19 _)
  ::std::data::Array::from_list = fn(w19 w20)
  ::std::data::Array::push_back = fn(ref(w29 w13) fn(w20 _))
  w22 = @add(1 w23)
  ::day_15::main::1 = x(w31 x(x(w13 w42) x(w23 x(w36 w39))))
}

::day_15::main::7 { x(x(w7 w7) x(x(w5 w5) x(_ x(x(w2 w2) _)))) }

::day_15::main::9 {
  x(w10 x(w9 x(w7 x(w6 w12))))
  ::std::data::List::Iter::next = fn(ref(w6 w1) w3)
  w3 = enum(::day_15::main::12 enum(::day_15::main::13 x(w10 x(w9 x(w7 x(w1 w12))))))
}

::day_15::main::12 {
  enum(w0 x(w9 x(w8 x(w6 w5))))
  w0 = ref(dup97(w13 w15) w16)
  w13 = @eq(64 w14)
  w14 = ?(::day_15::main::16 ::day_15::main::15 x(w9 x(w8 x(w6 x(w5 x(w15 w16))))))
}

::day_15::main::13 { x(_ x(x(w4 w4) x(_ x(w1 w1)))) }

::day_15::main::15 {
  x(w12 x(x(_ w3) x(w9 x(x(w8 w8) x(_ w4)))))
  w3 = tup(w9 w12)
  w4 = 46
}

::day_15::main::16 {
  x(w7 x(w6 x(w4 x(w3 x(w1 w1)))))
  w4 = @add(1 w10)
  ::day_15::main::9 = x(w7 x(w6 x(w10 w3)))
}

::day_15::main::17 {
  x(x(w17 w6) w4)
  w4 = fn(tup(w0 w1) w14)
  ::std::data::Array::get = fn(ref(w17 w6) fn(w1 w9))
  ::std::data::Array::get = fn(w9 fn(w0 w14))
}

::day_15::main::18 {
  x(x(w15 w3) x(w13 _))
  ::std::data::Array::to_list = fn(w13 w6)
  ::std::data::List::map = fn(w6 fn(::std::data::Array::to_list w8))
  ::std::data::List::join = fn(w8 fn(tup(1 tup(tup(10 w25) w25)) w10))
  ::std::IO::println = fn(ref(w15 w3) fn(w10 _))
}

::day_15::main::20 {
  x(x(w11 w18) w9)
  ::std::IO::read_line = fn(ref(w11 w1) w3)
  w3 = enum(::day_15::main::23 enum(::day_15::main::24 x(x(w1 w18) w9)))
}

::day_15::main::23 {
  enum(w0 x(w8 x(x(w6 w20) x(x(w4 w18) w2))))
  ::day_15::main::25 = x(x(w6 w15) x(x(w4 w13) x(x(w2 w11) w0)))
  ::day_15::main::20 = x(w8 x(x(w15 w20) x(x(w13 w18) w11)))
}

::day_15::main::24 { x(x(w6 w6) x(x(w4 w4) x(x(w2 w2) _))) }

::day_15::main::25 {
  x(w13 x(w11 x(w9 w7)))
  ::std::data::List::pop_front = fn(ref(w7 w2) w5)
  w5 = enum(::day_15::main::28 enum(::day_15::main::29 x(w13 x(w11 x(w9 w2)))))
}

::day_15::main::28 {
  enum(dup173(w9 dup173(w27 w30)) x(x(w8 w55) x(x(w6 w53) x(x(dup170(w15 w45) w51) w2))))
  ::std::data::List::concat = fn(w6 fn(tup(1 tup(tup(w9 w26) w26)) w12))
  w27 = @eq(60 w28)
  w28 = ?(::day_15::main::32 ::day_15::main::31 x(w30 w29))
  dup174(w16 dup174(w33 w44)) = w29
  w15 = @add(w16 w17)
  ::day_15::main::37 = x(x(w8 w35) x(w33 x(w17 w32)))
  ::day_15::main::17 = x(x(w35 w38) w36)
  w36 = fn(w32 w21)
  ref(dup178(w39 w42) w43) = w21
  w39 = @eq(46 w40)
  w40 = ?(::day_15::main::42 ::day_15::main::41 x(x(w38 w48) x(x(w45 w46) x(w44 x(x(w42 w43) _)))))
  ::day_15::main::25 = x(x(w48 w55) x(x(w12 w53) x(x(w46 w51) w2)))
}

::day_15::main::29 { x(x(w6 w6) x(x(w4 w4) x(x(w2 w2) _))) }

::day_15::main::31 {
  x(_ w1)
  1 = @sub$(0 w0)
  w1 = tup(w0 0)
}

::day_15::main::32 {
  x(dup187(w0 w5) w4)
  w0 = @eq(62 w1)
  w1 = ?(::day_15::main::34 ::day_15::main::33 x(w5 w4))
}

::day_15::main::33 {
  x(_ w0)
  w0 = tup(1 0)
}

::day_15::main::34 {
  x(w3 w4)
  w3 = @eq(94 w1)
  w1 = ?(::day_15::main::36 ::day_15::main::35 w4)
}

::day_15::main::35 {
  r
  1 = @sub$(0 w0)
  r = tup(0 w0)
}

::day_15::main::36 { tup(0 1) }

::day_15::main::37 {
  x(x(w11 w19) x(w9 x(dup200(w1 w15) w16)))
  ::day_15::main::17 = x(x(w11 w14) w12)
  w12 = fn(w1 w2)
  w2 = ref(w3 w4)
  w3 = dup194(w5 w4)
  w5 = @eq(79 w6)
  w6 = ?(::day_15::main::39 ::day_15::main::38 x(x(w14 w19) x(w9 x(w15 w16))))
}

::day_15::main::38 {
  x(w7 x(dup204(w0 w10) x(w4 w9)))
  w4 = @add(w0 w2)
  ::day_15::main::37 = x(w7 x(w10 x(w2 w9)))
}

::day_15::main::39 { x(x(w4 w4) x(_ x(w1 w1))) }

::day_15::main::41 {
  x(w16 x(x(w14 w13) x(w12 x(x(_ w0) _))))
  w0 = 79
  w14 = @add(w12 dup212(w13 w5))
  ::day_15::main::17 = x(w16 w17)
  w17 = fn(w5 w6)
  w6 = ref(_ w8)
  w8 = 46
}

::day_15::main::42 { x(x(w7 w7) x(x(w5 w5) x(_ x(x(w2 w2) _)))) }

::day_15::main::43 {
  x(w8 x(w6 w5))
  ::std::data::List::pop_front = fn(ref(w6 w1) w3)
  w3 = enum(::day_15::main::46 enum(::day_15::main::47 x(w8 x(w1 w5))))
}

::day_15::main::46 {
  enum(w0 x(x(w5 w20) x(w3 dup231(w14 w10))))
  ::std::data::Array::to_list = fn(w0 w7)
  ::day_15::main::48 = x(x(w5 w16) x(w14 x(w7 0)))
  w10 = @add(1 w11)
  ::day_15::main::43 = x(x(w16 w20) x(w3 w11))
}

::day_15::main::47 { x(x(w3 w3) _) }

::day_15::main::48 {
  x(w9 x(w7 x(w6 w5)))
  ::std::data::List::pop_front = fn(ref(w6 w1) w3)
  w3 = enum(::day_15::main::51 enum(::day_15::main::52 x(w9 x(w7 x(w1 w5)))))
}

::day_15::main::51 {
  enum(w0 x(x(w6 w21) x(dup248(w14 w19) x(w3 dup250(w13 w8)))))
  w0 = @eq(79 w11)
  w11 = ?(::day_15::main::55 ::day_15::main::54 x(x(w6 w16) x(w14 x(w13 _))))
  w8 = @add(1 w9)
  ::day_15::main::48 = x(x(w16 w21) x(w19 x(w3 w9)))
}

::day_15::main::52 { x(x(w4 w4) _) }

::day_15::main::54 {
  x(x(w10 w5) x(w8 x(w7 _)))
  w8 = @mul(100 w1)
  w1 = @add(w7 w3)
  w10 = @add(w3 w5)
}

::day_15::main::55 { x(x(w4 w4) _) }

::day_15::main::57 {
  x(w7 w5)
  ::std::data::List::pop_front = fn(ref(w5 w1) w3)
  w3 = enum(::day_15::main::60 enum(::day_15::main::61 x(w7 w1)))
}

::day_15::main::60 {
  enum(dup271(w6 w9) x(x(w4 w14) w2))
  w6 = @eq(79 w7)
  w7 = ?(::day_15::main::64 ::day_15::main::63 x(x(w4 w11) x(w9 _)))
  ::day_15::main::57 = x(x(w11 w14) w2)
}

::day_15::main::61 { x(x(w2 w2) _) }

::day_15::main::63 {
  x(x(w7 w3) _)
  ::std::data::List::concat = fn(w7 fn(tup(2 tup(tup(91 tup(93 w10)) w10)) w3))
}

::day_15::main::64 {
  x(x(w8 w4) x(dup280(w0 w1) _))
  ::std::data::List::concat = fn(w8 fn(tup(2 tup(tup(w0 tup(w1 w9)) w9)) w4))
}

::day_15::main::65 {
  x(w8 x(w6 w5))
  ::std::data::List::pop_front = fn(ref(w6 w1) w3)
  w3 = enum(::day_15::main::68 enum(::day_15::main::69 x(w8 x(w1 w5))))
}

::day_15::main::68 {
  enum(dup294(w7 w10) x(x(w5 w18) x(w3 w2)))
  w7 = @eq(60 w8)
  w8 = ?(::day_15::main::72 ::day_15::main::71 x(x(w5 w14) x(x(w2 w12) x(w10 _))))
  ::day_15::main::65 = x(x(w14 w18) x(w3 w12))
}

::day_15::main::69 { x(x(w3 w3) _) }

::day_15::main::71 {
  w5
  ::day_15::main::75 = w5
}

::day_15::main::72 {
  x(w7 x(w5 x(dup308(w0 w9) w8)))
  w0 = @eq(62 w1)
  w1 = ?(::day_15::main::74 ::day_15::main::73 x(w7 x(w5 x(w9 w8))))
}

::day_15::main::73 {
  w5
  ::day_15::main::75 = w5
}

::day_15::main::74 {
  x(w19 x(x(dup319(w2 w27) w28) x(w15 _)))
  w15 = @eq(94 w21)
  w21 = ?(1 ::day_15::main::93 w22)
  dup321(w26 w33) = w22
  tup(w3 w4) = w2
  ::day_15::main::98 = x(w19 x(w33 x(tup(1 tup(tup(tup(w3 46) w23) w23)) x(w4 x(?(::day_15::main::97 ::day_15::main::96 x(x(w27 w28) x(w26 _))) 1)))))
}

::day_15::main::75 {
  x(w13 x(x(dup334(w3 w20) w21) x(w9 w22)))
  w9 = @eq(60 w15)
  w15 = ?(::day_15::main::78 ::day_15::main::77 w16)
  dup336(w19 w26) = w16
  ::day_15::main::82 = x(w13 x(w26 x(?(::day_15::main::81 ::day_15::main::80 x(x(w20 w21) x(w19 _))) x(w3 x(46 w22)))))
}

::day_15::main::77 {
  r
  1 = @sub$(0 w0)
  r = tup(w0 0)
}

::day_15::main::78 { tup(1 0) }

::day_15::main::80 {
  x(x(w6 w2) x(w4 _))
  w6 = @add(w4 w2)
}

::day_15::main::81 { x(x(w3 w3) _) }

::day_15::main::82 {
  x(x(w22 w36) x(dup354(w0 w34) x(w19 x(w18 x(w17 w28)))))
  w18 = @add(w0 dup357(w4 w32))
  ::day_15::main::17 = x(x(w22 w25) w23)
  w23 = fn(w4 w5)
  ref(dup360(w26 w29) w30) = w5
  w26 = @eq(35 w27)
  w27 = ?(::day_15::main::85 ::day_15::main::84 x(x(w25 w36) x(w34 x(w19 x(w32 x(w17 x(x(w29 w30) w28)))))))
}

::day_15::main::84 {
  x(x(w9 w9) x(_ x(w6 x(_ x(_ x(x(w3 w3) _))))))
  w6 = 0
}

::day_15::main::85 {
  x(w8 x(w6 x(w5 x(w4 x(w3 x(x(dup374(w25 w28) w29) w27))))))
  w25 = @eq(46 w26)
  w26 = ?(::day_15::main::88 ::day_15::main::87 x(w8 x(w6 x(w5 x(w4 x(w3 x(x(w28 w29) w27)))))))
}

::day_15::main::87 {
  x(x(w11 w11) x(_ x(w8 x(_ x(w6 x(x(_ w1) _))))))
  w1 = w6
  w8 = 1
}

::day_15::main::88 {
  x(w8 x(w6 x(w5 x(w4 x(w3 x(x(dup389(w20 w27) w28) w30))))))
  ::day_15::main::82 = x(w8 x(w6 x(dup384(w5 ?(::day_15::main::91 ::day_15::main::90 x(w3 x(x(w27 w28) _)))) x(w4 x(w20 w30)))))
}

::day_15::main::90 {
  x(w5 x(x(_ w1) _))
  w1 = w5
}

::day_15::main::91 { x(_ x(x(w2 w2) _)) }

::day_15::main::93 {
  r
  1 = @sub$(0 r)
}

::day_15::main::96 {
  x(x(w7 w3) x(w5 _))
  w7 = @add(tup(0 w5) w3)
}

::day_15::main::97 { x(x(w3 w3) _) }

::day_15::main::98 {
  x(w10 x(w8 x(w7 w6)))
  ::std::data::List::len = fn(ref(w7 w1) w3)
  w3 = ?(::day_15::main::100 ::day_15::main::99 x(w10 x(w8 x(w1 w6))))
}

::day_15::main::99 {
  x(x(w13 w29) x(dup415(w0 w27) x(w10 x(w9 x(w8 w24)))))
  w9 = @add(w0 dup419(w19 w25))
  ::day_15::main::101 = x(x(w13 w22) x(w10 x(w19 x(x(w8 w18) x(tup(0 tup(w14 w14)) w16)))))
  ::day_15::main::98 = x(x(w22 w29) x(w27 x(w16 x(w25 x(w18 w24)))))
}

::day_15::main::100 { x(x(w6 w6) x(_ x(_ x(_ x(w1 w1))))) }

::day_15::main::101 {
  x(w12 x(w10 w9))
  ::std::data::List::pop_front = fn(ref(w10 w1) w3)
  w3 = enum(::day_15::main::104 enum(::day_15::main::105 x(w12 x(w1 w9))))
}

::day_15::main::104 {
  enum(w0 x(x(w13 w41) x(w11 x(dup441(w16 w38) x(w9 w7)))))
  w0 = tup(dup446(w15 w33) w3)
  ::day_15::main::17 = x(x(w13 w27) w25)
  w25 = fn(tup(w15 w16) w18)
  ref(dup449(w28 w30) w31) = w18
  w28 = @eq(35 w29)
  w29 = ?(::day_15::main::108 ::day_15::main::107 x(x(w27 w41) x(w11 x(w38 x(w9 x(w7 x(w33 x(w3 x(w30 w31)))))))))
}

::day_15::main::105 { x(x(w7 w7) x(_ x(_ x(x(w3 w3) x(w1 w1))))) }

::day_15::main::107 {
  x(x(w14 w14) x(_ x(_ x(x(w10 _) x(x(_ w2) x(_ x(_ x(w4 w4))))))))
  w10 = 0
  w2 = tup(0 tup(w15 w15))
}

::day_15::main::108 {
  x(x(w11 w48) x(w9 x(dup466(w31 w45) x(x(w7 w44) x(x(w5 w42) x(w3 x(w2 x(dup475(w23 dup475(w26 w38)) w39))))))))
  w23 = @eq(91 w24)
  w24 = ?(::day_15::main::111 ::day_15::main::110 x(x(w11 w35) x(x(w9 w33) x(w31 x(w30 x(x(w5 w29) x(w3 x(w26 _))))))))
  ::day_15::main::101 = x(x(w35 w48) x(w33 x(w45 x(x(dup468(w7 dup468(w30 ?(::day_15::main::131 ::day_15::main::130 x(w2 x(x(w38 w39) _))))) w44) x(w29 w42)))))
}

::day_15::main::110 {
  x(w35 x(x(w33 w45) x(w31 x(w49 x(x(w29 w7) x(dup488(w3 dup488(w9 dup488(w43 w16))) x(_ w50)))))))
  ::std::data::List::push_back = fn(ref(w29 w1) fn(tup(w3 91) _))
  w9 = @add(1 w10)
  ::std::data::List::push_back = fn(ref(w1 w7) fn(tup(w10 93) _))
  ::std::data::List::len = fn(ref(w33 w37) w39)
  w39 = ?(::day_15::main::114 ::day_15::main::113 x(x(w37 w45) x(w43 x(x(46 w42) _))))
  ::day_15::main::17 = x(w35 w46)
  w16 = @add(1 w17)
  w46 = fn(tup(w17 w31) w20)
  ref(w22 w52) = w20
  w49 = ?(::day_15::main::123 ::day_15::main::122 x(w42 x(x(w22 w52) w50)))
}

::day_15::main::111 {
  x(w12 x(x(w10 w10) x(w8 x(w17 x(w6 x(w4 x(w3 w13)))))))
  w3 = @eq(93 w1)
  w1 = ?(::day_15::main::125 ::day_15::main::124 x(w12 x(w8 x(w17 x(w6 x(w4 w13))))))
}

::day_15::main::113 {
  x(x(w22 w32) x(w20 x(w19 w27)))
  ::std::data::List::get = fn(ref(w22 w1) fn(0 w3))
  w3 = ref(w5 w8)
  w5 = tup(dup513(w13 w23) dup514(w15 w28))
  w8 = tup(w13 w15)
  w20 = @add(1 w25)
  w23 = @eq(w25 w26)
  w26 = ?(::day_15::main::118 ::day_15::main::117 x(x(w1 w32) x(w19 x(w28 w27))))
}

::day_15::main::114 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

::day_15::main::117 {
  x(x(w11 w1) x(x(_ w5) x(w7 _)))
  ::std::data::List::pop_front = fn(ref(w11 w1) _)
  w5 = w7
}

::day_15::main::118 { x(x(w5 w5) x(x(w3 w3) _)) }

::day_15::main::122 {
  x(w5 x(x(_ w1) _))
  w1 = w5
}

::day_15::main::123 { x(_ x(x(w2 w2) _)) }

::day_15::main::124 {
  x(w30 x(w28 x(w34 x(x(w26 w8) x(dup543(w3 dup543(w10 w14)) w35)))))
  w3 = @sub(1 w4)
  ::std::data::List::push_back = fn(ref(w26 w1) fn(tup(w4 91) _))
  ::std::data::List::push_back = fn(ref(w1 w8) fn(tup(w10 93) _))
  ::day_15::main::17 = x(w30 w31)
  w14 = @sub(1 w15)
  w31 = fn(tup(w15 w28) w18)
  ref(w20 w37) = w18
  w34 = ?(::day_15::main::128 ::day_15::main::127 x(x(w20 w37) w35))
}

::day_15::main::125 { x(x(w7 w7) x(_ x(_ x(x(w3 w3) _)))) }

::day_15::main::127 {
  x(x(_ w0) _)
  w0 = 46
}

::day_15::main::128 { x(x(w2 w2) _) }

::day_15::main::130 {
  x(w5 x(x(_ w1) _))
  w1 = w5
}

::day_15::main::131 { x(_ x(x(w2 w2) _)) }

::day_15::main::132 {
  x(w8 x(w6 w5))
  ::std::data::List::pop_front = fn(ref(w6 w1) w3)
  w3 = enum(::day_15::main::135 enum(::day_15::main::136 x(w8 x(w1 w5))))
}

::day_15::main::135 {
  enum(w0 x(x(w5 w20) x(w3 dup568(w14 w10))))
  ::std::data::Array::to_list = fn(w0 w7)
  ::day_15::main::137 = x(x(w5 w16) x(w14 x(w7 0)))
  w10 = @add(1 w11)
  ::day_15::main::132 = x(x(w16 w20) x(w3 w11))
}

::day_15::main::136 { x(x(w3 w3) _) }

::day_15::main::137 {
  x(w9 x(w7 x(w6 w5)))
  ::std::data::List::pop_front = fn(ref(w6 w1) w3)
  w3 = enum(::day_15::main::140 enum(::day_15::main::141 x(w9 x(w7 x(w1 w5)))))
}

::day_15::main::140 {
  enum(w0 x(x(w6 w21) x(dup585(w14 w19) x(w3 dup587(w13 w8)))))
  w0 = @eq(91 w11)
  w11 = ?(::day_15::main::144 ::day_15::main::143 x(x(w6 w16) x(w14 x(w13 _))))
  w8 = @add(1 w9)
  ::day_15::main::137 = x(x(w16 w21) x(w19 x(w3 w9)))
}

::day_15::main::141 { x(x(w4 w4) _) }

::day_15::main::143 {
  x(x(w10 w5) x(w8 x(w7 _)))
  w8 = @mul(100 w1)
  w1 = @add(w7 w3)
  w10 = @add(w3 w5)
}

::day_15::main::144 { x(x(w4 w4) _) }

::std::numeric::N32::to_string::to_string {
  fn(dup599(w5 w7) w6)
  w5 = ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w4)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
  w4 = w9
}

::std::numeric::N32::to_string::to_string::3 {
  x(_ w0)
  w0 = tup(w3 tup(tup(48 w4) w5))
  1 = w3
  w4 = w5
}

::std::numeric::N32::to_string::to_string::4 {
  x(dup608(w0 w6) w2)
  w0 = ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup611(w0 w7) x(w11 w15))
  w0 = @rem(10 w1)
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  w7 = @div(10 w8)
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::data::List::len {
  fn(ref(w1 w6) w11)
  w1 = tup(w10 w8)
  w6 = tup(w7 w8)
  w10 = dup617(w11 w7)
}

::std::data::List::get {
  fn(ref(tup(w1 tup(w3 w5)) tup(w1 tup(w4 w5))) fn(w9 w13))
  ::std::data::List::get::1 = x(x(ref(w3 w4) w24) w9)
  w13 = ref(w14 w15)
  ref(tup(w14 w16) tup(w15 w16)) = w24
}

::std::data::List::get::1 {
  x(w3 dup648(w0 w4))
  w0 = ?(::std::data::List::get::3 ::std::data::List::get::2 x(w3 w4))
}

::std::data::List::get::2 {
  x(x(w14 w17) w12)
  ref(tup(w1 w3) tup(w1 w4)) = w14
  w12 = @sub(1 w11)
  ::std::data::List::get::1 = x(x(ref(w3 w4) w17) w11)
}

::std::data::List::get::3 { x(x(w2 w2) _) }

::std::data::List::map {
  fn(tup(dup680(w6 w22) tup(w1 _)) fn(w3 w16))
  ::std::data::List::map::1 = x(w22 x(w1 x(w3 x(w10 w19))))
  w16 = tup(w6 tup(w10 w19))
}

::std::data::List::map::1 {
  x(dup690(w0 w10) w4)
  w0 = ?(::std::data::List::map::3 ::std::data::List::map::2 x(w10 w4))
}

::std::data::List::map::2 {
  x(w23 x(w22 x(dup699(w7 w26) x(w20 w25))))
  tup(w1 w2) = w22
  w7 = fn(w1 w9)
  w20 = tup(w9 w11)
  w23 = @sub(1 w18)
  ::std::data::List::map::1 = x(w18 x(w2 x(w26 x(w11 w25))))
}

::std::data::List::map::3 { x(_ x(_ x(_ x(w1 w1)))) }

::std::data::List::pop_front {
  fn(ref(tup(dup709(w12 w16) tup(w3 w4)) tup(w17 tup(w15 w4))) w13)
  w12 = ?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(w16 w17) x(x(w3 w15) w13)))
}

::std::data::List::pop_front::2 {
  x(x(w14 w1) x(x(w12 w7) w9))
  w14 = @sub(1 w1)
  tup(w3 w4) = w12
  w7 = w4
  w9 = enum(enum(w3 w15) enum(_ w15))
}

::std::data::List::pop_front::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::data::List::concat {
  fn(w0 fn(w1 w22))
  tup(w5 tup(w6 w15)) = w0
  tup(w10 tup(w11 w21)) = w1
  w15 = w11
  w5 = @add(w10 w18)
  w22 = tup(w18 tup(w6 w21))
}

::std::data::List::push_back {
  fn(ref(w1 w9) fn(w3 _))
  ::std::data::List::concat = fn(w1 fn(tup(1 tup(tup(w3 w11) w11)) w9))
}

::std::data::List::join {
  fn(w0 fn(w1 w14))
  ::std::data::List::into_iter = fn(w0 w5)
  ::std::data::List::IntoIter::next = fn(ref(w5 w10) w12)
  w12 = enum(::std::data::List::join::4 enum(::std::data::List::join::5 x(w1 x(w10 w14))))
}

::std::data::List::join::4 {
  enum(w0 x(w4 x(w3 w7)))
  ::std::data::List::join::6 = x(w4 x(w3 x(w0 w7)))
}

::std::data::List::join::5 {
  x(_ x(_ w3))
  w3 = tup(w4 tup(w5 w6))
  0 = w4
  w5 = w6
}

::std::data::List::join::6 {
  x(w8 x(w7 w6))
  ::std::data::List::IntoIter::next = fn(ref(w7 w1) w3)
  w3 = enum(::std::data::List::join::9 enum(::std::data::List::join::10 x(w8 x(w1 w6))))
}

::std::data::List::join::9 {
  enum(w0 x(dup786(w6 w14) x(w4 x(w3 w12))))
  ::std::data::List::concat = fn(w6 fn(w0 w8))
  ::std::data::List::concat = fn(w3 fn(w8 w10))
  ::std::data::List::join::6 = x(w14 x(w4 x(w10 w12)))
}

::std::data::List::join::10 { x(_ x(_ x(w1 w1))) }

::std::data::List::iter {
  fn(ref(tup(dup857(w0 w10) tup(w3 w4)) tup(w0 tup(w12 w4))) w14)
  w14 = tup(w10 ref(w3 w12))
}

::std::data::List::Iter::next {
  fn(ref(tup(dup863(w11 w15) w3) tup(w16 w14)) w12)
  w11 = ?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(w15 w16) x(x(w3 w14) w12)))
}

::std::data::List::Iter::next::2 {
  x(x(w20 w1) x(x(w18 w13) w15))
  w20 = @sub(1 w1)
  ref(tup(w4 w7) tup(w5 w8)) = w18
  w13 = ref(w7 w8)
  w15 = enum(enum(ref(w4 w5) w21) enum(_ w21))
}

::std::data::List::Iter::next::3 {
  x(x(w8 w8) x(x(w6 _) ::std::logical::Option::None))
  ref(w2 w2) = w6
}

::std::data::List::Iter::drop {
  fn(ref(w1 _) _)
  tup(_ ref(w7 w7)) = w1
}

::std::data::List::into_iter {
  fn(tup(w0 tup(w1 _)) w7)
  w7 = tup(w0 w1)
}

::std::data::List::IntoIter::next {
  fn(ref(tup(dup889(w11 w15) w3) tup(w16 w14)) w12)
  w11 = ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(w15 w16) x(x(w3 w14) w12)))
}

::std::data::List::IntoIter::next::2 {
  x(x(w14 w1) x(x(w12 w7) w9))
  w14 = @sub(1 w1)
  tup(w3 w4) = w12
  w7 = w4
  w9 = enum(enum(w3 w15) enum(_ w15))
}

::std::data::List::IntoIter::next::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::data::Array::empty { tup(0 _) }

::std::data::Array::from_list {
  fn(tup(w0 tup(w1 _)) w10)
  ::std::data::Array::from_fn = fn(w0 fn(ref(w1 _) fn(fn(ref(tup(w18 w19) w19) w18) w10)))
}

::std::data::Array::to_list {
  fn(w0 w14)
  ::std::data::Array::len = fn(ref(w0 w5) w7)
  ::std::data::Array::fold_back = fn(w5 fn(w10 fn(fn(w16 fn(w17 tup(w17 w16))) w12)))
  w14 = tup(w7 tup(w12 w10))
}

::std::data::Array::from_fn {
  fn(dup954(w9 w13) fn(ref(dup955(w1 w12) w1) fn(w4 w10)))
  w9 = ?(::std::data::Array::from_fn::3 ::std::data::Array::from_fn::2 x(w13 x(w12 x(w4 w10))))
}

::std::data::Array::from_fn::2 {
  x(dup960(w1 dup960(w9 w29)) x(w34 x(w33 w31)))
  w33 = fn(ref(w36 w41) w43)
  ::std::data::Array::Node::unzip_with = fn(w1 fn(w3 fn(fn(w36 tup(w43 w41)) w5)))
  tup(w6 w7) = w5
  ::std::data::Array::pop_back = fn(ref(tup(w9 w7) w14) w16)
  ::std::logical::Option::unwrap = fn(w16 _)
  ::std::data::Array::push_front = fn(ref(w14 w20) fn(w34 _))
  tup(_ w25) = w20
  w3 = w25
  w31 = tup(w29 w6)
}

::std::data::Array::from_fn::3 { x(_ x(_ x(_ ::std::data::Array::empty))) }

::std::data::Array::fold_back {
  fn(tup(dup1007(w9 w14) w1) fn(w3 fn(w4 w10)))
  w9 = ?(::std::data::Array::fold_back::3 ::std::data::Array::fold_back::2 x(w14 x(w1 x(w3 x(w4 w10)))))
}

::std::data::Array::fold_back::2 {
  x(dup1014(w1 w2) x(w30 x(w29 x(w28 w15))))
  ::std::data::Array::Node::zip_with = fn(w2 fn(w4 fn(w30 fn(w28 w7))))
  ::std::data::Array::pop_front = fn(ref(tup(w1 w7) w11) w13)
  ::std::logical::Option::unwrap = fn(w13 w14)
  w15 = w14
  ::std::data::Array::push_back = fn(ref(w11 w17) fn(w29 _))
  tup(_ w22) = w17
  w4 = w22
}

::std::data::Array::fold_back::3 { x(_ x(_ x(w3 x(_ w3)))) }

::std::data::Array::len {
  fn(ref(w1 w6) w10)
  w1 = tup(w9 w8)
  w6 = tup(w7 w8)
  w9 = dup1027(w10 w7)
}

::std::data::Array::get {
  fn(ref(tup(dup1032(w0 w11) w3) tup(w0 w4)) fn(w8 w17))
  ::std::data::Array::get::1 = x(x(ref(w3 w4) w22) x(w8 w11))
  ::std::data::Array::Node::as_leaf = fn(w22 w17)
}

::std::data::Array::get::1 {
  x(w5 x(w3 dup1042(w0 w6)))
  w0 = @lt$(1 w1)
  w1 = ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(w5 x(w3 w6)))
}

::std::data::Array::get::2 {
  x(x(w13 w17) x(dup1046(w2 w8) w10))
  w2 = @rem(2 w3)
  ::std::data::Array::Node::half = fn(w13 fn(w10 fn(w3 w4)))
  tup(w5 w6) = w4
  w8 = @div(2 w9)
  ::std::data::Array::get::1 = x(x(w5 w17) x(w9 w6))
}

::std::data::Array::get::3 { x(x(w3 w3) _) }

::std::data::Array::push_back {
  fn(ref(tup(dup1052(w15 dup1052(w19 w12)) w3) tup(w13 w4)) fn(w8 _))
  w15 = ?(::std::data::Array::push_back::3 ::std::data::Array::push_back::2 x(w19 x(ref(w3 w4) x(w8 _))))
  w12 = @add(1 w13)
}

::std::data::Array::push_back::2 {
  x(w14 x(w13 x(w12 _)))
  ::std::data::Array::push_back::4 = x(x(w13 w17) w14)
  ref(w4 w10) = w17
  ::std::data::Array::Node::leaf = fn(w12 w8)
  w10 = tup(w4 w8)
}

::std::data::Array::push_back::3 {
  x(_ x(w9 x(w8 _)))
  ref(_ w6) = w9
  ::std::data::Array::Node::leaf = fn(w8 w5)
  w6 = w5
}

::std::data::Array::push_back::4 {
  x(w4 dup1072(w0 w5))
  w0 = @lt$(1 w1)
  w1 = ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(w4 w5))
}

::std::data::Array::push_back::5 {
  x(x(w10 w13) dup1076(w1 w2))
  w2 = @rem(2 w3)
  ::std::data::Array::Node::half = fn(w10 fn(w1 fn(w3 w4)))
  tup(w5 w6) = w4
  ::std::data::Array::push_back::4 = x(x(w5 w13) w6)
}

::std::data::Array::push_back::6 { x(x(w2 w2) _) }

::std::data::Array::push_front {
  fn(ref(tup(dup1080(w15 dup1080(w19 w12)) w3) tup(w13 w4)) fn(w8 _))
  w15 = ?(::std::data::Array::push_front::3 ::std::data::Array::push_front::2 x(w19 x(ref(w3 w4) x(w8 _))))
  w12 = @add(1 w13)
}

::std::data::Array::push_front::2 {
  x(w14 x(w13 x(w12 _)))
  ::std::data::Array::push_front::4 = x(x(w13 w17) w14)
  ref(w4 w10) = w17
  ::std::data::Array::Node::leaf = fn(w12 w7)
  w10 = tup(w7 w4)
}

::std::data::Array::push_front::3 {
  x(_ x(w9 x(w8 _)))
  ref(_ w6) = w9
  ::std::data::Array::Node::leaf = fn(w8 w5)
  w6 = w5
}

::std::data::Array::push_front::4 {
  x(w4 dup1100(w0 w5))
  w0 = @lt$(1 w1)
  w1 = ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(w4 w5))
}

::std::data::Array::push_front::5 {
  x(x(w23 w26) w21)
  ref(tup(w2 w4) tup(w15 w12)) = w23
  tup(w11 w12) = tup(w4 w2)
  w21 = @div(2 w19)
  ::std::data::Array::push_front::4 = x(x(ref(w11 w15) w26) w19)
}

::std::data::Array::push_front::6 { x(x(w2 w2) _) }

::std::data::Array::pop_back {
  fn(ref(tup(dup1113(w12 w15) w3) tup(w16 w4)) w13)
  w12 = ?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(w15 w16) x(ref(w3 w4) w13)))
}

::std::data::Array::pop_back::2 {
  x(x(dup1118(w0 w8) w9) w3)
  w0 = @eq(1 w1)
  w1 = ?(::std::data::Array::pop_back::5 ::std::data::Array::pop_back::4 x(x(w8 w9) w3))
}

::std::data::Array::pop_back::3 {
  x(x(w3 w3) x(_ w5))
  ::std::data::Array::pop_back::13 = x(w5 ::std::logical::Option::None)
}

::std::data::Array::pop_back::4 {
  x(x(_ w0) x(w7 w12))
  w0 = 0
  w7 = ref(w2 _)
  ::std::data::Array::Node::to_leaf = fn(w2 w4)
  ::std::data::Array::pop_back::13 = x(w12 enum(enum(w4 w10) enum(_ w10)))
}

::std::data::Array::pop_back::5 {
  x(x(dup1129(w0 w2) w3) x(w6 w9))
  w2 = @sub(1 w3)
  ::std::data::Array::pop_back::6 = x(w6 x(w0 w9))
}

::std::data::Array::pop_back::6 {
  x(w20 x(dup1135(w0 w11) w23))
  w0 = @sub(1 w1)
  w1 = @rem(2 w2)
  dup1137(w12 w26) = w2
  ref(w6 w25) = w20
  ::std::data::Array::Node::half = fn(ref(w6 w9) fn(w11 fn(w12 w13)))
  tup(w14 dup1136(w21 w27)) = w13
  w21 = @eq(1 w22)
  w22 = ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(w14 x(w27 x(w26 x(x(w9 w25) w23)))))
}

::std::data::Array::pop_back::8 {
  x(w18 x(_ x(w16 x(x(w15 w10) w12))))
  w18 = ref(w1 _)
  ::std::data::Array::Node::to_leaf = fn(w1 w3)
  tup(w6 w7) = w15
  w16 = ?(::std::data::Array::pop_back::12 ::std::data::Array::pop_back::11 x(w6 x(w7 w20)))
  w10 = w20
  w12 = enum(enum(w3 w23) enum(_ w23))
}

::std::data::Array::pop_back::9 {
  x(w5 x(w4 x(_ x(x(w2 w2) w24))))
  ::std::data::Array::pop_back::6 = x(w5 x(w4 w24))
}

::std::data::Array::pop_back::11 { x(w3 x(_ w3)) }

::std::data::Array::pop_back::12 { x(_ x(w2 w2)) }

::std::data::Array::pop_back::13 { x(w11 w11) }

::std::data::Array::pop_front {
  fn(ref(tup(dup1162(w12 w15) w3) tup(w16 w4)) w13)
  w12 = ?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(w15 w16) x(ref(w3 w4) w13)))
}

::std::data::Array::pop_front::2 {
  x(x(dup1167(w0 w8) w9) w3)
  w0 = @eq(1 w1)
  w1 = ?(::std::data::Array::pop_front::5 ::std::data::Array::pop_front::4 x(x(w8 w9) w3))
}

::std::data::Array::pop_front::3 {
  x(x(w3 w3) x(_ w5))
  ::std::data::Array::pop_front::10 = x(w5 ::std::logical::Option::None)
}

::std::data::Array::pop_front::4 {
  x(x(_ w0) x(w7 w12))
  w0 = 0
  w7 = ref(w2 _)
  ::std::data::Array::Node::to_leaf = fn(w2 w4)
  ::std::data::Array::pop_front::10 = x(w12 enum(enum(w4 w10) enum(_ w10)))
}

::std::data::Array::pop_front::5 {
  x(x(dup1178(w0 w2) w3) x(w6 w9))
  w2 = @sub(1 w3)
  ::std::data::Array::pop_front::6 = x(w6 x(w0 w9))
}

::std::data::Array::pop_front::6 {
  x(w31 x(w30 w34))
  ref(w2 w38) = w31
  ref(tup(w8 w10) tup(w36 w21)) = ref(w2 w5)
  tup(w17 w18) = tup(w10 w8)
  w30 = @add(1 w25)
  w25 = @div(2 w26)
  dup1185(w32 w39) = w26
  w32 = @eq(1 w33)
  w33 = ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(w18 w21) x(w39 x(x(w5 w38) x(x(w17 w36) w34)))))
}

::std::data::Array::pop_front::8 {
  x(w16 x(_ x(x(_ w7) x(x(w12 _) w9))))
  w16 = ref(w1 _)
  ::std::data::Array::Node::to_leaf = fn(w1 w3)
  w7 = w12
  w9 = enum(enum(w3 w17) enum(_ w17))
}

::std::data::Array::pop_front::9 {
  x(w6 x(w5 x(x(w4 w4) x(x(w2 w2) w36))))
  ::std::data::Array::pop_front::6 = x(w6 x(w5 w36))
}

::std::data::Array::pop_front::10 { x(w11 w11) }

::std::data::Array::Node::half {
  fn(ref(tup(w1 w3) tup(w19 w17)) fn(w7 fn(w8 w14)))
  w8 = ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(w1 w19) x(x(w3 w17) x(w7 w14))))
}

::std::data::Array::Node::half::2 {
  x(x(w11 w11) x(x(w9 w1) x(w7 w5)))
  w7 = @div(2 w4)
  w5 = tup(ref(w9 w1) w4)
}

::std::data::Array::Node::half::3 {
  x(x(w12 w1) x(x(w10 w10) x(w8 w6)))
  w8 = @add(1 w4)
  w4 = @div(2 w5)
  w6 = tup(ref(w12 w1) w5)
}

::std::data::Array::Node::zip_with {
  fn(dup1287(w8 w14) fn(w1 fn(w2 fn(w3 w10))))
  w8 = @eq(1 w9)
  w9 = ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(w14 x(w1 x(w2 x(w3 w10)))))
}

::std::data::Array::Node::zip_with::2 {
  x(_ x(w10 x(w9 x(w8 w6))))
  ::std::data::Array::Node::to_leaf = fn(w10 w2)
  ::std::data::Array::Node::to_leaf = fn(w9 w4)
  w8 = fn(w2 fn(w4 w5))
  ::std::data::Array::Node::leaf = fn(w5 w6)
}

::std::data::Array::Node::zip_with::3 {
  x(dup1298(w8 w15) x(w25 x(w24 x(dup1301(w13 w19) w21))))
  tup(w1 w2) = w25
  tup(w5 w6) = w24
  w8 = @add(1 w9)
  w9 = @div(2 w10)
  ::std::data::Array::Node::zip_with = fn(w10 fn(w1 fn(w5 fn(w13 w14))))
  w15 = @div(2 w16)
  ::std::data::Array::Node::zip_with = fn(w16 fn(w2 fn(w6 fn(w19 w20))))
  w21 = tup(w14 w20)
}

::std::data::Array::Node::unzip_with {
  fn(dup1307(w7 w12) fn(w1 fn(w2 w9)))
  w7 = @eq(1 w8)
  w8 = ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(w12 x(w1 x(w2 w9))))
}

::std::data::Array::Node::unzip_with::2 {
  x(_ x(w14 x(w13 w11)))
  ::std::data::Array::Node::to_leaf = fn(w14 w2)
  w13 = fn(w2 w3)
  tup(w4 w5) = w3
  ::std::data::Array::Node::leaf = fn(w4 w8)
  ::std::data::Array::Node::leaf = fn(w5 w10)
  w11 = tup(w8 w10)
}

::std::data::Array::Node::unzip_with::3 {
  x(dup1318(w4 w13) x(w30 x(dup1320(w8 w16) w27)))
  tup(w1 w2) = w30
  w4 = @add(1 w5)
  w5 = @div(2 w6)
  ::std::data::Array::Node::unzip_with = fn(w6 fn(w1 fn(w8 w9)))
  tup(w10 w11) = w9
  w13 = @div(2 w14)
  ::std::data::Array::Node::unzip_with = fn(w14 fn(w2 fn(w16 w17)))
  tup(w18 w19) = w17
  w27 = tup(tup(w10 w18) tup(w11 w19))
}

::std::logical::Option::unwrap {
  fn(w0 w7)
  w0 = enum(::std::logical::Option::unwrap::3 enum(_ w7))
}

::std::logical::Option::unwrap::3 { enum(w0 w0) }

::std::unicode::String::len { fn(ref(tup(dup2400(w0 w13) w2) tup(w0 w2)) w13) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(w3 _))
  tup(w7 tup(w8 _)) = w3
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 {
  x(w4 x(dup2773(w0 w6) w1))
  w0 = ?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1)))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 w14))
  w15 = @sub(1 w1)
  tup(w4 w5) = w14
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::read_line {
  fn(ref(w1 w17) w14)
  ::std::IO::read_byte = fn(ref(w1 w6) fn(0 w8))
  dup2816(w12 w15) = w8
  w12 = @ne(0 w13)
  w13 = ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(w6 w17) x(w15 w14)))
}

::std::IO::read_line::2 {
  x(w5 x(dup2822(w6 w9) w1))
  w6 = @eq(10 w7)
  w7 = ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(w5 x(w9 w8)))
  w1 = enum(enum(w8 w12) enum(_ w12))
}

::std::IO::read_line::3 { x(x(w3 w3) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 {
  x(x(w4 w4) x(_ w0))
  w0 = tup(w5 tup(w6 w7))
  0 = w5
  w6 = w7
}

::std::IO::read_line::6 {
  x(w10 x(w8 w6))
  ::std::IO::read_line::7 = x(w10 x(x(tup(1 tup(tup(w8 w11) w11)) w14) _))
  w6 = w14
}

::std::IO::read_line::7 {
  x(x(w10 w18) w8)
  ::std::IO::read_byte = fn(ref(w10 w1) fn(10 w3))
  dup2839(w11 w16) = w3
  w11 = @ne(10 w12)
  w12 = ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(w1 w18) x(w16 w8)))
}

::std::IO::read_line::9 {
  x(w9 x(w7 x(x(w6 w19) w17)))
  ::std::data::List::concat = fn(w6 fn(tup(1 tup(tup(w7 w10) w10)) w3))
  ::std::IO::read_line::7 = x(w9 x(x(w3 w19) w17))
}

::std::IO::read_line::10 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

