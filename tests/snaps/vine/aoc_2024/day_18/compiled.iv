
::std::data::Array::Node::to_leaf { fn(n0 n0) }

::std::data::Array::Node::as_leaf { fn(n0 n0) }

::std::data::Array::Node::leaf { fn(n0 n0) }

::std::logical::Option::None { enum(_ enum(n0 n0)) }

::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::std::IO::read_byte { fn(ref(dup(n0 @io_read_byte(n1 dup(n2 @seq$(n0 n3)))) n3) fn(n1 n2)) }

::main { ::day_18::main }

::day_18::config { tup(7 12) }

::day_18::main {
  fn(ref(w1 w63) _)
  tup(dup8(w8 dup8(w9 dup8(w23 dup8(@mul(w35 w36) dup8(w35 dup8(w39 dup8(w40 dup8(w130 w136)))))))) w6) = ::day_18::config
  1 = @sub$(0 w10)
  ::std::data::Array::new = fn(w9 fn(w10 w11))
  ::std::data::Array::new = fn(w8 fn(w11 w12))
  ::day_18::main::1 = x(x(w1 w80) x(x(w12 dup11(w87 dup11(w22 w129))) x(x(tup(0 tup(w72 w72)) dup13(w46 w51)) x(0 w74))))
  ::std::data::Array::to_list = fn(w87 w88)
  ::std::data::List::concat = fn(w104 fn(w114 w110))
  ::std::data::Array::fold_front = fn(w94 fn(tup(0 tup(w103 w103)) fn(fn(w104 fn(@lt(w81 ?(::day_18::main::11 ::day_18::main::10 w114)) w110)) w100)))
  ::std::data::List::map = fn(w88 fn(fn(w94 w100) w90))
  ::std::data::List::join = fn(w90 fn(tup(1 tup(tup(10 w117) w117)) w92))
  ::std::IO::println = fn(ref(w80 w85) fn(w92 w93))
  1 = @sub$(0 w20)
  ::day_18::pathfind = fn(w22 fn(w23 fn(w6 w25)))
  ::std::numeric::N32::to_string::to_string = fn(w25 tup(@add(8 w118) tup(w119 w120)))
  ::std::IO::println = fn(ref(w85 w28) fn(tup(w118 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w119)))))))) w120)) _))
  ::day_18::DisjointSet::new = fn(w36 w37)
  ::std::data::Array::new = fn(w40 fn(1 w41))
  ::std::data::Array::new = fn(w39 fn(w41 w42))
  ::day_18::main::24 = x(w130 x(w129 x(x(w37 w128) x(x(w42 w126) 0))))
  ::std::data::List::reversed = fn(w46 w47)
  ::day_18::main::33 = x(w136 x(w128 x(w126 x(w47 x(w74 w132)))))
  ::std::data::List::get = fn(ref(w51 _) fn(w132 ref(dup2(tup(w59 w60) w57) w57)))
  ::std::numeric::N32::to_string::to_string = fn(w59 tup(@add(9 w140) tup(w138 tup(44 w141))))
  ::std::numeric::N32::to_string::to_string = fn(w60 tup(@add(w140 w137) tup(w141 w139)))
  ::std::IO::println = fn(ref(w28 w63) fn(tup(w137 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w138)))))))) w139)) _))
  fn(w81 w93) = fn(w20 _)
}

::day_18::main::1 {
  x(x(w12 w20) w10)
  ::std::IO::read_line = fn(ref(w12 w1) enum(::day_18::main::4 enum(::day_18::main::5 x(x(w1 w20) w10))))
}

::day_18::main::4 {
  enum(w0 x(w9 x(x(w7 w55) x(x(w5 w53) x(dup61(w25 @add(1 w45)) w51)))))
  ::std::unicode::String::split_once = fn(w0 fn(tup(1 tup(tup(44 w48) w48)) tup(w13 w14)))
  ::std::numeric::N32::parse = fn(w13 w17)
  ::std::logical::Option::unwrap = fn(w17 dup66(w34 w38))
  ::std::logical::Option::unwrap = fn(w14 w21)
  ::std::numeric::N32::parse = fn(w21 w22)
  ::std::logical::Option::unwrap = fn(w22 dup67(w29 w39))
  ::std::data::Array::get = fn(ref(w7 w27) fn(w29 w31))
  ::std::data::Array::get = fn(w31 fn(w34 ref(_ w25)))
  ::std::data::List::concat = fn(w5 fn(tup(1 tup(tup(tup(w38 w39) w49) w49)) w43))
  ::day_18::main::1 = x(w9 x(x(w27 w55) x(x(w43 w53) x(w45 w51))))
}

::day_18::main::5 { x(x(w7 w7) x(x(w5 w5) x(x(w3 w3) x(w1 w1)))) }

::day_18::main::10 { tup(1 tup(tup(35 w4) w4)) }

::day_18::main::11 { tup(1 tup(tup(46 w4) w4)) }

::day_18::main::12 { x(w10 fn(w0 fn(@mul(w10 @add(w0 w8)) w8))) }

::day_18::main::13 {
  x(dup80(w39 dup80(w47 dup80(w55 w63))) x(x(w30 w62) x(x(w28 w15) fn(dup92(w34 dup92(w42 dup92(w50 dup92(w58 w22)))) fn(dup93(w33 dup93(w41 dup93(w49 dup93(w57 w17)))) _)))))
  ::day_18::main::14 = x(w39 x(x(w30 w38) x(x(w28 w36) x(w34 x(w33 fn(1 fn(0 _)))))))
  ::day_18::main::14 = x(w47 x(x(w38 w46) x(x(w36 w44) x(w42 x(w41 fn(w7 fn(0 _)))))))
  1 = @sub$(0 w7)
  ::day_18::main::14 = x(w55 x(x(w46 w54) x(x(w44 w52) x(w50 x(w49 fn(0 fn(1 _)))))))
  ::day_18::main::14 = x(w63 x(x(w54 w62) x(x(w52 w60) x(w58 x(w57 fn(0 fn(w12 _)))))))
  1 = @sub$(0 w12)
  ::std::data::Array::get = fn(ref(w60 w15) fn(w17 w19))
  ::std::data::Array::get = fn(w19 fn(w22 ref(_ 0)))
}

::day_18::main::14 { x(dup100(w22 w33) x(w19 x(w17 x(dup105(@add(w0 dup109(@lt(w22 ?(::day_18::main::17 ::day_18::main::16 x(w33 x(w19 x(w17 x(w28 x(w27 x(w26 x(w10 w24))))))))) w26)) w28) x(dup106(@add(w1 w10) w27) fn(w0 fn(w1 w24))))))) }

::day_18::main::16 { x(dup114(w1 w22) x(w11 x(w9 x(w7 x(w6 x(w5 x(dup122(@lt(w1 ?(::day_18::main::19 ::day_18::main::18 x(w22 x(w11 x(w9 x(w7 x(w6 x(w5 x(w14 w13))))))))) w14) w13))))))) }

::day_18::main::17 { x(_ x(x(w8 w8) x(x(w6 w6) _))) }

::day_18::main::18 {
  x(w22 x(w21 x(x(w19 w1) x(w17 x(w16 x(dup134(w8 w25) x(dup135(w3 w24) w23)))))))
  ::std::data::Array::get = fn(ref(w19 w1) fn(w3 w5))
  ::std::data::Array::get = fn(w5 fn(w8 ref(dup126(?(::day_18::main::21 ::day_18::main::20 x(w22 x(w21 x(w17 x(w16 x(w25 x(w24 w23))))))) w11) w11)))
}

::day_18::main::19 { x(_ x(x(w8 w8) x(x(w6 w6) _))) }

::day_18::main::20 { x(_ x(x(w6 w6) _)) }

::day_18::main::21 {
  x(dup140(w21 w23) x(x(w18 w1) x(w16 x(w15 x(w14 x(w13 _))))))
  ::day_18::main::12 = x(w21 fn(w16 fn(w15 w6)))
  ::day_18::main::12 = x(w23 fn(w14 fn(w13 w10)))
  ::day_18::DisjointSet::union = fn(ref(w18 w1) fn(w6 fn(w10 _)))
}

::day_18::main::24 { x(dup150(w1 w18) x(w9 x(w8 x(w6 x(w4 dup157(@lt(w1 ?(::day_18::main::26 ::day_18::main::25 x(w18 x(w9 x(w8 x(w6 x(w4 w11))))))) w11)))))) }

::day_18::main::25 {
  x(dup158(w21 w29) x(w9 x(x(w8 w27) x(x(w6 w25) x(w4 dup169(w12 @add(1 w2)))))))
  ::day_18::main::27 = x(w21 x(x(w9 w20) x(x(w8 w18) x(x(w6 w16) x(x(w4 w14) x(w12 0))))))
  ::day_18::main::24 = x(w29 x(w20 x(x(w18 w27) x(x(w16 w25) x(w14 w2)))))
}

::day_18::main::26 { x(_ x(_ x(x(w5 w5) x(x(w3 w3) _)))) }

::day_18::main::27 { x(dup174(w1 w24) x(w12 x(w10 x(w8 x(w6 x(w4 dup184(@lt(w1 ?(::day_18::main::29 ::day_18::main::28 x(w24 x(w12 x(w10 x(w8 x(w6 x(w4 w14)))))))) w14))))))) }

::day_18::main::28 {
  x(dup186(w38 w49) x(x(w12 w48) x(x(w10 w46) x(x(w8 w44) x(x(w6 w42) x(dup199(w17 dup199(w31 w40)) dup200(w22 dup200(w30 @add(1 w2)))))))))
  ::std::data::Array::get = fn(ref(w12 w15) fn(w17 w19))
  ::std::data::Array::get = fn(w19 fn(w22 ref(dup185(@eq(w27 ?(::day_18::main::32 ::day_18::main::31 x(w38 x(x(w10 w37) x(x(w8 w35) x(x(w6 w33) x(w31 x(w30 _)))))))) w25) w25)))
  1 = @sub$(0 w27)
  ::day_18::main::27 = x(w49 x(x(w15 w48) x(x(w37 w46) x(x(w35 w44) x(x(w33 w42) x(w40 w2))))))
}

::day_18::main::29 { x(_ x(x(w9 w9) x(x(w7 w7) x(x(w5 w5) x(x(w3 w3) _))))) }

::day_18::main::31 {
  x(w15 x(w14 x(w12 x(x(@add(1 w1) w1) x(w8 x(w7 _))))))
  ::day_18::main::13 = x(w15 x(w14 x(w12 fn(w7 fn(w8 _)))))
}

::day_18::main::32 { x(_ x(x(w8 w8) x(x(w6 w6) x(x(w4 w4) _)))) }

::day_18::main::33 {
  x(dup221(@mul(w8 @sub(1 w10)) dup221(w8 w24)) x(w17 w16))
  ::day_18::DisjointSet::find = fn(ref(w17 w1) fn(0 @ne(w11 ?(::day_18::main::35 ::day_18::main::34 x(w24 x(w5 w16))))))
  ::day_18::DisjointSet::find = fn(ref(w1 w5) fn(w10 w11))
}

::day_18::main::34 {
  x(w10 x(w9 x(w8 x(w7 w6))))
  ::std::data::List::pop_front = fn(ref(w7 w1) enum(::day_18::main::38 enum(::day_18::main::39 x(w10 x(w9 x(w8 x(w1 w6)))))))
}

::day_18::main::35 { x(_ x(_ x(_ x(_ x(w1 w1))))) }

::day_18::main::38 {
  enum(tup(w2 w3) x(dup238(w23 w29) x(w10 x(w9 x(w8 x(@sub(1 w17) w25))))))
  ::day_18::main::13 = x(w23 x(x(w10 w22) x(x(w9 w20) fn(w2 fn(w3 _)))))
  ::day_18::main::33 = x(w29 x(w22 x(w20 x(w8 x(w17 w25)))))
}

::day_18::main::39 { x(_ x(_ x(_ x(_ x(w1 w1))))) }

::std::numeric::N32::to_string::to_string { fn(dup254(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup263(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup263(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup266(@rem(10 @add$(48 n0)) @div(10 dup263(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::day_18::DisjointSet::new { fn(dup887(n0 dup1175(@eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n1 x(enum(enum(1 n2) enum(_ n2)) n3)))) n1)) tup(n0 n3)) }

::day_18::DisjointSet::find { fn(ref(tup(dup989(n0 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n1 n2) ref(enum(::day_18::DisjointSet::find::4 enum(::day_18::DisjointSet::find::5 x(x(tup(n0 n2) n3) x(x(n4 dup277(n5 n6)) x(n5 n7))))) n7)) x(n8 n9)))) n9)) n1) n3) fn(dup286(n8 n4) n6)) }

::day_18::DisjointSet::find::1 { x(x(tup(dup989(n0 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n1 n2) ref(enum(::day_18::DisjointSet::find::4 enum(::day_18::DisjointSet::find::5 x(x(tup(n0 n2) n3) x(x(n4 n5) x(n6 n7))))) n7)) x(n8 n9)))) n9)) n1) n3) x(x(dup286(n8 n4) n5) n6)) }

::day_18::DisjointSet::find::4 { enum(n0 x(x(n1 n1) x(x(n2 n2) x(_ enum(enum(n0 n3) enum(_ n3)))))) }

::day_18::DisjointSet::find::5 { enum(dup286(n0 n1) x(x(tup(dup989(n2 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n3 n4) ref(enum(::day_18::DisjointSet::find::4 enum(::day_18::DisjointSet::find::5 x(x(tup(n2 n4) n5) x(x(n1 n6) x(n7 n8))))) n8)) x(n0 n9)))) n9)) n3) n5) x(x(_ n6) x(dup299(n10 n7) enum(_ enum(enum(n10 n11) n11)))))) }

::day_18::DisjointSet::union { fn(ref(tup(dup989(n0 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n1 n2) ref(enum(::day_18::DisjointSet::find::4 enum(::day_18::DisjointSet::find::5 x(x(tup(n0 n2) tup(dup989(n3 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n4 n5) ref(enum(::day_18::DisjointSet::find::4 enum(::day_18::DisjointSet::find::5 x(x(tup(n3 n5) n6) x(x(n7 dup277(n8 dup312(n9 n10))) x(n8 n11))))) n11)) x(n12 n13)))) n13)) n4)) x(x(n14 dup277(n15 dup311(@eq(n9 ?(::day_18::DisjointSet::union::3 ::day_18::DisjointSet::union::2 x(x(n6 n16) x(n17 x(n10 n18))))) n17))) x(n15 n19))))) n19)) x(n20 n21)))) n21)) n1) n16) fn(dup286(n20 n14) fn(dup286(n12 n7) n18))) }

::day_18::DisjointSet::union::2 { x(x(n0 n0) x(n1 x(_ n1))) }

::day_18::DisjointSet::union::3 { x(x(tup(dup989(dup989(n0 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n1 n2) ref(enum(::day_18::DisjointSet::union::9 enum(::day_18::DisjointSet::union::12 x(n3 x(n4 x(x(n5 n6) x(x(n7 n8) x(n9 x(ref(n10 n5) n7)))))))) n8)) x(n11 n12)))) n12)) dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n13 n1) ref(n10 n6)) x(n14 n15)))) n15)) n13) tup(n0 n2)) x(dup320(n14 n3) x(dup321(n11 n4) n9))) }

::day_18::DisjointSet::union::7 { x(_ x(dup338(n0 n1) x(x(_ enum(_ enum(enum(n0 n2) n2))) x(x(n3 n3) x(x(dup341(n4 n5) n4) x(x(@add(n5 n6) n6) n1)))))) }

::day_18::DisjointSet::union::8 { x(dup345(n0 n1) x(_ x(x(n2 n2) x(x(_ enum(_ enum(enum(n0 n3) n3))) x(x(@add(n4 n5) n5) x(x(dup350(n6 n4) n6) n1)))))) }

::day_18::DisjointSet::union::9 { enum(n0 x(n1 x(n2 x(n3 x(n4 x(n5 x(ref(enum(::day_18::DisjointSet::union::10 enum(::day_18::DisjointSet::union::11 x(n1 x(n2 x(n3 x(n4 x(n5 x(x(n0 n6) n7)))))))) n7) enum(enum(n6 n8) enum(_ n8))))))))) }

::day_18::DisjointSet::union::10 { enum(dup372(@lt(n0 ?(::day_18::DisjointSet::union::8 ::day_18::DisjointSet::union::7 x(n1 x(n2 x(n3 x(n4 x(x(n5 n6) x(x(n7 n8) n9)))))))) n5) x(n1 x(n2 x(n3 x(n4 x(n9 x(x(dup374(n0 n7) n8) enum(enum(n6 n10) enum(_ n10))))))))) }

::day_18::DisjointSet::union::11 { enum(n0 x(_ x(_ x(x(n1 n1) x(x(n2 n2) x(_ x(x(n3 n3) enum(_ enum(enum(n0 n4) n4))))))))) }

::day_18::DisjointSet::union::12 { enum(n0 x(_ x(_ x(x(n1 n1) x(x(n2 n2) x(_ x(_ enum(_ enum(enum(n0 n3) n3))))))))) }

::day_18::pathfind { fn(n0 fn(dup410(dup436(@sub(1 @eq$(0 ?(::day_18::pathfind::14 ::day_18::pathfind::10 x(x(n0 n1) x(n2 x(n3 x(tup(0 tup(n4 n4)) x(x(0 n5) x(0 x(x(tup(0 tup(n6 n6)) tup(dup574(?(::day_18::pathfind::3 ::day_18::pathfind::2 x(n1 x(n7 x(n8 x(tup(n9 n10) x(x(n5 n11) 1)))))) n9) n10)) x(0 x(0 0)))))))))))) n2) n7) fn(dup411(n3 n8) n11))) }

::day_18::pathfind::1 { x(n0 x(n1 x(n2 x(tup(dup574(?(::day_18::pathfind::3 ::day_18::pathfind::2 x(n0 x(n1 x(n2 x(tup(n3 n4) n5))))) n3) n4) n5)))) }

::day_18::pathfind::2 { x(n0 x(dup410(n1 n2) x(dup411(n3 n4) x(tup(dup666(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n5 n6) x(x(n7 n8) enum(::day_18::pathfind::7 enum(::day_18::pathfind::8 x(x(n0 n9) x(n1 x(n3 x(tup(n6 tup(n8 n10)) x(x(n11 n12) x(n13 x(tup(0 tup(n14 n14)) tup(dup574(?(::day_18::pathfind::3 ::day_18::pathfind::2 x(n9 x(n2 x(n4 x(tup(n15 n16) x(x(n12 n17) n18)))))) n15) n16))))))))))))) n5) tup(n7 n10)) x(x(n11 n17) dup417(n13 @add(1 n18))))))) }

::day_18::pathfind::3 { x(_ x(_ x(_ x(_ x(x(n0 n0) _))))) }

::day_18::pathfind::4 { x(n0 x(n1 x(n2 x(tup(dup666(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n3 n4) x(x(n5 n6) enum(::day_18::pathfind::7 enum(::day_18::pathfind::8 x(n0 x(n1 x(n2 x(tup(n4 tup(n6 n7)) n8))))))))) n3) tup(n5 n7)) n8)))) }

::day_18::pathfind::7 { enum(dup444(tup(dup445(@eq(n0 ?(::day_18::pathfind::14 ::day_18::pathfind::10 x(n1 x(n2 x(n3 x(n4 x(n5 x(n6 x(n7 x(n8 x(n9 n10))))))))))) n9) n10) n8) x(n1 x(dup436(@sub(1 n0) n2) x(n3 x(n4 x(n5 x(n6 n7))))))) }

::day_18::pathfind::8 { x(x(n0 n0) x(_ x(_ x(_ x(x(n1 n1) x(_ x(n2 n2))))))) }

::day_18::pathfind::10 { x(n0 x(dup453(@sub(1 n1) n2) x(n3 x(n4 x(n5 x(n6 x(n7 x(n8 x(n9 dup463(@eq(n1 ?(::day_18::pathfind::14 ::day_18::pathfind::12 x(n0 x(n2 x(n3 x(n4 x(n5 x(n6 x(n7 x(n8 x(n9 n10))))))))))) n10)))))))))) }

::day_18::pathfind::12 { x(x(n0 n0) x(_ x(_ x(_ x(x(_ n1) x(n1 x(x(_ tup(0 tup(n2 n2))) _))))))) }

::day_18::pathfind::14 { x(x(tup(dup989(n0 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n1 n2) ref(tup(dup989(n3 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n4 n5) ref(dup511(@le$(n6 ?(::day_18::pathfind::17 ::day_18::pathfind::16 x(x(tup(n0 n2) n7) x(n8 x(n9 x(x(n10 n11) x(n12 x(x(n13 n14) _)))))))) n13) n14)) x(n15 n16)))) n16)) n4) tup(n3 n5))) x(n17 n18)))) n18)) n1) n19) x(dup498(n8 n20) x(dup499(n6 dup499(n9 n21)) x(tup(dup666(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n22 n23) x(x(n24 n25) enum(::day_18::pathfind::7 enum(::day_18::pathfind::8 x(x(n7 n19) x(n20 x(n21 x(tup(n23 tup(n25 n26)) x(n27 x(n28 x(n11 n29)))))))))))) n22) tup(n24 n26)) x(n27 x(n28 x(x(n10 n29) x(n12 x(n15 n17))))))))) }

::day_18::pathfind::16 { x(x(n0 n1) x(dup518(dup537(n2 n3) dup518(dup537(n4 n5) dup518(dup537(n6 n7) dup537(n8 n9)))) x(dup519(n10 dup519(n11 dup519(n12 n13))) x(x(n14 n15) x(dup525(@add(tup(1 0) tup(dup541(@lt(n2 ?(::day_18::pathfind::21 ::day_18::pathfind::20 x(x(n0 n16) x(n3 x(n10 x(x(n14 n17) x(n18 x(n19 _)))))))) n18) n19)) dup525(@add(tup(0 1) tup(dup541(@lt(n4 ?(::day_18::pathfind::21 ::day_18::pathfind::20 x(x(n16 n20) x(n5 x(n11 x(x(n17 n21) x(n22 x(n23 _)))))))) n22) n23)) dup525(@add(tup(4294967295 0) tup(dup541(@lt(n6 ?(::day_18::pathfind::21 ::day_18::pathfind::20 x(x(n20 n24) x(n7 x(n12 x(x(n21 n25) x(n26 x(n27 _)))))))) n26) n27)) @add(tup(0 4294967295) tup(dup541(@lt(n8 ?(::day_18::pathfind::21 ::day_18::pathfind::20 x(x(n24 n1) x(n9 x(n13 x(x(n25 n15) x(n28 x(n29 _)))))))) n28) n29))))) x(x(_ 0) _)))))) }

::day_18::pathfind::17 { x(x(n0 n0) x(_ x(_ x(x(n1 n1) x(_ x(x(n2 n2) _)))))) }

::day_18::pathfind::18 { x(n0 x(dup537(n1 n2) x(n3 x(n4 fn(tup(dup541(@lt(n1 ?(::day_18::pathfind::21 ::day_18::pathfind::20 x(n0 x(n2 x(n3 x(n4 x(n5 x(n6 n7)))))))) n5) n6) n7))))) }

::day_18::pathfind::20 { x(n0 x(n1 x(n2 x(n3 x(n4 x(dup553(@lt(n1 ?(::day_18::pathfind::23 ::day_18::pathfind::22 x(n0 x(n2 x(n3 x(n4 x(n5 n6))))))) n5) n6)))))) }

::day_18::pathfind::21 { x(x(n0 n0) x(_ x(_ x(x(n1 n1) _)))) }

::day_18::pathfind::22 { x(x(tup(dup989(n0 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n1 n2) ref(tup(dup989(n3 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n4 n5) ref(dup557(@le$(n6 ?(::day_18::pathfind::25 ::day_18::pathfind::24 x(n7 x(n8 x(n9 n10))))) n11) n11)) x(n12 n13)))) n13)) n4) tup(n3 n5))) x(n14 n15)))) n15)) n1) tup(n0 n2)) x(n6 x(n7 x(dup563(n12 n8) x(dup564(n14 n9) n10))))) }

::day_18::pathfind::23 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

::day_18::pathfind::24 { x(x(tup(@add(1 n0) tup(n1 tup(tup(n2 n3) n4))) tup(n0 tup(n1 n4))) x(n2 x(n3 _))) }

::day_18::pathfind::25 { x(x(n0 n0) _) }

::std::data::List::len { fn(ref(tup(dup574(n0 n1) n2) tup(n1 n2)) n0) }

::std::data::List::get { fn(ref(tup(n0 tup(n1 n2)) tup(n0 tup(n3 n2))) fn(dup605(?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n3) ref(tup(n4 n5) tup(n6 n5))) n7)) n7) ref(n4 n6))) }

::std::data::List::get::1 { x(n0 dup605(?(::std::data::List::get::3 ::std::data::List::get::2 x(n0 n1)) n1)) }

::std::data::List::get::2 { x(x(ref(tup(n0 n1) tup(n0 n2)) n3) @sub(1 dup605(?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n2) n3) n4)) n4))) }

::std::data::List::get::3 { x(x(n0 n0) _) }

::std::data::List::map { fn(tup(dup637(n0 dup647(?(::std::data::List::map::3 ::std::data::List::map::2 x(n1 x(n2 x(n3 x(n4 n5))))) n1)) tup(n2 _)) fn(n3 tup(n0 tup(n4 n5)))) }

::std::data::List::map::1 { x(dup647(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 n1)) n0) n1) }

::std::data::List::map::2 { x(@sub(1 dup647(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 x(n1 x(n2 x(n3 n4))))) n0)) x(tup(n5 n1) x(dup656(fn(n5 n6) n2) x(tup(n6 n3) n4)))) }

::std::data::List::map::3 { x(_ x(_ x(_ x(n0 n0)))) }

::std::data::List::pop_front { fn(ref(tup(dup666(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) tup(n2 n5)) tup(n1 tup(n3 n5))) n4) }

::std::data::List::pop_front::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::pop_front::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::data::List::push_front { fn(ref(tup(@add$(1 n0) tup(n1 n2)) tup(n0 tup(tup(n3 n1) n2))) fn(n3 _)) }

::std::data::List::join { fn(tup(dup846(?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n0 n1) x(x(n2 n3) enum(::std::data::List::join::4 enum(::std::data::List::join::5 x(n4 x(tup(n1 n3) n5))))))) n0) tup(n2 _)) fn(n4 n5)) }

::std::data::List::join::4 { enum(n0 x(n1 x(tup(dup846(?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n2 n3) x(x(n4 n5) enum(::std::data::List::join::9 enum(::std::data::List::join::10 x(n1 x(tup(n3 n5) x(n0 n6)))))))) n2) n4) n6))) }

::std::data::List::join::5 { x(_ x(_ tup(0 tup(n0 n0)))) }

::std::data::List::join::6 { x(n0 x(tup(dup846(?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n1 n2) x(x(n3 n4) enum(::std::data::List::join::9 enum(::std::data::List::join::10 x(n0 x(tup(n2 n4) n5))))))) n1) n3) n5)) }

::std::data::List::join::9 { enum(tup(n0 tup(n1 n2)) x(dup743(tup(@add(n0 n3) tup(n4 n1)) n5) x(tup(dup846(?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::data::List::join::9 enum(::std::data::List::join::10 x(n5 x(tup(n7 n9) x(tup(n10 tup(n11 n2)) n12)))))))) n6) n8) x(tup(@add(n3 n10) tup(n11 n4)) n12)))) }

::std::data::List::join::10 { x(_ x(_ x(n0 n0))) }

::std::data::List::iter { fn(ref(tup(dup814(n0 n1) tup(n2 n3)) tup(n0 tup(n4 n3))) tup(n1 ref(n2 n4))) }

::std::data::List::Iter::next { fn(ref(tup(dup820(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::Iter::next::2 { x(x(@sub(1 n0) n0) x(x(ref(tup(n1 n2) tup(n3 n4)) ref(n2 n4)) enum(enum(ref(n1 n3) n5) enum(_ n5)))) }

::std::data::List::Iter::next::3 { x(x(n0 n0) x(x(ref(n1 n1) _) ::std::logical::Option::None)) }

::std::data::List::Iter::drop { fn(ref(tup(_ ref(n0 n0)) _) _) }

::std::data::List::into_iter { fn(tup(n0 tup(n1 _)) tup(n0 n1)) }

::std::data::List::IntoIter::next { fn(ref(tup(dup846(?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::IntoIter::next::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::IntoIter::next::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::reversed { fn(tup(dup666(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) enum(::std::data::List::reversed::4 enum(::std::data::List::reversed::5 x(tup(n1 tup(n3 n4)) x(tup(0 tup(n5 n5)) n6))))))) n0) tup(n2 n4)) n6) }

::std::data::List::reversed::1 { x(tup(dup666(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) enum(::std::data::List::reversed::4 enum(::std::data::List::reversed::5 x(tup(n1 tup(n3 n4)) n5)))))) n0) tup(n2 n4)) n5) }

::std::data::List::reversed::4 { enum(n0 x(tup(dup666(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n1 n2) x(x(n3 n4) enum(::std::data::List::reversed::4 enum(::std::data::List::reversed::5 x(tup(n2 tup(n4 n5)) x(tup(n6 tup(tup(n0 n7) n8)) n9))))))) n1) tup(n3 n5)) x(tup(@add$(1 n6) tup(n7 n8)) n9))) }

::std::data::List::reversed::5 { x(_ x(n0 n0)) }

::std::data::Array::new { fn(dup887(n0 dup1175(@eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n1 x(n2 n3)))) n1)) fn(n2 tup(n0 n3))) }

::std::data::Array::to_list { fn(tup(dup984(n0 dup964(?(::std::data::Array::fold_back::3 ::std::data::Array::fold_back::2 x(n1 x(n2 x(n3 x(fn(n4 fn(n5 tup(n5 n4))) n6))))) n1)) n2) tup(n0 tup(n6 n3))) }

::std::data::Array::fold_front { fn(tup(dup944(?(::std::data::Array::fold_front::3 ::std::data::Array::fold_front::2 x(n0 x(n1 x(n2 x(n3 n4))))) n0) n1) fn(n2 fn(n3 n4))) }

::std::data::Array::fold_front::2 { x(dup951(dup1070(?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(n0 dup1037(?(::std::data::Array::push_front::3 ::std::data::Array::push_front::2 x(n1 x(ref(n2 n3) x(n4 _)))) dup1037(n1 @add(1 _)))) x(ref(n5 n2) enum(::std::logical::Option::unwrap::3 enum(_ n6))))) n0) dup1244(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n7 x(n3 x(n8 x(n9 n5)))))) n7)) x(n8 x(n4 x(n9 n6)))) }

::std::data::Array::fold_front::3 { x(_ x(_ x(n0 x(_ n0)))) }

::std::data::Array::fold_back { fn(tup(dup964(?(::std::data::Array::fold_back::3 ::std::data::Array::fold_back::2 x(n0 x(n1 x(n2 x(n3 n4))))) n0) n1) fn(n2 fn(n3 n4))) }

::std::data::Array::fold_back::2 { x(dup971(dup1119(?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(n0 dup1009(?(::std::data::Array::push_back::3 ::std::data::Array::push_back::2 x(n1 x(ref(n2 n3) x(n4 _)))) dup1009(n1 @add(1 _)))) x(ref(n5 n2) enum(::std::logical::Option::unwrap::3 enum(_ n6))))) n0) dup1244(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n7 x(n3 x(n8 x(n9 n5)))))) n7)) x(n8 x(n4 x(n9 n6)))) }

::std::data::Array::fold_back::3 { x(_ x(_ x(n0 x(_ n0)))) }

::std::data::Array::len { fn(ref(tup(dup984(n0 n1) n2) tup(n1 n2)) n0) }

::std::data::Array::get { fn(ref(tup(dup989(n0 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n1 n2) n3) x(n4 n5)))) n5)) n1) tup(n0 n2)) fn(n4 n3)) }

::std::data::Array::get::1 { x(n0 x(n1 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(n0 x(n1 n2)))) n2))) }

::std::data::Array::get::2 { x(x(ref(tup(n0 n1) tup(n2 n3)) n4) x(dup1003(@rem(2 ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n5 tup(n6 dup999(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(n6 n4) x(n7 n8)))) n8))))))) @div(2 n7)) n5)) }

::std::data::Array::get::3 { x(x(n0 n0) _) }

::std::data::Array::push_back { fn(ref(tup(dup1009(?(::std::data::Array::push_back::3 ::std::data::Array::push_back::2 x(n0 x(ref(n1 n2) x(n3 _)))) dup1009(n0 @add(1 n4))) n1) tup(n4 n2)) fn(n3 _)) }

::std::data::Array::push_back::2 { x(dup1029(@lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(x(n0 ref(n1 tup(n1 n2))) n3))) n3) x(n0 x(n2 _))) }

::std::data::Array::push_back::3 { x(_ x(ref(_ n0) x(n0 _))) }

::std::data::Array::push_back::4 { x(n0 dup1029(@lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(n0 n1))) n1)) }

::std::data::Array::push_back::5 { x(x(ref(tup(n0 n1) tup(n2 n3)) n4) dup1033(n5 @rem(2 ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n5 tup(n6 dup1029(@lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(x(n6 n4) n7))) n7))))))))) }

::std::data::Array::push_back::6 { x(x(n0 n0) _) }

::std::data::Array::push_front { fn(ref(tup(dup1037(?(::std::data::Array::push_front::3 ::std::data::Array::push_front::2 x(n0 x(ref(n1 n2) x(n3 _)))) dup1037(n0 @add(1 n4))) n1) tup(n4 n2)) fn(n3 _)) }

::std::data::Array::push_front::2 { x(dup1057(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(x(n0 ref(n1 tup(n2 n1))) n3))) n3) x(n0 x(n2 _))) }

::std::data::Array::push_front::3 { x(_ x(ref(_ n0) x(n0 _))) }

::std::data::Array::push_front::4 { x(n0 dup1057(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(n0 n1))) n1)) }

::std::data::Array::push_front::5 { x(x(ref(tup(n0 n1) tup(n2 n0)) n3) @div(2 dup1057(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(x(ref(n1 n2) n3) n4))) n4))) }

::std::data::Array::push_front::6 { x(x(n0 n0) _) }

::std::data::Array::pop_back { fn(ref(tup(dup1070(?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(n0 n1) x(ref(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::Array::pop_back::2 { x(x(dup1075(@eq(1 ?(::std::data::Array::pop_back::5 ::std::data::Array::pop_back::4 x(x(n0 n1) n2))) n0) n1) n2) }

::std::data::Array::pop_back::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::data::Array::pop_back::4 { x(x(_ 0) x(ref(n0 _) enum(enum(n0 n1) enum(_ n1)))) }

::std::data::Array::pop_back::5 { x(x(dup1086(dup1092(@sub(1 @rem(2 dup1094(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n1) x(x(n2 n3) x(n4 tup(n5 dup1093(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n5 x(n6 x(n7 x(x(tup(n1 n3) n8) n9)))))) n6)))))) n7))) n4) @sub(1 n10)) n10) x(ref(tup(n0 n2) n8) n9)) }

::std::data::Array::pop_back::6 { x(ref(tup(n0 n1) n2) x(dup1092(@sub(1 @rem(2 dup1094(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n3) x(x(n1 n4) x(n5 tup(n6 dup1093(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n6 x(n7 x(n8 x(x(tup(n3 n4) n2) n9)))))) n7)))))) n8))) n5) n9)) }

::std::data::Array::pop_back::8 { x(ref(n0 _) x(_ x(?(::std::data::Array::pop_back::12 ::std::data::Array::pop_back::11 x(n1 x(n2 n3))) x(x(tup(n1 n2) n3) enum(enum(n0 n4) enum(_ n4)))))) }

::std::data::Array::pop_back::9 { x(ref(tup(n0 n1) n2) x(dup1092(@sub(1 @rem(2 dup1094(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n3) x(x(n1 n4) x(n5 tup(n6 dup1093(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n6 x(n7 x(n8 x(x(tup(n3 n4) n2) n9)))))) n7)))))) n8))) n5) x(_ x(x(n10 n10) n9)))) }

::std::data::Array::pop_back::11 { x(n0 x(_ n0)) }

::std::data::Array::pop_back::12 { x(_ x(n0 n0)) }

::std::data::Array::pop_back::13 { x(n0 n0) }

::std::data::Array::pop_front { fn(ref(tup(dup1119(?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(n0 n1) x(ref(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::Array::pop_front::2 { x(x(dup1124(@eq(1 ?(::std::data::Array::pop_front::5 ::std::data::Array::pop_front::4 x(x(n0 n1) n2))) n0) n1) n2) }

::std::data::Array::pop_front::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::data::Array::pop_front::4 { x(x(_ 0) x(ref(n0 _) enum(enum(n0 n1) enum(_ n1)))) }

::std::data::Array::pop_front::5 { x(x(dup1135(@add(1 @div(2 dup1142(@eq(1 ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(n0 n1) x(n2 x(x(tup(n3 n1) n4) x(x(n5 n3) n6)))))) n2))) @sub(1 n7)) n7) x(ref(tup(n0 n5) n4) n6)) }

::std::data::Array::pop_front::6 { x(ref(tup(n0 n1) n2) x(@add(1 @div(2 dup1142(@eq(1 ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(n0 n3) x(n4 x(x(tup(n5 n3) n2) x(x(n1 n5) n6)))))) n4))) n6)) }

::std::data::Array::pop_front::8 { x(ref(n0 _) x(_ x(x(_ n1) x(x(n1 _) enum(enum(n0 n2) enum(_ n2)))))) }

::std::data::Array::pop_front::9 { x(ref(tup(n0 n1) n2) x(@add(1 @div(2 dup1142(@eq(1 ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(n0 n3) x(n4 x(x(tup(n5 n3) n2) x(x(n1 n5) n6)))))) n4))) x(x(n7 n7) x(x(n8 n8) n6)))) }

::std::data::Array::pop_front::10 { x(n0 n0) }

::std::data::Array::Node::new { fn(dup1175(@eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n0 x(n1 n2)))) n0) fn(n1 n2)) }

::std::data::Array::Node::new::2 { x(_ x(n0 n0)) }

::std::data::Array::Node::new::3 { x(dup1182(@add(1 @div(2 dup1175(@eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n0 x(n1 n2)))) n0))) @div(2 dup1175(@eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n3 x(n4 n5)))) n3))) x(dup1183(n1 n4) tup(n2 n5))) }

::std::data::Array::Node::half { fn(ref(tup(n0 n1) tup(n2 n3)) fn(n4 fn(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n4 n5)))) n5))) }

::std::data::Array::Node::half::2 { x(x(n0 n0) x(x(n1 n2) x(@div(2 n3) tup(ref(n1 n2) n3)))) }

::std::data::Array::Node::half::3 { x(x(n0 n1) x(x(n2 n2) x(@add(1 @div(2 n3)) tup(ref(n0 n1) n3)))) }

::std::data::Array::Node::zip_with { fn(dup1244(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n0 x(n1 x(n2 x(n3 n4)))))) n0) fn(n1 fn(n2 fn(n3 n4)))) }

::std::data::Array::Node::zip_with::2 { x(_ x(n0 x(n1 x(fn(n0 fn(n1 n2)) n2)))) }

::std::data::Array::Node::zip_with::3 { x(dup1255(@add(1 @div(2 dup1244(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n0 x(n1 x(n2 x(n3 n4)))))) n0))) @div(2 dup1244(@eq(1 ?(::std::data::Array::Node::zip_with::3 ::std::data::Array::Node::zip_with::2 x(n5 x(n6 x(n7 x(n8 n9)))))) n5))) x(tup(n1 n6) x(tup(n2 n7) x(dup1258(n3 n8) tup(n4 n9))))) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::numeric::N32::parse { fn(tup(dup1749(?(::std::numeric::N32::parse::3 ::std::numeric::N32::parse::2 x(n0 x(n1 n2))) n0) tup(n1 _)) n2) }

::std::numeric::N32::parse::2 { x(dup1759(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(0 n2)))) n0) x(n1 n2)) }

::std::numeric::N32::parse::3 { x(_ x(_ ::std::logical::Option::None)) }

::std::numeric::N32::parse::4 { x(dup1759(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::parse::5 { x(n0 x(tup(dup1768(dup1763(@le$(48 @n32_and(n1 ?(::std::numeric::N32::parse::9 ::std::numeric::N32::parse::8 x(n0 x(n2 x(n3 x(n4 n5))))))) @le(57 n1)) n4) n2) x(n3 n5))) }

::std::numeric::N32::parse::6 { x(_ x(_ x(n0 enum(enum(n0 n1) enum(_ n1))))) }

::std::numeric::N32::parse::8 { x(@sub(1 dup1759(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(n2 n3)))) n0)) x(n1 x(@mul(10 @add(n4 n2)) x(@sub(48 n4) n3)))) }

::std::numeric::N32::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N32::parse::10 { x(n0 n0) }

::std::unicode::String::len { fn(ref(tup(dup2357(n0 n1) n2) tup(n0 n2)) n1) }

::std::unicode::String::split_once { fn(tup(dup2357(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) n6)))))) n5) fn(tup(dup2357(n2 n1) n3) n6)) }

::std::unicode::String::split_once::1 { x(tup(dup2357(n0 n1) n2) x(n3 x(tup(dup2357(n4 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))) n5) n6))) }

::std::unicode::String::split_once::2 { x(tup(dup814(n0 dup820(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n1 n2) x(x(ref(n3 n4) n5) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(tup(n0 tup(n4 n6)) x(n7 x(tup(n8 tup(n9 n10)) x(tup(n2 n5) x(tup(n11 ref(n12 n9)) n13)))))))))) n1)) tup(n3 n6)) x(n7 x(tup(dup814(n8 n11) tup(n12 n10)) n13))) }

::std::unicode::String::split_once::3 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::5 { x(n0 x(n1 x(n2 x(tup(dup820(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n3 n4) x(x(n5 n6) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(n0 x(n1 x(n2 x(tup(n4 n6) n7))))))))) n3) n5) n7)))) }

::std::unicode::String::split_once::8 { enum(ref(dup2480(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(tup(dup820(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::unicode::String::split_once::12 enum(::std::unicode::String::split_once::13 x(n2 x(n3 x(n4 x(n5 x(tup(n7 n9) x(n1 n10))))))))))) n6) n8) n10)))))) }

::std::unicode::String::split_once::9 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))))) }

::std::unicode::String::split_once::12 { enum(ref(dup2494(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(n6 x(@ne(n1 ?(::std::unicode::String::split_once::5 ::std::unicode::String::split_once::16 x(n2 x(n3 x(n4 x(n5 x(n6 n7))))))) n7))))))) }

::std::unicode::String::split_once::13 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) x(_ tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4))))))))) }

::std::unicode::String::split_once::14 { x(n0 x(tup(_ tup(_ n1)) x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))) }

::std::unicode::String::split_once::16 { x(n0 x(n1 x(tup(dup666(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n2 n3) x(x(n4 n5) enum(::std::unicode::String::split_once::21 enum(::std::unicode::String::split_once::22 x(n0 x(n1 x(tup(n3 tup(n5 n6)) n7)))))))) n2) tup(n4 n6)) x(tup(_ ref(n8 n8)) x(tup(_ ref(n9 n9)) n7))))) }

::std::unicode::String::split_once::21 { enum(n0 x(tup(dup2357(n1 n2) n3) x(tup(@add(1 n4) tup(n5 tup(n0 n6))) x(tup(dup2357(n7 @le$(n2 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n1 n3) x(tup(n4 tup(n5 n6)) x(tup(n7 n8) n9)))))) n8) n9)))) }

::std::unicode::String::split_once::22 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::23 { x(tup(@add(n0 n1) tup(n2 n3)) x(tup(n0 tup(n3 n4)) tup(tup(n1 tup(n2 n4)) ::std::logical::Option::None))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2730(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2730(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2730(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2730(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

::std::IO::read_line { fn(ref(dup(n0 @io_read_byte(0 dup(dup2773(@ne(0 ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::2 { x(n0 x(dup2779(@eq(10 ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(n0 x(n1 n2)))) n1) enum(enum(n2 n3) enum(_ n3)))) }

::std::IO::read_line::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 { x(x(n0 n0) x(_ tup(0 tup(n1 n1)))) }

::std::IO::read_line::6 { x(x(dup(n0 @io_read_byte(10 dup(dup2796(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(1 tup(tup(n4 n5) n5)) n6) _))))) n3) @seq$(n0 n1)))) n2) x(n4 n6)) }

::std::IO::read_line::7 { x(x(dup(n0 @io_read_byte(10 dup(dup2796(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::9 { x(x(dup(n0 @io_read_byte(10 dup(dup2796(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(n4 tup(n5 n6)) n7) n8))))) n3) @seq$(n0 n1)))) n2) x(n9 x(x(tup(@add(1 n4) tup(n5 tup(n9 n6))) n7) n8))) }

::std::IO::read_line::10 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

