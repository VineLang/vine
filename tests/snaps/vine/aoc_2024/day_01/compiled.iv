
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::std::IO::read_byte { fn(ref(dup(n0 @io_read_byte(n1 dup(n2 @seq$(n0 n3)))) n3) fn(n1 n2)) }

::main { ::day_01::main }

::day_01::main {
  fn(ref(w1 w51) _)
  ::std::IO::full_input = fn(ref(w1 w6) w8)
  ::std::unicode::String::split_trim = fn(w8 fn(tup(1 tup(tup(10 w60) w60)) w12))
  ::std::unicode::String::split = fn(w61 fn(tup(3 tup(tup(32 tup(32 tup(32 w89))) w89)) w66))
  ::std::data::List::pop_front = fn(ref(w66 w69) w71)
  ::std::logical::Option::unwrap = fn(w71 w72)
  ::std::numeric::N32::parse = fn(w72 w73)
  ::std::logical::Option::unwrap = fn(w73 w74)
  ::std::data::List::pop_front = fn(ref(w69 _) w79)
  ::std::logical::Option::unwrap = fn(w79 w80)
  ::std::numeric::N32::parse = fn(w80 w81)
  ::std::logical::Option::unwrap = fn(w81 w82)
  ::std::data::List::map = fn(w12 fn(fn(w61 tup(w74 w82)) dup11(w16 w20)))
  ::std::data::List::map = fn(w16 fn(fn(tup(w90 _) w90) w18))
  ::std::data::List::map = fn(w20 fn(fn(tup(_ w95) w95) w22))
  ::std::data::List::sort_by = fn(ref(w18 dup13(w33 w47)) fn(::std::numeric::N32::ascending _))
  ::std::data::List::sort_by = fn(ref(w22 dup17(w36 w112)) fn(::std::numeric::N32::ascending _))
  ::std::data::List::into_iter = fn(w33 w34)
  ::std::data::List::into_iter = fn(w36 w37)
  ::day_01::main::4 = x(x(0 w103) x(w34 w37))
  ::std::numeric::N32::to_string::to_string = fn(w103 tup(@add(16 w104) tup(w105 w106)))
  ::std::IO::println = fn(ref(w6 w40) fn(tup(w104 tup(tup(84 tup(111 tup(116 tup(97 tup(108 tup(32 tup(68 tup(105 tup(115 tup(116 tup(97 tup(110 tup(99 tup(101 tup(58 tup(32 w105)))))))))))))))) w106)) _))
  ::std::data::List::into_iter = fn(w47 w48)
  ::day_01::main::17 = x(w112 x(x(0 w111) w48))
  ::std::numeric::N32::to_string::to_string = fn(w111 tup(@add(18 w113) tup(w114 w115)))
  ::std::IO::println = fn(ref(w40 w51) fn(tup(w113 tup(tup(83 tup(105 tup(109 tup(105 tup(108 tup(97 tup(114 tup(105 tup(116 tup(121 tup(32 tup(83 tup(99 tup(111 tup(114 tup(101 tup(58 tup(32 w114)))))))))))))))))) w115)) _))
}

::day_01::main::4 {
  x(w8 x(w6 w5))
  ::std::data::List::IntoIter::next = fn(ref(w6 w1) enum(::day_01::main::7 enum(::day_01::main::8 x(w8 x(w1 w5)))))
}

::day_01::main::7 {
  enum(w0 x(w5 x(w3 w2)))
  ::std::data::List::IntoIter::next = fn(ref(w2 w7) enum(::day_01::main::11 enum(::day_01::main::12 x(w5 x(w3 x(w7 w0))))))
}

::day_01::main::8 { x(x(w3 w3) _) }

::day_01::main::11 {
  enum(dup54(w11 w14) x(x(@add(w13 w9) w19) x(w4 x(w3 dup53(@lt$(w11 ?(::day_01::main::16 ::day_01::main::15 x(w15 x(w14 w13)))) w15)))))
  ::day_01::main::4 = x(x(w9 w19) x(w4 w3))
}

::day_01::main::12 { x(x(w4 w4) _) }

::day_01::main::15 { x(@sub(w4 w2) x(w4 w2)) }

::day_01::main::16 { x(w5 x(@sub(w5 w2) w2)) }

::day_01::main::17 {
  x(w8 x(w7 w5))
  ::std::data::List::IntoIter::next = fn(ref(w5 w1) enum(::day_01::main::20 enum(::day_01::main::21 x(w8 x(w7 w1)))))
}

::day_01::main::20 {
  enum(dup75(w18 @mul(w17 w12)) x(dup70(w7 w22) x(x(@add(w12 w14) w21) w2)))
  ::std::data::List::into_iter = fn(w7 w8)
  ::day_01::main::22 = x(w18 x(x(0 w17) w8))
  ::day_01::main::17 = x(w22 x(x(w14 w21) w2))
}

::day_01::main::21 { x(_ x(x(w2 w2) _)) }

::day_01::main::22 {
  x(w8 x(w7 w5))
  ::std::data::List::IntoIter::next = fn(ref(w5 w1) enum(::day_01::main::25 enum(::day_01::main::26 x(w8 x(w7 w1)))))
}

::day_01::main::25 {
  enum(w0 x(dup87(@eq(w0 ?(::day_01::main::29 ::day_01::main::28 x(x(w4 w12) _))) w16) x(x(w4 w15) w2)))
  ::day_01::main::22 = x(w16 x(x(w12 w15) w2))
}

::day_01::main::26 { x(_ x(x(w2 w2) _)) }

::day_01::main::28 { x(x(@add(1 w1) w1) _) }

::day_01::main::29 { x(x(w2 w2) _) }

::std::numeric::N32::to_string::to_string { fn(dup100(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup109(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup109(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup112(@rem(10 @add$(48 n0)) @div(10 dup109(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::data::List::map { fn(tup(dup181(n0 dup191(?(::std::data::List::map::3 ::std::data::List::map::2 x(n1 x(n2 x(n3 x(n4 n5))))) n1)) tup(n2 _)) fn(n3 tup(n0 tup(n4 n5)))) }

::std::data::List::map::1 { x(dup191(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 n1)) n0) n1) }

::std::data::List::map::2 { x(@sub(1 dup191(?(::std::data::List::map::3 ::std::data::List::map::2 x(n0 x(n1 x(n2 x(n3 n4))))) n0)) x(tup(n5 n1) x(dup200(fn(n5 n6) n2) x(tup(n6 n3) n4)))) }

::std::data::List::map::3 { x(_ x(_ x(_ x(n0 n0)))) }

::std::data::List::pop_front { fn(ref(tup(dup210(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) tup(n2 n5)) tup(n1 tup(n3 n5))) n4) }

::std::data::List::pop_front::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::pop_front::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::data::List::push_back { fn(ref(tup(@add(1 n0) tup(n1 tup(n2 n3))) tup(n0 tup(n1 n3))) fn(n2 _)) }

::std::data::List::push_front { fn(ref(tup(@add$(1 n0) tup(n1 n2)) tup(n0 tup(tup(n3 n1) n2))) fn(n3 _)) }

::std::data::List::sort_by { fn(ref(tup(dup210(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) enum(::std::data::List::sort_by::4 enum(::std::data::List::sort_by::5 x(tup(n1 tup(n3 n4)) x(n5 x(tup(0 tup(n6 n6)) n7)))))))) n0) tup(n2 n4)) n7) fn(n5 _)) }

::std::data::List::sort_by::1 { x(tup(dup210(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 n1) x(x(n2 n3) enum(::std::data::List::sort_by::4 enum(::std::data::List::sort_by::5 x(tup(n1 tup(n3 n4)) n5)))))) n0) tup(n2 n4)) n5) }

::std::data::List::sort_by::4 { enum(n0 x(tup(dup210(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n1 n2) x(x(n3 n4) enum(::std::data::List::sort_by::4 enum(::std::data::List::sort_by::5 x(tup(n2 tup(n4 n5)) x(n6 x(tup(n7 tup(n8 n9)) n10)))))))) n1) tup(n3 n5)) x(dup309(n11 n6) x(tup(dup210(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n12 n13) x(x(n14 n15) enum(::std::data::List::sort_by::9 enum(::std::data::List::sort_by::10 x(n11 x(x(tup(n13 tup(n15 n16)) tup(n17 tup(n18 n9))) x(x(n0 n19) x(tup(0 tup(n20 n20)) tup(@add(1 @add(n17 n7)) tup(n8 tup(n19 n18)))))))))))) n12) tup(n14 n16)) n10)))) }

::std::data::List::sort_by::5 { x(_ x(_ x(n0 n0))) }

::std::data::List::sort_by::6 { x(n0 x(x(tup(dup210(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n1 n2) x(x(n3 n4) enum(::std::data::List::sort_by::9 enum(::std::data::List::sort_by::10 x(n0 x(x(tup(n2 tup(n4 n5)) n6) n7))))))) n1) tup(n3 n5)) n6) n7)) }

::std::data::List::sort_by::9 { enum(n0 x(dup329(fn(ref(n1 n2) fn(ref(n0 n3) ?(::std::data::List::sort_by::13 ::std::data::List::sort_by::12 x(n4 x(n5 x(x(n2 n6) x(n7 n3))))))) n4) x(n5 x(x(n1 n6) n7)))) }

::std::data::List::sort_by::10 { x(_ x(x(n0 n0) x(x(n1 n1) x(n2 n2)))) }

::std::data::List::sort_by::12 { x(_ x(x(tup(@add$(1 n0) tup(n1 n2)) tup(n0 tup(tup(n3 n1) n2))) x(x(n4 n4) x(x(n5 n5) n3)))) }

::std::data::List::sort_by::13 { x(n0 x(x(tup(dup210(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n1 n2) x(x(n3 n4) enum(::std::data::List::sort_by::9 enum(::std::data::List::sort_by::10 x(n0 x(x(tup(n2 tup(n4 n5)) n6) x(n7 x(tup(n8 tup(n9 n10)) n11))))))))) n1) tup(n3 n5)) n6) x(n7 x(x(tup(@add(1 n8) tup(n9 tup(n12 n10))) n11) n12)))) }

::std::data::List::iter { fn(ref(tup(dup358(n0 n1) tup(n2 n3)) tup(n0 tup(n4 n3))) tup(n1 ref(n2 n4))) }

::std::data::List::Iter::next { fn(ref(tup(dup364(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::Iter::next::2 { x(x(@sub(1 n0) n0) x(x(ref(tup(n1 n2) tup(n3 n4)) ref(n2 n4)) enum(enum(ref(n1 n3) n5) enum(_ n5)))) }

::std::data::List::Iter::next::3 { x(x(n0 n0) x(x(ref(n1 n1) _) ::std::logical::Option::None)) }

::std::data::List::Iter::drop { fn(ref(tup(_ ref(n0 n0)) _) _) }

::std::data::List::into_iter { fn(tup(n0 tup(n1 _)) tup(n0 n1)) }

::std::data::List::IntoIter::next { fn(ref(tup(dup390(?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n0 n1) x(x(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::List::IntoIter::next::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::IntoIter::next::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::numeric::N32::parse { fn(tup(dup1293(?(::std::numeric::N32::parse::3 ::std::numeric::N32::parse::2 x(n0 x(n1 n2))) n0) tup(n1 _)) n2) }

::std::numeric::N32::parse::2 { x(dup1303(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(0 n2)))) n0) x(n1 n2)) }

::std::numeric::N32::parse::3 { x(_ x(_ ::std::logical::Option::None)) }

::std::numeric::N32::parse::4 { x(dup1303(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::parse::5 { x(n0 x(tup(dup1312(dup1307(@le$(48 @n32_and(n1 ?(::std::numeric::N32::parse::9 ::std::numeric::N32::parse::8 x(n0 x(n2 x(n3 x(n4 n5))))))) @le(57 n1)) n4) n2) x(n3 n5))) }

::std::numeric::N32::parse::6 { x(_ x(_ x(n0 enum(enum(n0 n1) enum(_ n1))))) }

::std::numeric::N32::parse::8 { x(@sub(1 dup1303(?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(n0 x(n1 x(n2 n3)))) n0)) x(n1 x(@mul(10 @add(n4 n2)) x(@sub(48 n4) n3)))) }

::std::numeric::N32::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N32::parse::10 { x(n0 n0) }

::std::numeric::N32::ascending { fn(ref(dup1329(n0 @lt(n1 n2)) n0) fn(ref(dup1330(n3 n1) n3) n2)) }

::std::unicode::String::len { fn(ref(tup(dup1901(n0 n1) n2) tup(n0 n2)) n1) }

::std::unicode::String::split { fn(tup(dup1901(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(1 tup(tup(n6 n8) n8)) n9))))))))))) n5) fn(dup1910(tup(dup1901(n2 n1) n3) n7) n9)) }

::std::unicode::String::split::1 { x(tup(dup1901(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup1910(tup(dup1901(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::5 { enum(tup(dup1901(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup1910(tup(dup1901(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::6 { x(_ x(n0 n0)) }

::std::unicode::String::split_trim { fn(tup(dup1901(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(tup(dup1901(n6 @eq(0 dup1945(?(::std::unicode::String::split_trim::4 ::std::unicode::String::split_trim::3 x(1 dup1938(?(::std::unicode::String::split_trim::10 ::std::unicode::String::split_trim::9 x(x(tup(0 tup(n7 n7)) n8) x(n9 x(tup(n6 n10) _)))) n11))) ?(::std::unicode::String::split_trim::16 ::std::unicode::String::split_trim::15 x(n12 dup1940(_ n9)))))) n10) enum(::std::unicode::String::split_trim::23 enum(::std::unicode::String::split_trim::24 x(n13 x(n8 x(n11 x(x(n12 1) n14))))))))))))) n5) fn(dup1934(tup(dup1901(n2 n1) n3) n13) n14)) }

::std::unicode::String::split_trim::1 { x(tup(dup1901(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(tup(dup1901(n6 @eq(0 dup1945(?(::std::unicode::String::split_trim::4 ::std::unicode::String::split_trim::3 x(n7 dup1938(?(::std::unicode::String::split_trim::10 ::std::unicode::String::split_trim::9 x(x(n8 n9) x(n10 x(tup(n6 n11) _)))) n12))) ?(::std::unicode::String::split_trim::16 ::std::unicode::String::split_trim::15 x(n13 dup1940(n14 n10)))))) n11) enum(::std::unicode::String::split_trim::23 enum(::std::unicode::String::split_trim::24 x(n15 x(n9 x(n12 x(x(n13 n16) n17))))))))))))) n5) x(dup1934(tup(dup1901(n2 n1) n3) n15) x(n8 x(n7 x(x(n14 n16) n17))))) }

::std::unicode::String::split_trim::3 { x(?(0 1 n0) n0) }

::std::unicode::String::split_trim::4 { x(_ 0) }

::std::unicode::String::split_trim::9 { x(x(n0 n0) _) }

::std::unicode::String::split_trim::10 { x(n0 x(?(::std::unicode::String::split_trim::12 ::std::unicode::String::split_trim::11 x(n0 n1)) n1)) }

::std::unicode::String::split_trim::11 { x(x(n0 n0) _) }

::std::unicode::String::split_trim::12 { x(x(tup(@add(1 n0) tup(n1 tup(n2 n3))) tup(n0 tup(n1 n3))) x(n2 _)) }

::std::unicode::String::split_trim::15 { x(?(0 1 n0) n0) }

::std::unicode::String::split_trim::16 { x(_ 0) }

::std::unicode::String::split_trim::23 { enum(tup(dup1901(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(tup(dup1901(n6 @eq(0 dup1945(?(::std::unicode::String::split_trim::4 ::std::unicode::String::split_trim::3 x(n7 dup1938(?(::std::unicode::String::split_trim::10 ::std::unicode::String::split_trim::9 x(x(n8 n9) x(n10 x(tup(n6 n11) _)))) n12))) ?(::std::unicode::String::split_trim::16 ::std::unicode::String::split_trim::15 x(n13 dup1940(n14 n10)))))) n11) enum(::std::unicode::String::split_trim::23 enum(::std::unicode::String::split_trim::24 x(n15 x(n9 x(n12 x(x(n13 n16) n17))))))))))))) n5) x(dup1934(tup(dup1901(n2 n1) n3) n15) x(n8 x(n7 x(x(n14 n16) n17))))) }

::std::unicode::String::split_trim::24 { x(_ x(n0 x(_ x(x(n1 n1) n0)))) }

::std::unicode::String::split_once { fn(tup(dup1901(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) n6)))))) n5) fn(tup(dup1901(n2 n1) n3) n6)) }

::std::unicode::String::split_once::1 { x(tup(dup1901(n0 n1) n2) x(n3 x(tup(dup1901(n4 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n0 n2) x(n3 x(tup(n4 n5) n6)))))) n5) n6))) }

::std::unicode::String::split_once::2 { x(tup(dup358(n0 dup364(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n1 n2) x(x(ref(n3 n4) n5) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(tup(n0 tup(n4 n6)) x(n7 x(tup(n8 tup(n9 n10)) x(tup(n2 n5) x(tup(n11 ref(n12 n9)) n13)))))))))) n1)) tup(n3 n6)) x(n7 x(tup(dup358(n8 n11) tup(n12 n10)) n13))) }

::std::unicode::String::split_once::3 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::5 { x(n0 x(n1 x(n2 x(tup(dup364(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n3 n4) x(x(n5 n6) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(n0 x(n1 x(n2 x(tup(n4 n6) n7))))))))) n3) n5) n7)))) }

::std::unicode::String::split_once::8 { enum(ref(dup2024(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(tup(dup364(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::unicode::String::split_once::12 enum(::std::unicode::String::split_once::13 x(n2 x(n3 x(n4 x(n5 x(tup(n7 n9) x(n1 n10))))))))))) n6) n8) n10)))))) }

::std::unicode::String::split_once::9 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))))) }

::std::unicode::String::split_once::12 { enum(ref(dup2038(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(n6 x(@ne(n1 ?(::std::unicode::String::split_once::5 ::std::unicode::String::split_once::16 x(n2 x(n3 x(n4 x(n5 x(n6 n7))))))) n7))))))) }

::std::unicode::String::split_once::13 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) x(_ tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4))))))))) }

::std::unicode::String::split_once::14 { x(n0 x(tup(_ tup(_ n1)) x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))) }

::std::unicode::String::split_once::16 { x(n0 x(n1 x(tup(dup210(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n2 n3) x(x(n4 n5) enum(::std::unicode::String::split_once::21 enum(::std::unicode::String::split_once::22 x(n0 x(n1 x(tup(n3 tup(n5 n6)) n7)))))))) n2) tup(n4 n6)) x(tup(_ ref(n8 n8)) x(tup(_ ref(n9 n9)) n7))))) }

::std::unicode::String::split_once::21 { enum(n0 x(tup(dup1901(n1 n2) n3) x(tup(@add(1 n4) tup(n5 tup(n0 n6))) x(tup(dup1901(n7 @le$(n2 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n1 n3) x(tup(n4 tup(n5 n6)) x(tup(n7 n8) n9)))))) n8) n9)))) }

::std::unicode::String::split_once::22 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::23 { x(tup(@add(n0 n1) tup(n2 n3)) x(tup(n0 tup(n3 n4)) tup(tup(n1 tup(n2 n4)) ::std::logical::Option::None))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2274(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2274(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2274(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2274(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

::std::IO::full_input { fn(ref(dup(n0 @io_read_byte(0 dup(dup2364(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(tup(0 tup(n3 n3)) x(n4 n5))))) n4) @seq$(n0 n1)))) n2) n5) }

::std::IO::full_input::1 { x(x(dup(n0 @io_read_byte(0 dup(dup2364(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(n3 x(n4 n5))))) n4) @seq$(n0 n1)))) n2) x(n3 n5)) }

::std::IO::full_input::3 { x(x(dup(n0 @io_read_byte(0 dup(dup2364(@ne(0 ?(::std::IO::full_input::4 ::std::IO::full_input::3 x(x(n1 n2) x(tup(n3 tup(n4 n5)) x(n6 n7))))) n6) @seq$(n0 n1)))) n2) x(tup(@add(1 n3) tup(n4 tup(n8 n5))) x(n8 n7))) }

::std::IO::full_input::4 { x(x(n0 n0) x(n1 x(_ n1))) }

