
::std::data::Array::Node::to_leaf { fn(x x) }

::std::data::Array::Node::as_leaf { fn(x x) }

::std::data::Array::Node::leaf { fn(x x) }

::std::logical::Option::None { enum(_ enum(r r)) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::IO::read_byte { fn(ref(dup(io0 @io_read_byte(default dup(byte @seq$(io0 io1)))) io1) fn(default byte)) }

::main { ::day_20::main }

::day_20::main {
  fn(ref(w1 w38) _)
  ::day_20::main::1 = x(x(w1 w53) x(x(tup(0 tup(w45 w45)) w51) x(x(_ dup8(w12 w15)) x(_ w47))))
  ::std::data::Array::from_list = fn(w51 w10)
  1 = @sub$(0 w17)
  1 = @sub$(0 w18)
  ::day_20::main::16 = x(w47 x(w10 x(x(tup(1 tup(tup(w12 w54) w54)) w58) x(w15 tup(w17 w18)))))
  ::std::data::List::len = fn(ref(w58 w22) w24)
  w24 = @sub(1 _)
  ::day_20::main::26 = x(w22 x(x(0 w65) x(x(0 w63) 0)))
  ::std::numeric::N32::to_string::to_string = fn(w65 w35)
  w35 = tup(@add(8 w70) tup(w68 w71))
  ::std::IO::println = fn(ref(w53 w31) fn(tup(w70 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w68)))))))) w71)) _))
  ::std::numeric::N32::to_string::to_string = fn(w63 w42)
  w42 = tup(@add(8 w75) tup(w73 w76))
  ::std::IO::println = fn(ref(w31 w38) fn(tup(w75 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w73)))))))) w76)) _))
}

::day_20::main::1 {
  x(x(w12 w20) w10)
  ::std::IO::read_line = fn(ref(w12 w1) w3)
  w3 = enum(::day_20::main::4 enum(::day_20::main::5 x(x(w1 w20) w10)))
}

::day_20::main::4 {
  enum(w0 x(w9 x(x(w7 w33) x(x(w5 w31) x(w3 w29)))))
  ::day_20::main::6 = x(x(w7 w27) x(x(w5 w25) x(x(w3 w23) x(w0 x(tup(0 tup(w18 w18)) w20)))))
  ::std::data::Array::from_list = fn(w20 w16)
  ::std::data::List::push_back = fn(ref(w27 w13) fn(w16 _))
  ::day_20::main::1 = x(w9 x(x(w13 w33) x(x(w25 w31) x(w23 w29))))
}

::day_20::main::5 { x(x(w7 w7) x(x(w5 w5) x(x(w3 w3) x(w1 w1)))) }

::day_20::main::6 {
  x(w15 x(w13 x(w11 x(w9 w8))))
  ::std::data::List::pop_front = fn(ref(w9 w2) w5)
  w5 = enum(::day_20::main::9 enum(::day_20::main::10 x(w15 x(w13 x(w11 x(w2 w8))))))
}

::day_20::main::9 {
  enum(dup80(w18 dup80(w21 w15)) x(x(w10 w38) x(x(w8 w36) x(x(w6 w34) x(w4 x(w3 w31))))))
  w18 = @eq(83 w19)
  w19 = ?(::day_20::main::13 ::day_20::main::12 x(x(w10 w29) x(x(w8 w27) x(x(w6 w25) x(x(w3 w23) x(w21 _))))))
  w15 = @ne(35 w16)
  ::std::data::List::push_back = fn(ref(w23 w13) fn(w16 _))
  ::day_20::main::6 = x(x(w29 w38) x(x(w27 w36) x(x(w25 w34) x(w4 x(w13 w31)))))
}

::day_20::main::10 { x(x(w8 w8) x(x(w6 w6) x(x(w4 w4) x(_ x(w1 w1))))) }

::day_20::main::12 {
  x(x(w19 w5) x(x(_ w9) x(x(w15 w15) x(x(w13 w1) _))))
  ::std::data::List::len = fn(ref(w13 w1) w3)
  ::std::data::List::len = fn(ref(w19 w5) w7)
  w9 = tup(w3 w7)
}

::day_20::main::13 {
  x(w11 x(x(w9 w9) x(w7 x(w5 x(w3 w12)))))
  w3 = @eq(69 w1)
  w1 = ?(::day_20::main::15 ::day_20::main::14 x(w11 x(w7 x(w5 w12))))
}

::day_20::main::14 {
  x(x(w16 w5) x(x(_ w9) x(x(w12 w1) _)))
  ::std::data::List::len = fn(ref(w12 w1) w3)
  ::std::data::List::len = fn(ref(w16 w5) w7)
  w9 = tup(w3 w7)
}

::day_20::main::15 { x(x(w6 w6) x(x(w4 w4) x(x(w2 w2) _))) }

::day_20::main::16 {
  x(dup112(w1 w14) x(w7 x(w6 x(dup116(w0 w10) w3))))
  ::day_20::eq = fn(w0 fn(w1 w2))
  w2 = ?(::day_20::main::18 ::day_20::main::17 x(w14 x(w7 x(w6 x(w10 w3)))))
}

::day_20::main::17 { x(_ x(_ x(x(w3 w3) _))) }

::day_20::main::18 {
  x(w37 x(w36 x(x(w35 w65) x(dup128(w2 dup128(w7 dup128(w13 dup128(w18 w28)))) dup130(w41 dup130(w47 dup130(w53 w59)))))))
  ::day_20::main::19 = x(x(w36 w43) x(w41 x(x(_ w40) w38)))
  w2 = @add(tup(1 0) w4)
  w38 = fn(w4 _)
  ::day_20::main::19 = x(x(w43 w49) x(w47 x(x(w40 w46) w44)))
  1 = @sub$(0 w8)
  w7 = @add(tup(w8 0) w10)
  w44 = fn(w10 _)
  ::day_20::main::19 = x(x(w49 w55) x(w53 x(x(w46 w52) w50)))
  w13 = @add(tup(0 1) w15)
  w50 = fn(w15 _)
  ::day_20::main::19 = x(x(w55 w61) x(w59 x(x(w52 dup132(w26 w30)) w56)))
  1 = @sub$(0 w19)
  w18 = @add(tup(0 w19) w21)
  w56 = fn(w21 _)
  ::std::data::List::push_back = fn(ref(w35 w24) fn(w26 _))
  ::day_20::main::16 = x(w37 x(w61 x(x(w24 w65) x(w30 w28))))
}

::day_20::main::19 {
  x(w9 x(w7 x(w6 w2)))
  w2 = fn(dup146(w11 w14) w13)
  ::day_20::eq = fn(w7 fn(w11 w12))
  w12 = ?(::day_20::main::22 ::day_20::main::21 x(w9 x(w6 x(w14 w13))))
}

::day_20::main::21 { x(x(w5 w5) x(x(w3 w3) _)) }

::day_20::main::22 {
  x(x(w28 w1) x(w26 x(w24 w29)))
  w24 = tup(w5 w7)
  w7 = dup152(w8 w6)
  ::std::data::Array::get = fn(ref(w28 w1) fn(w8 w9))
  tup(w5 w6) = tup(w17 w16)
  w17 = dup153(w18 w15)
  ::std::data::Array::get = fn(w9 fn(w18 w19))
  w19 = ref(w20 w21)
  w20 = dup154(w22 w21)
  w22 = ?(::day_20::main::24 ::day_20::main::23 x(w26 x(tup(w15 w16) w29)))
}

::day_20::main::23 {
  x(x(_ w1) x(w3 _))
  w1 = w3
}

::day_20::main::24 { x(x(w3 w3) _) }

::day_20::main::26 {
  x(w10 w9)
  ::std::data::List::pop_front = fn(ref(w10 w1) w3)
  w3 = enum(::day_20::main::29 enum(::day_20::main::30 x(w1 w9)))
}

::day_20::main::29 {
  enum(w0 x(dup175(w11 w29) x(x(w6 w28) x(x(w4 w26) dup182(w8 dup182(w19 w14))))))
  w8 = @add(1 w9)
  ::std::data::List::into_iter = fn(w11 w12)
  ::day_20::main::31 = x(x(w6 w23) x(x(w4 w21) x(w19 x(w0 x(w9 w12)))))
  w14 = @add(1 w15)
  ::day_20::main::26 = x(w29 x(x(w23 w28) x(x(w21 w26) w15)))
}

::day_20::main::30 { x(_ x(x(w4 w4) x(x(w2 w2) _))) }

::day_20::main::31 {
  x(w12 x(w10 x(w8 x(w7 x(w6 w5)))))
  ::std::data::List::IntoIter::next = fn(ref(w5 w1) w3)
  w3 = enum(::day_20::main::34 enum(::day_20::main::35 x(w12 x(w10 x(w8 x(w7 x(w6 w1)))))))
}

::day_20::main::34 {
  enum(w0 x(x(w9 w38) x(x(w7 w36) x(dup206(w15 w34) x(dup207(w10 w33) x(dup208(w14 w21) w2))))))
  ::day_20::dist = fn(w10 fn(w0 w12))
  dup212(w17 w26) = w12
  w14 = @sub(w15 w16)
  w16 = @sub(w17 w18)
  w18 = @le$(50 w24)
  w24 = ?(::day_20::main::38 ::day_20::main::37 x(x(w9 w30) x(x(w7 w28) x(w26 _))))
  w21 = @add(1 w22)
  ::day_20::main::31 = x(x(w30 w38) x(x(w28 w36) x(w34 x(w33 x(w22 w2)))))
}

::day_20::main::35 { x(x(w7 w7) x(x(w5 w5) _)) }

::day_20::main::37 {
  x(w7 x(w5 x(dup222(w8 w13) w15)))
  w8 = @eq(2 w9)
  w9 = ?(::day_20::main::41 ::day_20::main::40 x(w7 _))
  w13 = @le(20 w14)
  w14 = ?(::day_20::main::44 ::day_20::main::43 x(w5 w15))
}

::day_20::main::38 { x(x(w5 w5) x(x(w3 w3) _)) }

::day_20::main::40 {
  x(x(w4 w1) _)
  w4 = @add(1 w1)
}

::day_20::main::41 { x(x(w2 w2) _) }

::day_20::main::43 {
  x(x(w4 w1) _)
  w4 = @add(1 w1)
}

::day_20::main::44 { x(x(w2 w2) _) }

::std::numeric::N32::to_string::to_string {
  fn(dup236(w5 w7) w6)
  w5 = ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w4)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
  w4 = w9
}

::std::numeric::N32::to_string::to_string::3 {
  x(_ w0)
  w0 = tup(w3 tup(tup(48 w4) w5))
  1 = w3
  w4 = w5
}

::std::numeric::N32::to_string::to_string::4 {
  x(dup245(w0 w6) w2)
  w0 = ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup248(w0 w7) x(w11 w15))
  w0 = @rem(10 w1)
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  w7 = @div(10 w8)
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::day_20::eq {
  fn(tup(w0 w1) fn(tup(w3 w4) w13))
  w0 = @eq(w3 w12)
  w12 = ?(::day_20::eq::3 ::day_20::eq::2 x(w1 x(w4 w13)))
}

::day_20::eq::2 {
  x(w5 x(w4 w6))
  w5 = @eq(w4 w2)
  w2 = ?(::day_20::eq::5 1 w6)
}

::day_20::eq::3 {
  x(_ x(_ w3))
  0 = w3
}

::day_20::eq::5 {
  r
  0 = r
}

::day_20::dist {
  fn(tup(w0 w1) fn(tup(w3 w4) w14))
  ::std::numeric::N32::diff = fn(w0 fn(w3 w10))
  ::std::numeric::N32::diff = fn(w1 fn(w4 w13))
  w10 = @add(w13 w14)
}

::std::data::List::len {
  fn(ref(w1 w6) w11)
  w1 = tup(w10 w8)
  w6 = tup(w7 w8)
  w10 = dup274(w11 w7)
}

::std::data::List::pop_front {
  fn(ref(tup(dup366(w12 w16) tup(w3 w4)) tup(w17 tup(w15 w4))) w13)
  w12 = ?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(w16 w17) x(x(w3 w15) w13)))
}

::std::data::List::pop_front::2 {
  x(x(w14 w1) x(x(w12 w7) w9))
  w14 = @sub(1 w1)
  tup(w3 w4) = w12
  w7 = w4
  w9 = enum(enum(w3 w15) enum(_ w15))
}

::std::data::List::pop_front::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::data::List::concat {
  fn(w0 fn(w1 w22))
  tup(w5 tup(w6 w15)) = w0
  tup(w10 tup(w11 w21)) = w1
  w15 = w11
  w5 = @add(w10 w18)
  w22 = tup(w18 tup(w6 w21))
}

::std::data::List::push_back {
  fn(ref(w1 w9) fn(w3 _))
  ::std::data::List::concat = fn(w1 fn(tup(1 tup(tup(w3 w11) w11)) w9))
}

::std::data::List::into_iter {
  fn(tup(w0 tup(w1 _)) w7)
  w7 = tup(w0 w1)
}

::std::data::List::IntoIter::next {
  fn(ref(tup(dup546(w11 w15) w3) tup(w16 w14)) w12)
  w11 = ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(w15 w16) x(x(w3 w14) w12)))
}

::std::data::List::IntoIter::next::2 {
  x(x(w14 w1) x(x(w12 w7) w9))
  w14 = @sub(1 w1)
  tup(w3 w4) = w12
  w7 = w4
  w9 = enum(enum(w3 w15) enum(_ w15))
}

::std::data::List::IntoIter::next::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::data::Array::empty { tup(0 _) }

::std::data::Array::from_list {
  fn(tup(w0 tup(w1 _)) w10)
  ::std::data::Array::from_fn = fn(w0 fn(ref(w1 _) fn(fn(ref(tup(w18 w19) w19) w18) w10)))
}

::std::data::Array::from_fn {
  fn(dup611(w9 w13) fn(ref(dup612(w1 w12) w1) fn(w4 w10)))
  w9 = ?(::std::data::Array::from_fn::3 ::std::data::Array::from_fn::2 x(w13 x(w12 x(w4 w10))))
}

::std::data::Array::from_fn::2 {
  x(dup617(w1 dup617(w9 w29)) x(w34 x(w33 w31)))
  w33 = fn(ref(w36 w41) w43)
  ::std::data::Array::Node::unzip_with = fn(w1 fn(w3 fn(fn(w36 tup(w43 w41)) w5)))
  tup(w6 w7) = w5
  ::std::data::Array::pop_back = fn(ref(tup(w9 w7) w14) w16)
  ::std::logical::Option::unwrap = fn(w16 _)
  ::std::data::Array::push_front = fn(ref(w14 w20) fn(w34 _))
  tup(_ w25) = w20
  w3 = w25
  w31 = tup(w29 w6)
}

::std::data::Array::from_fn::3 { x(_ x(_ x(_ ::std::data::Array::empty))) }

::std::data::Array::get {
  fn(ref(tup(dup689(w0 w11) w3) tup(w0 w4)) fn(w8 w17))
  ::std::data::Array::get::1 = x(x(ref(w3 w4) w22) x(w8 w11))
  ::std::data::Array::Node::as_leaf = fn(w22 w17)
}

::std::data::Array::get::1 {
  x(w5 x(w3 dup699(w0 w6)))
  w0 = @lt$(1 w1)
  w1 = ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(w5 x(w3 w6)))
}

::std::data::Array::get::2 {
  x(x(w13 w17) x(dup703(w2 w8) w10))
  w2 = @rem(2 w3)
  ::std::data::Array::Node::half = fn(w13 fn(w10 fn(w3 w4)))
  tup(w5 w6) = w4
  w8 = @div(2 w9)
  ::std::data::Array::get::1 = x(x(w5 w17) x(w9 w6))
}

::std::data::Array::get::3 { x(x(w3 w3) _) }

::std::data::Array::push_front {
  fn(ref(tup(dup737(w15 dup737(w19 w12)) w3) tup(w13 w4)) fn(w8 _))
  w15 = ?(::std::data::Array::push_front::3 ::std::data::Array::push_front::2 x(w19 x(ref(w3 w4) x(w8 _))))
  w12 = @add(1 w13)
}

::std::data::Array::push_front::2 {
  x(w14 x(w13 x(w12 _)))
  ::std::data::Array::push_front::4 = x(x(w13 w17) w14)
  ref(w4 w10) = w17
  ::std::data::Array::Node::leaf = fn(w12 w7)
  w10 = tup(w7 w4)
}

::std::data::Array::push_front::3 {
  x(_ x(w9 x(w8 _)))
  ref(_ w6) = w9
  ::std::data::Array::Node::leaf = fn(w8 w5)
  w6 = w5
}

::std::data::Array::push_front::4 {
  x(w4 dup757(w0 w5))
  w0 = @lt$(1 w1)
  w1 = ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(w4 w5))
}

::std::data::Array::push_front::5 {
  x(x(w23 w26) w21)
  ref(tup(w2 w4) tup(w15 w12)) = w23
  tup(w11 w12) = tup(w4 w2)
  w21 = @div(2 w19)
  ::std::data::Array::push_front::4 = x(x(ref(w11 w15) w26) w19)
}

::std::data::Array::push_front::6 { x(x(w2 w2) _) }

::std::data::Array::pop_back {
  fn(ref(tup(dup770(w12 w15) w3) tup(w16 w4)) w13)
  w12 = ?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(w15 w16) x(ref(w3 w4) w13)))
}

::std::data::Array::pop_back::2 {
  x(x(dup775(w0 w8) w9) w3)
  w0 = @eq(1 w1)
  w1 = ?(::std::data::Array::pop_back::5 ::std::data::Array::pop_back::4 x(x(w8 w9) w3))
}

::std::data::Array::pop_back::3 {
  x(x(w3 w3) x(_ w5))
  ::std::data::Array::pop_back::13 = x(w5 ::std::logical::Option::None)
}

::std::data::Array::pop_back::4 {
  x(x(_ w0) x(w7 w12))
  w0 = 0
  w7 = ref(w2 _)
  ::std::data::Array::Node::to_leaf = fn(w2 w4)
  ::std::data::Array::pop_back::13 = x(w12 enum(enum(w4 w10) enum(_ w10)))
}

::std::data::Array::pop_back::5 {
  x(x(dup786(w0 w2) w3) x(w6 w9))
  w2 = @sub(1 w3)
  ::std::data::Array::pop_back::6 = x(w6 x(w0 w9))
}

::std::data::Array::pop_back::6 {
  x(w20 x(dup792(w0 w11) w23))
  w0 = @sub(1 w1)
  w1 = @rem(2 w2)
  dup794(w12 w26) = w2
  ref(w6 w25) = w20
  ::std::data::Array::Node::half = fn(ref(w6 w9) fn(w11 fn(w12 w13)))
  tup(w14 dup793(w21 w27)) = w13
  w21 = @eq(1 w22)
  w22 = ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(w14 x(w27 x(w26 x(x(w9 w25) w23)))))
}

::std::data::Array::pop_back::8 {
  x(w18 x(_ x(w16 x(x(w15 w10) w12))))
  w18 = ref(w1 _)
  ::std::data::Array::Node::to_leaf = fn(w1 w3)
  tup(w6 w7) = w15
  w16 = ?(::std::data::Array::pop_back::12 ::std::data::Array::pop_back::11 x(w6 x(w7 w20)))
  w10 = w20
  w12 = enum(enum(w3 w23) enum(_ w23))
}

::std::data::Array::pop_back::9 {
  x(w5 x(w4 x(_ x(x(w2 w2) w24))))
  ::std::data::Array::pop_back::6 = x(w5 x(w4 w24))
}

::std::data::Array::pop_back::11 { x(w3 x(_ w3)) }

::std::data::Array::pop_back::12 { x(_ x(w2 w2)) }

::std::data::Array::pop_back::13 { x(w11 w11) }

::std::data::Array::Node::half {
  fn(ref(tup(w1 w3) tup(w19 w17)) fn(w7 fn(w8 w14)))
  w8 = ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(w1 w19) x(x(w3 w17) x(w7 w14))))
}

::std::data::Array::Node::half::2 {
  x(x(w11 w11) x(x(w9 w1) x(w7 w5)))
  w7 = @div(2 w4)
  w5 = tup(ref(w9 w1) w4)
}

::std::data::Array::Node::half::3 {
  x(x(w12 w1) x(x(w10 w10) x(w8 w6)))
  w8 = @add(1 w4)
  w4 = @div(2 w5)
  w6 = tup(ref(w12 w1) w5)
}

::std::data::Array::Node::unzip_with {
  fn(dup964(w7 w12) fn(w1 fn(w2 w9)))
  w7 = @eq(1 w8)
  w8 = ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(w12 x(w1 x(w2 w9))))
}

::std::data::Array::Node::unzip_with::2 {
  x(_ x(w14 x(w13 w11)))
  ::std::data::Array::Node::to_leaf = fn(w14 w2)
  w13 = fn(w2 w3)
  tup(w4 w5) = w3
  ::std::data::Array::Node::leaf = fn(w4 w8)
  ::std::data::Array::Node::leaf = fn(w5 w10)
  w11 = tup(w8 w10)
}

::std::data::Array::Node::unzip_with::3 {
  x(dup975(w4 w13) x(w30 x(dup977(w8 w16) w27)))
  tup(w1 w2) = w30
  w4 = @add(1 w5)
  w5 = @div(2 w6)
  ::std::data::Array::Node::unzip_with = fn(w6 fn(w1 fn(w8 w9)))
  tup(w10 w11) = w9
  w13 = @div(2 w14)
  ::std::data::Array::Node::unzip_with = fn(w14 fn(w2 fn(w16 w17)))
  tup(w18 w19) = w17
  w27 = tup(tup(w10 w18) tup(w11 w19))
}

::std::logical::Option::unwrap {
  fn(w0 w7)
  w0 = enum(::std::logical::Option::unwrap::3 enum(_ w7))
}

::std::logical::Option::unwrap::3 { enum(w0 w0) }

::std::numeric::N32::diff {
  fn(dup1522(w6 w11) fn(dup1523(w7 w10) w9))
  w6 = @lt$(w7 w8)
  w8 = ?(::std::numeric::N32::diff::3 ::std::numeric::N32::diff::2 x(w11 x(w10 w9)))
}

::std::numeric::N32::diff::2 {
  x(w5 x(w4 w2))
  w5 = @sub(w4 w2)
}

::std::numeric::N32::diff::3 {
  x(w5 x(w4 w2))
  w4 = @sub(w5 w2)
}

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(w3 _))
  tup(w7 tup(w8 _)) = w3
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 {
  x(w4 x(dup2430(w0 w6) w1))
  w0 = ?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1)))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 w14))
  w15 = @sub(1 w1)
  tup(w4 w5) = w14
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::read_line {
  fn(ref(w1 w17) w14)
  ::std::IO::read_byte = fn(ref(w1 w6) fn(0 w8))
  dup2473(w12 w15) = w8
  w12 = @ne(0 w13)
  w13 = ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(w6 w17) x(w15 w14)))
}

::std::IO::read_line::2 {
  x(w5 x(dup2479(w6 w9) w1))
  w6 = @eq(10 w7)
  w7 = ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(w5 x(w9 w8)))
  w1 = enum(enum(w8 w12) enum(_ w12))
}

::std::IO::read_line::3 { x(x(w3 w3) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 {
  x(x(w4 w4) x(_ w0))
  w0 = tup(w5 tup(w6 w7))
  0 = w5
  w6 = w7
}

::std::IO::read_line::6 {
  x(w10 x(w8 w6))
  ::std::IO::read_line::7 = x(w10 x(x(tup(1 tup(tup(w8 w11) w11)) w14) _))
  w6 = w14
}

::std::IO::read_line::7 {
  x(x(w10 w18) w8)
  ::std::IO::read_byte = fn(ref(w10 w1) fn(10 w3))
  dup2496(w11 w16) = w3
  w11 = @ne(10 w12)
  w12 = ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(w1 w18) x(w16 w8)))
}

::std::IO::read_line::9 {
  x(w9 x(w7 x(x(w6 w19) w17)))
  ::std::data::List::concat = fn(w6 fn(tup(1 tup(tup(w7 w10) w10)) w3))
  ::std::IO::read_line::7 = x(w9 x(x(w3 w19) w17))
}

::std::IO::read_line::10 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

