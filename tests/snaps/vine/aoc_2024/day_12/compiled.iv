
::main { ::day_12::main }

::day_12::main {
  fn(ref(w3 w44) _)
  ::day_12::main::2 = x(x(w3 w61) x(x(::std::data::Array::empty w59) x(x(tup(0 tup(w51 w51)) w57) x(tup(0 tup(w52 w52)) x(0 dup12(w36 w74))))))
  ref(w59 w17) = ref(w20 w33)
  ::day_12::main::26 = x(x(0 w66) x(0 x(w20 w63)))
  ::std::numeric::N32::to_string = fn(w66 w29)
  ::std::data::List::concat = fn(tup(8 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w67)))))))) w67)) fn(w29 w30))
  ::std::IO::println = fn(ref(w61 w25) fn(w30 _))
  ::std::data::Array::len = fn(ref(w63 w33) @div(w36 w37))
  ::day_12::main::34 = x(w17 x(w57 x(w74 x(w37 x(x(0 w72) x(0 tup(0 tup(w68 w68))))))))
  ::std::numeric::N32::to_string = fn(w72 w48)
  ::std::data::List::concat = fn(tup(8 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w77)))))))) w77)) fn(w48 w49))
  ::std::IO::println = fn(ref(w25 w44) fn(w49 _))
}

::day_12::main::2 {
  x(x(w13 w22) w11)
  ::std::IO::read_line = fn(ref(w13 w1) enum(::day_12::main::5 enum(::day_12::main::6 x(x(w1 w22) w11))))
}

::day_12::main::5 {
  enum(dup51(w13 w28) x(w10 x(x(w8 w38) x(x(w6 w36) x(w4 x(@add(1 w12) w33))))))
  ::std::data::List::concat = fn(w6 fn(tup(1 tup(tup(w13 w23) w23)) w16))
  ::day_12::main::7 = x(x(w8 w31) x(w4 x(w28 x(x(tup(0 tup(w24 w24)) w27) tup(35 0)))))
  ::day_12::main::2 = x(w10 x(x(w31 w38) x(x(w16 w36) x(w27 x(w12 w33)))))
}

::day_12::main::6 { x(x(w8 w8) x(x(w6 w6) x(x(w4 w4) x(_ x(w1 w1))))) }

::day_12::main::7 {
  x(w13 x(w11 x(w10 w9)))
  ::std::data::List::pop_front = fn(ref(w10 w2) enum(::day_12::main::10 enum(::day_12::main::11 x(w13 x(w11 x(w2 w9))))))
}

::day_12::main::10 {
  enum(dup82(w33 dup82(w49 dup82(w16 w20))) x(x(w8 w59) x(w6 x(w5 x(x(w4 w55) tup(@eq(w33 ?(::day_12::main::16 ::day_12::main::15 x(x(w10 w40) x(x(w12 w38) x(w29 _))))) w29))))))
  ::day_12::Regions::new = fn(ref(w8 w10) w12)
  ::std::data::List::pop_front = fn(ref(w6 w42) enum(::day_12::main::21 enum(::day_12::main::22 x(x(w40 w51) x(w49 x(x(w38 dup83(w17 w21)) _))))))
  ::std::data::List::concat = fn(w4 fn(tup(1 tup(tup(tup(w20 w21) w52) w52)) w25))
  ::day_12::main::7 = x(x(w51 w59) x(w42 x(w5 x(x(w25 w55) tup(w16 w17)))))
}

::day_12::main::11 { x(x(w6 w6) x(_ x(_ x(x(w2 w2) _)))) }

::day_12::main::15 {
  x(x(w18 w7) x(x(w16 w11) x(w14 _)))
  ::day_12::Regions::find = fn(ref(w18 w1) fn(w14 w4))
  ::day_12::Regions::union_found = fn(ref(w1 w7) fn(w16 fn(w4 w11)))
}

::day_12::main::16 { x(x(w5 w5) x(x(w3 w3) _)) }

::day_12::main::21 { enum(tup(@eq(w9 ?(::day_12::main::24 ::day_12::main::23 x(w11 x(w8 x(w3 w15))))) w3) x(w11 x(w9 x(w8 w15)))) }

::day_12::main::22 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

::day_12::main::23 {
  x(x(w18 w7) x(x(w16 w11) x(w14 _)))
  ::day_12::Regions::find = fn(ref(w18 w1) fn(w14 w4))
  ::day_12::Regions::union_found = fn(ref(w1 w7) fn(w16 fn(w4 w11)))
}

::day_12::main::24 { x(x(w5 w5) x(x(w3 w3) _)) }

::day_12::main::26 {
  x(w10 x(dup132(@lt(w4 ?(::day_12::main::28 ::day_12::main::27 x(w10 x(w13 x(w2 w12))))) w13) x(w7 w12)))
  ::std::data::Array::len = fn(ref(w7 w2) w4)
}

::day_12::main::27 {
  x(x(w7 w24) x(dup140(w11 @add(1 w2)) x(w4 w21)))
  ::std::data::Array::get = fn(ref(w4 w9) fn(w11 ref(dup136(enum(::day_12::main::32 enum(::day_12::main::33 x(x(w7 w19) _))) w14) w14)))
  ::day_12::main::26 = x(x(w19 w24) x(w2 x(w9 w21)))
}

::day_12::main::28 { x(x(w4 w4) x(_ x(w1 w1))) }

::day_12::main::32 { enum(dup151(@mul(w12 w13) @mul(4 @sub(w11 w12))) enum(@mul(2 w11) x(x(@add(w13 w15) w15) _))) }

::day_12::main::33 { enum(_ x(x(w3 w3) _)) }

::day_12::main::34 { x(w10 x(w9 x(dup160(w1 w16) x(w7 x(w6 x(dup164(@le(w1 ?(::day_12::main::36 ::day_12::main::35 x(w10 x(w9 x(w16 x(w7 x(w6 x(w12 w3)))))))) w12) w3)))))) }

::day_12::main::35 {
  x(w24 x(w23 x(w22 x(dup171(w34 w41) x(x(w20 w40) x(dup175(w31 @add(1 w16)) w17))))))
  ::std::data::List::pop_front = fn(ref(w23 w1) w3)
  ::std::logical::Option::unwrap_or = fn(w3 fn(tup(0 tup(w25 w25)) dup179(w8 w13)))
  ::day_12::main::37 = x(x(w24 w36) x(w34 x(x(w20 w33) x(w31 x(w17 x(w8 x(0 35)))))))
  ::day_12::main::34 = x(w36 x(w1 x(w22 x(w41 x(x(w33 w40) x(w16 w13))))))
}

::day_12::main::36 { x(_ x(_ x(_ x(_ x(x(w3 w3) _))))) }

::day_12::main::37 { x(w13 x(dup187(w1 w22) x(w10 x(w8 x(w7 x(w6 x(dup193(@le(w1 ?(::day_12::main::39 ::day_12::main::38 x(w13 x(w22 x(w10 x(w8 x(w7 x(w6 x(w16 w4))))))))) w16) w4))))))) }

::day_12::main::38 {
  x(x(w64 w99) x(dup202(w68 dup202(w74 dup202(w80 dup202(w86 w97)))) x(x(w61 w96) x(dup209(@sub(1 w16) dup209(@sub(1 w25) dup209(w33 dup209(w42 w94)))) x(w58 x(w57 x(dup214(@sub(1 w14) dup214(w23 dup214(w32 dup214(@sub(1 w41) @add(1 w53))))) x(dup216(w17 dup216(w29 dup216(w36 w44))) dup218(w20 dup218(w28 dup218(w35 w43)))))))))))
  ::std::data::List::pop_front = fn(ref(w58 w1) w3)
  ::std::logical::Option::unwrap_or = fn(w3 fn(35 dup220(w18 dup220(w26 dup220(w37 dup220(w45 w48))))))
  ::std::data::List::pop_front = fn(ref(w57 w7) w9)
  ::std::logical::Option::unwrap_or = fn(w9 fn(35 dup221(w19 dup221(w27 dup221(w34 dup221(w46 w50))))))
  ::day_12::main::40 = x(x(w64 w70) x(w68 x(x(w61 w67) fn(w14 fn(w16 fn(w17 fn(w18 fn(w19 fn(w20 _)))))))))
  ::day_12::main::40 = x(x(w70 w76) x(w74 x(x(w67 w73) fn(w23 fn(w25 fn(w26 fn(w27 fn(w28 fn(w29 _)))))))))
  ::day_12::main::40 = x(x(w76 w82) x(w80 x(x(w73 w79) fn(w32 fn(w33 fn(w34 fn(w35 fn(w36 fn(w37 _)))))))))
  ::day_12::main::40 = x(x(w82 w88) x(w86 x(x(w79 w85) fn(w41 fn(w42 fn(w43 fn(w44 fn(w45 fn(w46 _)))))))))
  ::day_12::main::37 = x(x(w88 w99) x(w97 x(x(w85 w96) x(w94 x(w1 x(w7 x(w53 x(w48 w50))))))))
}

::day_12::main::39 { x(x(w10 w10) x(_ x(x(w7 w7) _))) }

::day_12::main::40 { x(w14 x(w12 x(w11 fn(w0 fn(w1 fn(dup235(@ne(35 ?(::day_12::main::43 ::day_12::main::42 x(w14 x(w12 x(w11 x(w0 x(w1 x(w21 x(w3 x(w4 x(w5 w17))))))))))) w21) fn(w3 fn(w4 fn(w5 w17))))))))) }

::day_12::main::42 { x(w19 x(w17 x(w16 x(w14 x(w13 x(dup250(dup242(w2 @ne(w5 w6)) w24) x(dup251(@ne(w2 @n32_and(w6 ?(::day_12::main::45 ::day_12::main::44 x(w19 x(w17 x(w16 x(w14 x(w13 x(w24 x(w23 x(w10 x(w21 w20)))))))))))) w23) x(w10 x(dup253(w5 w21) w20))))))))) }

::day_12::main::43 { x(x(w11 w11) x(_ x(x(w8 w8) _))) }

::day_12::main::44 {
  x(w11 x(w9 x(w8 x(w6 x(w5 x(_ x(_ x(_ x(_ w12)))))))))
  ::day_12::main::48 = x(w11 x(w9 x(w8 x(w6 x(w5 w12)))))
}

::day_12::main::45 { x(w24 x(w22 x(w21 x(w19 x(w18 x(@eq(w2 @n32_and(w8 @n32_and(w11 ?(::day_12::main::47 ::day_12::main::48 x(w24 x(w22 x(w21 x(w19 x(w18 w25))))))))) x(dup265(w2 @eq(w6 w8)) x(w15 x(dup266(w6 @ne(w15 w11)) w25))))))))) }

::day_12::main::47 { x(x(w7 w7) x(_ x(x(w4 w4) _))) }

::day_12::main::48 {
  x(x(w22 w7) x(w20 x(x(@add(w10 w14) w14) x(@add(w3 w4) x(@mul(w20 w3) _)))))
  ::day_12::Regions::get_area = fn(ref(w22 w7) fn(w4 w10))
}

::day_12::Region::Root { fn(f0 fn(f1 enum(enum(f0 enum(f1 r)) enum(_ r)))) }

::day_12::Region::Child { fn(f0 enum(_ enum(enum(f0 r) r))) }

::day_12::Regions::new {
  fn(ref(w3 w15) w12)
  ::std::data::Array::len = fn(ref(w3 w10) w12)
  ::day_12::Region::Root = fn(1 fn(0 w17))
  ::std::data::Array::push_back = fn(ref(w10 w15) fn(w17 _))
}

::day_12::Regions::find {
  fn(ref(w3 w18) fn(w7 w13))
  ::day_12::Regions::find::2 = x(x(w3 w18) x(x(w7 dup326(w14 w13)) w14))
}

::day_12::Regions::find::2 {
  x(x(w13 w19) x(x(dup336(w3 w16) w17) w15))
  ::std::data::Array::get = fn(ref(w13 w1) fn(w3 ref(enum(::day_12::Regions::find::5 enum(::day_12::Regions::find::6 x(x(w1 w19) x(x(w16 w17) x(w15 w14))))) w14)))
}

::day_12::Regions::find::5 { enum(w1 enum(w3 x(x(w10 w10) x(x(w8 w8) x(_ enum(enum(w1 enum(w3 w11)) enum(_ w11))))))) }

::day_12::Regions::find::6 {
  enum(w1 x(w10 x(x(_ w18) x(dup350(w14 w16) enum(_ enum(enum(w14 w11) w11))))))
  ::day_12::Regions::find::2 = x(w10 x(x(w1 w18) w16))
}

::day_12::Regions::get_area {
  fn(ref(w3 w15) fn(w5 w32))
  ::day_12::Regions::find = fn(ref(w3 w9) fn(w5 w12))
  ::std::data::Array::get = fn(ref(w9 w15) fn(w12 ref(dup356(enum(::day_12::Regions::get_area::4 enum(_ w32)) w29) w29)))
}

::day_12::Regions::get_area::4 { enum(w0 enum(_ w0)) }

::day_12::Regions::union_found { fn(ref(w3 w19) fn(dup375(@eq(w13 ?(::day_12::Regions::union_found::4 ::day_12::Regions::union_found::3 x(x(w3 w19) x(w17 x(w16 w15))))) w17) fn(dup376(w13 w16) w15))) }

::day_12::Regions::union_found::3 {
  x(x(w6 w8) x(dup383(w10 w1) x(_ w1)))
  ::std::data::Array::get = fn(ref(w6 w8) fn(w10 ref(enum(::day_12::Regions::union_found::7 enum(::day_12::Regions::union_found::8 x(_ w16))) w16)))
}

::day_12::Regions::union_found::4 {
  x(x(w21 w9) x(dup392(w3 w36) x(dup393(w11 w35) w30)))
  ::std::data::Array::get = fn(ref(w21 w1) fn(w3 ref(dup395(w22 w33) w34)))
  ::std::data::Array::get = fn(ref(w1 w9) fn(w11 ref(dup397(w23 w31) w32)))
  tup(w22 w23) = tup(w26 enum(::day_12::Regions::union_found::14 enum(::day_12::Regions::union_found::17 x(w36 x(w35 x(x(w33 w34) x(x(w31 w32) x(w30 w26))))))))
}

::day_12::Regions::union_found::7 { enum(w1 enum(@add(1 w12) x(_ enum(enum(w1 enum(w12 w10)) enum(_ w10))))) }

::day_12::Regions::union_found::8 { enum(w1 x(_ enum(_ enum(enum(w1 w5) w5)))) }

::day_12::Regions::union_found::12 {
  x(_ x(dup413(w4 w7) x(w5 x(w2 x(w10 x(w9 w7))))))
  ::day_12::Region::Root = fn(w10 fn(w9 w2))
  ::day_12::Region::Child = fn(w4 w5)
}

::day_12::Regions::union_found::13 {
  x(dup419(w4 w7) x(_ x(w2 x(w5 x(w10 x(w9 w7))))))
  ::day_12::Region::Root = fn(w10 fn(w9 w2))
  ::day_12::Region::Child = fn(w4 w5)
}

::day_12::Regions::union_found::14 { enum(w0 enum(w1 x(w10 x(w9 x(w8 x(w6 x(w13 enum(::day_12::Regions::union_found::15 enum(::day_12::Regions::union_found::16 x(w10 x(w9 x(w8 x(w6 x(w13 x(w0 w1))))))))))))))) }

::day_12::Regions::union_found::15 { enum(dup439(@add(w16 w17) @lt(w26 ?(::day_12::Regions::union_found::13 ::day_12::Regions::union_found::12 x(w14 x(w13 x(w32 x(w31 x(w17 x(w22 w28))))))))) enum(@add(w6 @add(1 w22)) x(w14 x(w13 x(x(_ w32) x(x(_ w31) x(w28 x(dup441(w16 w26) w6)))))))) }

::day_12::Regions::union_found::16 { enum(_ x(_ x(_ x(x(w7 w7) x(x(w5 w5) _))))) }

::day_12::Regions::union_found::17 { enum(_ x(_ x(_ x(x(w6 w6) x(x(w4 w4) _))))) }

::std::data::List::pop_front { fn(ref(tup(dup552(?(::std::data::List::pop_front::4 ::std::data::List::pop_front::3 x(x(w17 w18) x(x(w5 w16) w14))) w17) tup(w5 w6)) tup(w18 tup(w16 w6))) w14) }

::std::data::List::pop_front::3 {
  x(x(@sub(1 w1) w1) x(x(tup(w3 w4) w4) w9))
  ::std::logical::Option::Some = fn(w3 w9)
}

::std::data::List::pop_front::4 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::data::List::concat { fn(tup(@add(w12 w20) tup(w8 w13)) fn(tup(w12 tup(w13 w23)) tup(w20 tup(w8 w23)))) }

::std::data::Array::empty { tup(0 _) }

::std::data::Array::len { fn(ref(tup(dup968(w12 w9) w10) tup(w9 w10)) w12) }

::std::data::Array::get {
  fn(ref(tup(dup974(w2 w13) w5) tup(w2 w6)) fn(w10 w19))
  ::std::data::Array::get::2 = x(x(ref(w5 w6) w16) x(w10 w13))
  ::std::data::Array::Node::as_leaf = fn(w16 w19)
}

::std::data::Array::get::2 { x(w5 x(w3 dup985(@lt$(1 ?(::std::data::Array::get::4 ::std::data::Array::get::3 x(w5 x(w3 w6)))) w6))) }

::std::data::Array::get::3 {
  x(x(w13 w17) x(dup989(@rem(2 w3) @div(2 w9)) w10))
  ::std::data::Array::Node::half = fn(w13 fn(w10 fn(w3 tup(w5 w6))))
  ::std::data::Array::get::2 = x(x(w5 w17) x(w9 w6))
}

::std::data::Array::get::4 { x(x(w3 w3) _) }

::std::data::Array::push_back { fn(ref(tup(dup995(?(::std::data::Array::push_back::4 ::std::data::Array::push_back::3 x(w20 x(ref(w5 w6) x(w10 _)))) dup995(w20 @add(1 w15))) w5) tup(w15 w6)) fn(w10 _)) }

::std::data::Array::push_back::3 {
  x(w14 x(w13 x(w12 _)))
  ::std::data::Array::push_back::5 = x(x(w13 ref(w4 tup(w4 w8))) w14)
  ::std::data::Array::Node::leaf = fn(w12 w8)
}

::std::data::Array::push_back::4 {
  x(_ x(ref(_ w5) x(w8 _)))
  ::std::data::Array::Node::leaf = fn(w8 w5)
}

::std::data::Array::push_back::5 { x(w4 dup1016(@lt$(1 ?(::std::data::Array::push_back::7 ::std::data::Array::push_back::6 x(w4 w5))) w5)) }

::std::data::Array::push_back::6 {
  x(x(w10 w13) dup1020(w1 @rem(2 w3)))
  ::std::data::Array::Node::half = fn(w10 fn(w1 fn(w3 tup(w5 w6))))
  ::std::data::Array::push_back::5 = x(x(w5 w13) w6)
}

::std::data::Array::push_back::7 { x(x(w2 w2) _) }

::std::data::Array::Node::as_leaf { fn(x x) }

::std::data::Array::Node::leaf { fn(x x) }

::std::data::Array::Node::half { fn(ref(tup(w3 w5) tup(w20 w18)) fn(w9 fn(?(::std::data::Array::Node::half::4 ::std::data::Array::Node::half::3 x(x(w3 w20) x(x(w5 w18) x(w9 w15)))) w15))) }

::std::data::Array::Node::half::3 { x(x(w11 w11) x(x(w9 w1) x(@div(2 w4) tup(ref(w9 w1) w4)))) }

::std::data::Array::Node::half::4 { x(x(w12 w1) x(x(w10 w10) x(@add(1 @div(2 w5)) tup(ref(w12 w1) w5)))) }

::std::logical::Option::Some { fn(f0 enum(enum(f0 r) enum(_ r))) }

::std::logical::Option::None { enum(_ enum(r r)) }

::std::logical::Option::unwrap_or { fn(enum(::std::logical::Option::unwrap_or::5 enum(::std::logical::Option::unwrap_or::6 x(w3 w9))) fn(w3 w9)) }

::std::logical::Option::unwrap_or::5 { enum(w0 x(_ w0)) }

::std::logical::Option::unwrap_or::6 { x(w1 w1) }

::std::numeric::N32::to_string { fn(dup2363(?(::std::numeric::N32::to_string::4 ::std::numeric::N32::to_string::3 x(w8 w7)) w8) w7) }

::std::numeric::N32::to_string::3 {
  x(w6 w9)
  ::std::numeric::N32::to_string::5 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::4 { x(_ tup(1 tup(tup(48 w3) w3))) }

::std::numeric::N32::to_string::5 { x(dup2373(?(::std::numeric::N32::to_string::7 ::std::numeric::N32::to_string::6 x(w6 w2)) w6) w2) }

::std::numeric::N32::to_string::6 {
  x(dup2376(@rem(10 w1) @div(10 w8)) x(w11 w15))
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::to_string::5 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::7 { x(_ x(w1 w1)) }

::std::IO::println {
  fn(ref(w3 w14) fn(w5 _))
  ::std::IO::print = fn(ref(w3 w9) fn(w5 _))
  ::std::IO::print_char = fn(ref(w9 w14) fn(10 _))
}

::std::IO::print {
  fn(ref(w3 w17) fn(tup(w9 tup(w10 _)) _))
  ::std::IO::print::2 = x(x(w3 w17) x(w9 w10))
}

::std::IO::print::2 { x(w4 x(dup3344(?(::std::IO::print::4 ::std::IO::print::3 x(w4 x(w6 w1))) w6) w1)) }

::std::IO::print::3 {
  x(x(w17 w21) x(@sub(1 w1) tup(w4 w5)))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::2 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::4 { x(x(w3 w3) _) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::IO::read_line {
  fn(ref(w3 w18) w15)
  ::std::IO::read_byte = fn(ref(w3 w8) fn(0 dup3389(@ne(0 ?(::std::IO::read_line::4 ::std::IO::read_line::3 x(x(w8 w18) x(w16 w15)))) w16)))
}

::std::IO::read_line::3 {
  x(w5 x(dup3396(@eq(10 ?(::std::IO::read_line::7 ::std::IO::read_line::6 x(w5 x(w9 w8)))) w9) w1))
  ::std::logical::Option::Some = fn(w8 w1)
}

::std::IO::read_line::4 { x(x(w3 w3) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::6 { x(x(w4 w4) x(_ tup(0 tup(w5 w5)))) }

::std::IO::read_line::7 {
  x(w10 x(w8 w14))
  ::std::IO::read_line::8 = x(w10 x(x(tup(1 tup(tup(w8 w11) w11)) w14) _))
}

::std::IO::read_line::8 {
  x(x(w10 w18) w8)
  ::std::IO::read_byte = fn(ref(w10 w1) fn(10 dup3413(@ne(10 ?(::std::IO::read_line::11 ::std::IO::read_line::10 x(x(w1 w18) x(w16 w8)))) w16)))
}

::std::IO::read_line::10 {
  x(w9 x(w7 x(x(w6 w19) w17)))
  ::std::data::List::concat = fn(w6 fn(tup(1 tup(tup(w7 w10) w10)) w3))
  ::std::IO::read_line::8 = x(w9 x(x(w3 w19) w17))
}

::std::IO::read_line::11 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

::std::IO::read_byte { fn(ref(dup(io0 @io_read_byte(default dup(byte @seq$(io0 io1)))) io1) fn(default byte)) }

