
::main { ::day_25::main }

::day_25::main {
  fn(ref(w3 w13) _)
  ::day_25::main::2 = x(x(w3 w27) x(x(tup(0 tup(w20 w20)) w25) x(tup(0 tup(w21 w21)) w23)))
  ::day_25::main::26 = x(w25 x(w23 x(0 w29)))
  ::std::n32::N32::to_string = fn(w29 w17)
  ::std::list::List::concat = fn(tup(8 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w32)))))))) w32)) fn(w17 w18))
  ::std::io::IO::println = fn(ref(w27 w13) fn(w18 _))
}

::day_25::main::2 {
  x(x(w10 w16) w8)
  ::std::io::IO::read_line = fn(ref(w10 w1) enum(::day_25::main::5 enum(::day_25::main::6 x(x(w1 w16) w8))))
}

::day_25::main::5 {
  enum(w0 x(x(w7 w39) x(x(w5 w37) x(w3 w35))))
  ::std::list::List::get = fn(ref(w0 _) fn(0 ref(dup21(dup32(@eq(35 ?(::day_25::main::25 ::day_25::main::24 x(x(w5 w33) x(x(w3 w31) x(w23 _))))) w24) w13) w13)))
  ::std::list::List::new = fn(5 fn(1 w19))
  ::day_25::main::7 = x(x(w7 w26) x(w24 x(w19 w23)))
  ::day_25::main::2 = x(x(w26 w39) x(x(w33 w37) x(w31 w35)))
}

::day_25::main::6 { x(x(w5 w5) x(x(w3 w3) x(w1 w1))) }

::day_25::main::7 {
  x(x(w9 w14) w7)
  ::std::io::IO::read_line = fn(ref(w9 w1) enum(::day_25::main::10 enum(::day_25::main::11 x(x(w1 w14) w7))))
}

::day_25::main::10 {
  enum(w0 x(w6 x(w4 w3)))
  ::std::list::List::len = fn(ref(w0 w8) ?(::day_25::main::13 ::day_25::main::12 x(w6 x(w4 x(w3 w8)))))
}

::day_25::main::11 {
  x(x(w4 w4) x(_ x(w1 w1)))
  _ = _
}

::day_25::main::12 {
  x(w6 x(dup60(w11 w14) x(x(w3 w13) w1)))
  ::day_25::main::15 = x(w11 x(x(w3 w10) x(w1 0)))
  ::day_25::main::7 = x(w6 x(w14 x(w10 w13)))
}

::day_25::main::13 {
  x(x(w5 w5) x(_ x(x(w2 w2) _)))
  _ = _
}

::day_25::main::15 {
  x(w9 x(w8 x(w6 w5)))
  ::std::list::List::pop_front = fn(ref(w6 w1) enum(::day_25::main::18 enum(::day_25::main::19 x(w9 x(w8 x(w1 w5))))))
}

::day_25::main::18 {
  enum(@eq(w11 ?(::day_25::main::22 ::day_25::main::21 x(x(w5 w16) x(w14 _)))) x(dup75(w11 w21) x(x(w5 w20) x(w3 dup80(w14 @add(1 w9))))))
  ::day_25::main::15 = x(w21 x(x(w16 w20) x(w3 w9)))
}

::day_25::main::19 { x(_ x(x(w3 w3) _)) }

::day_25::main::21 {
  x(x(w10 w1) x(w8 _))
  ::std::list::List::get = fn(ref(w10 w1) fn(w8 ref(@add(1 w6) w6)))
}

::day_25::main::22 { x(x(w3 w3) _) }

::day_25::main::24 {
  x(x(w10 w1) x(x(w8 w8) x(w6 _)))
  ::std::list::List::push_back = fn(ref(w10 w1) fn(w6 _))
}

::day_25::main::25 {
  x(x(w10 w10) x(x(w8 w1) x(w6 _)))
  ::std::list::List::push_back = fn(ref(w8 w1) fn(w6 _))
}

::day_25::main::26 {
  x(w8 x(w7 w6))
  ::std::list::List::pop_front = fn(ref(w7 w1) enum(::day_25::main::29 enum(::day_25::main::30 x(w8 x(w1 w6)))))
}

::day_25::main::29 {
  enum(w0 x(dup108(w7 w20) x(w4 x(@add(w15 w12) w18))))
  ::std::list::List::into_iter = fn(w7 w8)
  ::day_25::main::31 = x(w0 x(x(0 w15) w8))
  ::day_25::main::26 = x(w20 x(w4 x(w12 w18)))
}

::day_25::main::30 { x(_ x(_ x(w1 w1))) }

::day_25::main::31 {
  x(w8 x(w7 w5))
  ::std::list::List::IntoIter::next = fn(ref(w5 w1) enum(::day_25::main::34 enum(::day_25::main::35 x(w8 x(w7 w1)))))
}

::day_25::main::34 {
  enum(w0 x(dup125(w8 w16) x(x(w4 w15) w2)))
  ::day_25::fits = fn(w0 fn(w8 ?(::day_25::main::38 ::day_25::main::37 x(x(w4 w12) _))))
  ::day_25::main::31 = x(w16 x(x(w12 w15) w2))
}

::day_25::main::35 { x(_ x(x(w2 w2) _)) }

::day_25::main::37 { x(x(@add(1 w1) w1) _) }

::day_25::main::38 { x(x(w2 w2) _) }

::day_25::fits {
  fn(w2 fn(w3 w6))
  ::day_25::fits::2 = x(w2 x(w3 w6))
}

::day_25::fits::2 {
  x(w7 w6)
  ::std::list::List::pop_front = fn(ref(w7 w1) enum(::day_25::fits::5 enum(::day_25::fits::6 x(w1 w6))))
}

::day_25::fits::5 {
  enum(w0 x(w4 x(w3 w10)))
  ::std::list::List::pop_front = fn(ref(w3 w6) enum(::day_25::fits::9 enum(::day_25::fits::10 x(w4 x(w6 x(w0 w10))))))
}

::day_25::fits::6 { x(_ x(_ 1)) }

::day_25::fits::9 { enum(w0 x(w5 x(w4 x(@lt$(w0 ?(::day_25::fits::2 ::day_25::fits::13 x(w5 x(w4 w10)))) w10)))) }

::day_25::fits::10 { x(_ x(_ x(_ 1))) }

::day_25::fits::13 { x(_ x(_ 0)) }

::std::io::IO::println {
  fn(ref(w3 w14) fn(w5 _))
  ::std::io::IO::print = fn(ref(w3 w9) fn(w5 _))
  ::std::io::IO::print_char = fn(ref(w9 w14) fn(10 _))
}

::std::io::IO::print {
  fn(ref(w3 w15) fn(tup(w9 tup(w10 _)) _))
  ::std::io::IO::print::2 = x(x(w3 w15) x(w9 w10))
}

::std::io::IO::print::2 { x(w4 x(dup638(?(::std::io::IO::print::4 ::std::io::IO::print::3 x(w4 x(w6 w1))) w6) w1)) }

::std::io::IO::print::3 {
  x(x(w17 w21) x(@sub(1 w1) tup(w4 w5)))
  ::std::io::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::io::IO::print::2 = x(x(w10 w21) x(w1 w5))
}

::std::io::IO::print::4 { x(x(w3 w3) _) }

::std::io::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::io::IO::read_line {
  fn(ref(w3 w18) w15)
  ::std::io::IO::read_byte = fn(ref(w3 w8) fn(0 dup683(@ne(0 ?(::std::io::IO::read_line::4 ::std::io::IO::read_line::3 x(x(w8 w18) x(w16 w15)))) w16)))
}

::std::io::IO::read_line::3 {
  x(w5 x(dup690(@eq(10 ?(::std::io::IO::read_line::7 ::std::io::IO::read_line::6 x(w5 x(w9 w8)))) w9) w1))
  ::std::option::Option::Some = fn(w8 w1)
}

::std::io::IO::read_line::4 { x(x(w3 w3) x(_ ::std::option::Option::None)) }

::std::io::IO::read_line::6 { x(x(w4 w4) x(_ tup(0 tup(w5 w5)))) }

::std::io::IO::read_line::7 {
  x(w8 x(w6 w12))
  ::std::io::IO::read_line::8 = x(w8 x(x(tup(1 tup(tup(w6 w9) w9)) w12) _))
}

::std::io::IO::read_line::8 {
  x(x(w10 w18) w8)
  ::std::io::IO::read_byte = fn(ref(w10 w1) fn(10 dup707(@ne(10 ?(::std::io::IO::read_line::11 ::std::io::IO::read_line::10 x(x(w1 w18) x(w16 w8)))) w16)))
}

::std::io::IO::read_line::10 {
  x(w9 x(w7 x(x(w6 w19) w17)))
  ::std::list::List::concat = fn(w6 fn(tup(1 tup(tup(w7 w10) w10)) w3))
  ::std::io::IO::read_line::8 = x(w9 x(x(w3 w19) w17))
}

::std::io::IO::read_line::11 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

::std::io::IO::read_byte { fn(ref(dup(io0 @io_read_byte(default dup(byte @seq$(io0 io1)))) io1) fn(default byte)) }

::std::list::List::len { fn(ref(tup(dup744(w13 w9) w10) tup(w9 w10)) w13) }

::std::list::List::new {
  fn(w2 fn(w3 w11))
  ::std::list::List::new::2 = x(w2 x(w3 x(tup(0 tup(w9 w9)) w11)))
}

::std::list::List::new::2 { x(dup757(@lt$(0 ?(::std::list::List::new::4 ::std::list::List::new::3 x(w9 w4))) w9) w4) }

::std::list::List::new::3 {
  x(@sub(1 w6) x(dup763(w3 w13) x(w8 w12)))
  ::std::list::List::push_back = fn(ref(w8 w1) fn(w3 _))
  ::std::list::List::new::2 = x(w6 x(w13 x(w1 w12)))
}

::std::list::List::new::4 { x(_ x(_ x(w1 w1))) }

::std::list::List::get {
  fn(ref(tup(w3 tup(w5 w7)) tup(w3 tup(w6 w7))) fn(w11 ref(w16 w17)))
  ::std::list::List::get::2 = x(x(ref(w5 w6) ref(tup(w16 w18) tup(w17 w18))) w11)
}

::std::list::List::get::2 { x(w3 dup778(?(::std::list::List::get::4 ::std::list::List::get::3 x(w3 w4)) w4)) }

::std::list::List::get::3 {
  x(x(ref(tup(w1 w3) tup(w1 w4)) w17) @sub(1 w11))
  ::std::list::List::get::2 = x(x(ref(w3 w4) w17) w11)
}

::std::list::List::get::4 { x(x(w2 w2) _) }

::std::list::List::pop_front { fn(ref(tup(dup841(?(::std::list::List::pop_front::4 ::std::list::List::pop_front::3 x(x(w17 w18) x(x(w5 w16) w14))) w17) tup(w5 w6)) tup(w18 tup(w16 w6))) w14) }

::std::list::List::pop_front::3 {
  x(x(@sub(1 w1) w1) x(x(tup(w3 w4) w4) w9))
  ::std::option::Option::Some = fn(w3 w9)
}

::std::list::List::pop_front::4 { x(x(w4 w4) x(x(w2 w2) ::std::option::Option::None)) }

::std::list::List::concat { fn(tup(@add(w12 w20) tup(w8 w13)) fn(tup(w12 tup(w13 w23)) tup(w20 tup(w8 w23)))) }

::std::list::List::push_back {
  fn(ref(w3 w11) fn(w5 _))
  ::std::list::List::concat = fn(w3 fn(tup(1 tup(tup(w5 w12) w12)) w11))
}

::std::list::List::into_iter { fn(tup(w2 tup(w3 _)) tup(w2 w3)) }

::std::list::List::IntoIter::next { fn(ref(tup(dup1037(?(::std::list::List::IntoIter::next::4 ::std::list::List::IntoIter::next::3 x(x(w16 w17) x(x(w5 w15) w13))) w16) w5) tup(w17 w15)) w13) }

::std::list::List::IntoIter::next::3 {
  x(x(@sub(1 w1) w1) x(x(tup(w3 w4) w4) w9))
  ::std::option::Option::Some = fn(w3 w9)
}

::std::list::List::IntoIter::next::4 { x(x(w4 w4) x(x(w2 w2) ::std::option::Option::None)) }

::std::n32::N32::to_string { fn(dup2331(?(::std::n32::N32::to_string::4 ::std::n32::N32::to_string::3 x(w8 w7)) w8) w7) }

::std::n32::N32::to_string::3 {
  x(w4 w7)
  ::std::n32::N32::to_string::5 = x(w4 x(tup(0 tup(w5 w5)) w7))
}

::std::n32::N32::to_string::4 { x(_ tup(1 tup(tup(48 w3) w3))) }

::std::n32::N32::to_string::5 { x(dup2341(?(::std::n32::N32::to_string::7 ::std::n32::N32::to_string::6 x(w6 w2)) w6) w2) }

::std::n32::N32::to_string::6 {
  x(dup2344(@rem(10 w1) @div(10 w8)) x(w11 w15))
  48 = @add(w1 w2)
  ::std::list::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::n32::N32::to_string::5 = x(w8 x(w5 w15))
}

::std::n32::N32::to_string::7 { x(_ x(w1 w1)) }

::std::option::Option::Some { fn(f0 enum(enum(f0 r) enum(_ r))) }

::std::option::Option::None { enum(_ enum(r r)) }

