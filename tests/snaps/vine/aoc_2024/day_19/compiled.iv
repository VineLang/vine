
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::main { ::day_19::main }

::day_19::main {
  fn(ref(w1 w27) _)
  ::std::IO::read_line = fn(ref(w1 w6) w8)
  ::std::logical::Option::unwrap = fn(w8 w9)
  ::std::unicode::String::split = fn(w9 fn(tup(2 tup(tup(44 tup(32 w36)) w36)) w11))
  ::std::IO::read_line = fn(ref(w6 w14) _)
  ::day_19::main::1 = x(x(w14 w43) x(w11 x(x(0 w40) x(0 w38))))
  ::std::numeric::N32::to_string::to_string = fn(w40 tup(@add(8 w44) tup(w45 w46)))
  ::std::IO::println = fn(ref(w43 w20) fn(tup(w44 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(49 tup(58 tup(32 w45)))))))) w46)) _))
  ::std::numeric::N64::to_string::to_string = fn(w38 tup(@add(8 w49) tup(w50 w51)))
  ::std::IO::println = fn(ref(w20 w27) fn(tup(w49 tup(tup(80 tup(97 tup(114 tup(116 tup(32 tup(50 tup(58 tup(32 w50)))))))) w51)) _))
}

::day_19::main::1 { x(x(dup(n0 @io_read_byte(0 dup(dup2313(@ne(0 ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(n1 n2) x(n3 enum(::day_19::main::4 enum(::day_19::main::5 x(x(n2 n4) n5))))))) n3) @seq$(n0 n1)))) n4) n5) }

::day_19::main::4 { enum(tup(dup1897(n0 ?(::day_19::match_counts::3 ::day_19::match_counts::2 x(tup(n0 n1) x(n2 tup(dup630(?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(n3 _) x(ref(n4 _) enum(::std::logical::Option::unwrap::3 enum(_ dup33(tup(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n5 x(0 ?(::day_19::main::8 ::day_19::main::7 x(x(n6 n7) x(x(n8 n9) x(n10 _)))))))) n5) n10)))))) n3) n4))))) n1) x(x(dup(n11 @io_read_byte(0 dup(dup2313(@ne(0 ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(n12 n13) x(n14 enum(::day_19::main::4 enum(::day_19::main::5 x(x(n13 n15) x(n16 x(x(n7 n17) x(n9 n18)))))))))) n14) @seq$(n11 n12)))) n15) x(dup25(n2 n16) x(x(n6 n17) x(n8 n18))))) }

::day_19::main::5 { x(x(n0 n0) x(_ x(x(n1 n1) x(n2 n2)))) }

::day_19::main::7 { x(x(n0 n0) x(x(n1 n1) _)) }

::day_19::main::8 { x(x(@add(1 n0) n0) x(x(tup(dup(@add(n1 n2) @n32_add_high(n3 n4)) @add(n5 @add(n4 n6))) tup(n2 n6)) x(tup(dup(n1 n3) n5) _))) }

::std::numeric::N32::to_string::to_string { fn(dup47(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6)) w7) w6) }

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w9)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N32::to_string::to_string::4 { x(dup56(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup59(@rem(10 @add$(48 n0)) @div(10 dup56(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::numeric::N64::to_string::to_string {
  fn(dup65(w5 w8) w7)
  ::std::numeric::N64::eq = fn(w5 fn(0 ?(::std::numeric::N64::to_string::to_string::3 ::std::numeric::N64::to_string::to_string::2 x(w8 w7))))
}

::std::numeric::N64::to_string::to_string::2 { x(_ tup(1 tup(tup(48 w5) w5))) }

::std::numeric::N64::to_string::to_string::3 {
  x(w4 w9)
  ::std::numeric::N64::to_string::to_string::4 = x(w4 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N64::to_string::to_string::4 { x(dup74(tup(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n0 x(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(n1 n2)))))) n0) n1) n2) }

::std::numeric::N64::to_string::to_string::5 { x(_ x(n0 n0)) }

::std::numeric::N64::to_string::to_string::6 { x(tup(n0 dup1516(@div(10 n1) @rem(10 dup1517(@lt$(10 ?(::std::numeric::N64::div_rem_n32::3 ::std::numeric::N64::div_rem_n32::2 x(x(n2 dup1537(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(x(n0 dup1515(@div(10 n3) @rem(10 @add$(48 n4)))) x(n5 x(10 x(0 @add(n3 dup74(@eq(0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n6 x(0 ?(::std::numeric::N64::to_string::to_string::6 ::std::numeric::N64::to_string::to_string::5 x(tup(n7 n8) x(tup(n9 tup(tup(n4 n10) n11)) n12))))))) n7))))))) n5)) x(10 x(x(n1 dup74(n6 n8)) _))))) n2)))) x(tup(@add$(1 n9) tup(n10 n11)) n12)) }

::day_19::match_counts::2 { x(dup91(tup(dup226(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n0 dup1897(n1 ?(::day_19::match_counts::3 ::day_19::match_counts::2 x(tup(n1 tup(n2 n3)) x(n4 n5))))) x(x(n6 n2) _))) n0) tup(n6 n3)) n7) x(dup92(n4 tup(dup226(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n8 n9) x(x(n10 n11) enum(::day_19::match_counts::7 enum(::day_19::match_counts::8 x(n7 x(tup(n9 tup(n11 n12)) x(x(n5 tup(dup569(?(::std::data::Array::push_back::3 ::std::data::Array::push_back::2 x(n13 x(ref(n14 n15) x(n16 _)))) dup569(n13 @add(1 n17))) n14)) x(0 n16))))))))) n8) tup(n10 n12))) tup(n17 n15))) }

::day_19::match_counts::3 { x(_ x(_ tup(1 ::std::numeric::N64::one))) }

::day_19::match_counts::7 { enum(tup(dup1897(n0 n1) n2) x(dup110(tup(dup1897(n3 @lt(n1 ?(::std::unicode::String::strip_prefix::3 ::std::unicode::String::strip_prefix::2 x(tup(n3 n4) x(x(tup(n0 n2) _) enum(::day_19::match_counts::12 enum(::day_19::match_counts::13 x(x(n5 n6) x(x(n7 n8) _))))))))) n4) n9) x(tup(dup226(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n10 n11) x(x(n12 n13) enum(::day_19::match_counts::7 enum(::day_19::match_counts::8 x(n9 x(tup(n11 tup(n13 n14)) x(x(n6 n15) x(n8 n16))))))))) n10) tup(n12 n14)) x(x(n5 n15) x(n7 n16))))) }

::day_19::match_counts::8 { x(_ x(_ x(x(n0 n0) x(n1 n1)))) }

::day_19::match_counts::12 { enum(tup(dup1897(_ n0) _) x(x(tup(dup549(n1 dup559(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n2 n3) ref(dup124(tup(dup(n4 n5) n6) n7) n7)) x(n0 n8)))) n8)) n2) tup(n1 n3)) x(x(tup(dup(@add(n4 n9) @n32_add_high(n5 n10)) @add(n6 @add(n10 n11))) tup(n9 n11)) _))) }

::day_19::match_counts::13 { enum(_ x(x(n0 n0) x(x(n1 n1) _))) }

::std::data::List::pop_front::2 { x(x(@sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::pop_front::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::Iter::next::2 { x(x(@sub(1 n0) n0) x(x(ref(tup(n1 n2) tup(n3 n4)) ref(n2 n4)) enum(enum(ref(n1 n3) n5) enum(_ n5)))) }

::std::data::List::Iter::next::3 { x(x(n0 n0) x(x(ref(n1 n1) _) ::std::logical::Option::None)) }

::std::data::Array::get::2 { x(x(ref(tup(n0 n1) tup(n2 n3)) n4) x(dup563(@rem(2 ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n5 tup(n6 dup559(@lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(n6 n4) x(n7 n8)))) n8))))))) @div(2 n7)) n5)) }

::std::data::Array::get::3 { x(x(n0 n0) _) }

::std::data::Array::push_back::2 { x(dup589(@lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(x(n0 ref(n1 tup(n1 n2))) n3))) n3) x(n0 x(n2 _))) }

::std::data::Array::push_back::3 { x(_ x(ref(_ n0) x(n0 _))) }

::std::data::Array::push_back::5 { x(x(ref(tup(n0 n1) tup(n2 n3)) n4) dup593(n5 @rem(2 ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n5 tup(n6 dup589(@lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(x(n6 n4) n7))) n7))))))))) }

::std::data::Array::push_back::6 { x(x(n0 n0) _) }

::std::data::Array::pop_back::2 { x(x(dup635(@eq(1 ?(::std::data::Array::pop_back::5 ::std::data::Array::pop_back::4 x(x(n0 n1) n2))) n0) n1) n2) }

::std::data::Array::pop_back::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::data::Array::pop_back::4 { x(x(_ 0) x(ref(n0 _) enum(enum(n0 n1) enum(_ n1)))) }

::std::data::Array::pop_back::5 { x(x(dup646(dup652(@sub(1 @rem(2 dup654(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n1) x(x(n2 n3) x(n4 tup(n5 dup653(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n5 x(n6 x(n7 x(x(tup(n1 n3) n8) n9)))))) n6)))))) n7))) n4) @sub(1 n10)) n10) x(ref(tup(n0 n2) n8) n9)) }

::std::data::Array::pop_back::8 { x(ref(n0 _) x(_ x(?(::std::data::Array::pop_back::12 ::std::data::Array::pop_back::11 x(n1 x(n2 n3))) x(x(tup(n1 n2) n3) enum(enum(n0 n4) enum(_ n4)))))) }

::std::data::Array::pop_back::9 { x(ref(tup(n0 n1) n2) x(dup652(@sub(1 @rem(2 dup654(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n3) x(x(n1 n4) x(n5 tup(n6 dup653(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n6 x(n7 x(n8 x(x(tup(n3 n4) n2) n9)))))) n7)))))) n8))) n5) x(_ x(x(n10 n10) n9)))) }

::std::data::Array::pop_back::11 { x(n0 x(_ n0)) }

::std::data::Array::pop_back::12 { x(_ x(n0 n0)) }

::std::data::Array::Node::half::2 { x(x(n0 n0) x(x(n1 n2) x(@div(2 n3) tup(ref(n1 n2) n3)))) }

::std::data::Array::Node::half::3 { x(x(n0 n1) x(x(n2 n2) x(@add(1 @div(2 n3)) tup(ref(n0 n1) n3)))) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::numeric::N64::one { tup(1 0) }

::std::numeric::N64::div_rem_n32::2 { x(x(dup1529(@div(n0 n1) @rem(n2 n3)) n3) x(dup1530(n0 n2) x(x(_ n1) _))) }

::std::numeric::N64::div_rem_n32::3 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

::std::numeric::N64::div_rem_n32::5 { x(x(dup(@sub(n0 n1) @lt(n2 n3)) n4) x(dup1544(n5 @sub(n6 @sub(n3 dup1537(?(::std::numeric::N64::div_rem_n32::6 ::std::numeric::N64::div_rem_n32::5 x(x(n1 n4) x(n7 x(n8 x(n9 n10))))) n7)))) x(dup1546(@div$(4294967295 @mul(n5 dup1550(n11 dup(@mul(n12 dup(n0 n2)) @n32_mul_high(n13 n6))))) dup1546(dup(n12 n13) n8)) x(@add(n11 n9) n10)))) }

::std::numeric::N64::div_rem_n32::6 { x(x(n0 n0) x(_ x(_ x(n1 n1)))) }

::std::numeric::N64::eq { fn(tup(@eq(n0 ?(::std::numeric::N64::eq::3 ::std::numeric::N64::eq::2 x(n1 x(n2 n3)))) n1) fn(tup(n0 n2) n3)) }

::std::numeric::N64::eq::2 { x(@eq(n0 ?(0 1 n1)) x(n0 n1)) }

::std::numeric::N64::eq::3 { x(_ x(_ 0)) }

::std::unicode::String::split {
  fn(w0 fn(w1 w9))
  ::std::unicode::String::split::1 = x(w0 x(w1 x(tup(0 tup(w8 w8)) w9)))
}

::std::unicode::String::split::1 { x(tup(dup1897(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup1906(tup(dup1897(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::5 { enum(tup(dup1897(n0 @le$(n1 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n2 n3) x(tup(0 tup(n4 n4)) x(tup(n0 n5) tup(n6 enum(::std::unicode::String::split::5 enum(::std::unicode::String::split::6 x(n7 x(tup(n8 tup(n9 n10)) n11))))))))))) n5) x(dup1906(tup(dup1897(n2 n1) n3) n7) x(tup(@add(1 n8) tup(n9 tup(n6 n10))) n11))) }

::std::unicode::String::split::6 { x(_ x(n0 n0)) }

::std::unicode::String::split_once::2 { x(tup(dup374(n0 dup380(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n1 n2) x(x(ref(n3 n4) n5) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(tup(n0 tup(n4 n6)) x(n7 x(tup(n8 tup(n9 n10)) x(tup(n2 n5) x(tup(n11 ref(n12 n9)) n13)))))))))) n1)) tup(n3 n6)) x(n7 x(tup(dup374(n8 n11) tup(n12 n10)) n13))) }

::std::unicode::String::split_once::3 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::5 { x(n0 x(n1 x(n2 x(tup(dup380(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n3 n4) x(x(n5 n6) enum(::std::unicode::String::split_once::8 enum(::std::unicode::String::split_once::9 x(n0 x(n1 x(n2 x(tup(n4 n6) n7))))))))) n3) n5) n7)))) }

::std::unicode::String::split_once::8 { enum(ref(dup2020(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(tup(dup380(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n6 n7) x(x(n8 n9) enum(::std::unicode::String::split_once::12 enum(::std::unicode::String::split_once::13 x(n2 x(n3 x(n4 x(n5 x(tup(n7 n9) x(n1 n10))))))))))) n6) n8) n10)))))) }

::std::unicode::String::split_once::9 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4)))))))) }

::std::unicode::String::split_once::12 { enum(ref(dup2034(n0 n1) n0) x(n2 x(n3 x(n4 x(n5 x(n6 x(@ne(n1 ?(::std::unicode::String::split_once::5 ::std::unicode::String::split_once::16 x(n2 x(n3 x(n4 x(n5 x(n6 n7))))))) n7))))))) }

::std::unicode::String::split_once::13 { x(_ x(n0 x(tup(_ tup(_ n1)) x(_ x(tup(n2 ref(n3 _)) x(_ tup(n0 enum(enum(tup(n2 tup(n3 n1)) n4) enum(_ n4))))))))) }

::std::unicode::String::split_once::16 { x(n0 x(n1 x(tup(dup226(?(::std::data::List::pop_front::3 ::std::data::List::pop_front::2 x(x(n2 n3) x(x(n4 n5) enum(::std::unicode::String::split_once::21 enum(::std::unicode::String::split_once::22 x(n0 x(n1 x(tup(n3 tup(n5 n6)) n7)))))))) n2) tup(n4 n6)) x(tup(_ ref(n8 n8)) x(tup(_ ref(n9 n9)) n7))))) }

::std::unicode::String::split_once::21 { enum(n0 x(tup(dup1897(n1 n2) n3) x(tup(@add(1 n4) tup(n5 tup(n0 n6))) x(tup(dup1897(n7 @le$(n2 ?(::std::unicode::String::split_once::3 ::std::unicode::String::split_once::2 x(tup(n1 n3) x(tup(n4 tup(n5 n6)) x(tup(n7 n8) n9)))))) n8) n9)))) }

::std::unicode::String::split_once::22 { x(_ ::std::unicode::String::split_once::23) }

::std::unicode::String::split_once::23 { x(tup(@add(n0 n1) tup(n2 n3)) x(tup(n0 tup(n3 n4)) tup(tup(n1 tup(n2 n4)) ::std::logical::Option::None))) }

::std::unicode::String::strip_prefix::2 { x(_ x(x(dup2085(n0 n1) n0) enum(_ enum(enum(n1 n2) n2)))) }

::std::unicode::String::strip_prefix::3 { x(tup(dup374(n0 n1) tup(n2 n3)) x(x(tup(dup374(n4 dup380(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n5 n6) x(x(ref(n7 n8) n9) enum(::std::unicode::String::strip_prefix::7 enum(::std::unicode::String::strip_prefix::8 x(tup(n0 tup(n10 n3)) x(tup(n1 ref(n2 n10)) x(tup(n6 n9) n11)))))))) n5)) tup(n7 n12)) tup(n4 tup(n8 n12))) n11)) }

::std::unicode::String::strip_prefix::4 { x(n0 x(n1 x(tup(dup380(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n2 n3) x(x(n4 n5) enum(::std::unicode::String::strip_prefix::7 enum(::std::unicode::String::strip_prefix::8 x(n0 x(n1 x(tup(n3 n5) n6)))))))) n2) n4) n6))) }

::std::unicode::String::strip_prefix::7 { enum(ref(dup2104(n0 @ne(n1 ?(::std::unicode::String::strip_prefix::4 ::std::unicode::String::strip_prefix::10 x(n2 x(tup(n3 n4) n5))))) n0) x(n2 x(tup(dup380(?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(n6 n3) x(x(n7 n4) enum(::std::logical::Option::unwrap::3 enum(_ ref(dup2105(n8 n1) n8)))))) n6) n7) n5))) }

::std::unicode::String::strip_prefix::8 { x(tup(_ tup(_ n0)) x(tup(n1 ref(n2 _)) x(_ enum(enum(tup(n1 tup(n2 n0)) n3) enum(_ n3))))) }

::std::unicode::String::strip_prefix::10 { x(n0 x(tup(_ ref(n1 n1)) x(tup(_ ref(n2 n2)) enum(_ enum(enum(n0 n3) n3))))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2270(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2270(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

::std::IO::read_line { fn(ref(dup(n0 @io_read_byte(0 dup(dup2313(@ne(0 ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(n1 n2) x(n3 n4)))) n3) @seq$(n0 n1)))) n2) n4) }

::std::IO::read_line::2 { x(n0 x(dup2319(@eq(10 ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(n0 x(n1 n2)))) n1) enum(enum(n2 n3) enum(_ n3)))) }

::std::IO::read_line::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 { x(x(n0 n0) x(_ tup(0 tup(n1 n1)))) }

::std::IO::read_line::6 { x(x(dup(n0 @io_read_byte(10 dup(dup2336(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(1 tup(tup(n4 n5) n5)) n6) _))))) n3) @seq$(n0 n1)))) n2) x(n4 n6)) }

::std::IO::read_line::9 { x(x(dup(n0 @io_read_byte(10 dup(dup2336(@ne(10 ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(n1 n2) x(n3 x(x(tup(n4 tup(n5 n6)) n7) n8))))) n3) @seq$(n0 n1)))) n2) x(n9 x(x(tup(@add(1 n4) tup(n5 tup(n9 n6))) n7) n8))) }

::std::IO::read_line::10 { x(x(n0 n0) x(_ x(x(n1 n1) _))) }

