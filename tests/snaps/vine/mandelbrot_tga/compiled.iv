
::main { ::mandelbrot_tga::main }

::mandelbrot_tga::max_iter { 64 }

::mandelbrot_tga::width { 1024 }

::mandelbrot_tga::height { 1024 }

::mandelbrot_tga::scale { +2.6 }

::mandelbrot_tga::center {
  tup(n0 +0.0)
  0 = @sub(+0.8 n0)
}

::mandelbrot_tga::main {
  fn(n1 _)
  ::std::io::print_bytes = fn(ref(n1 n10) fn(tup(18 fn(n4 tup(0 tup(0 tup(3 tup(0 tup(0 tup(0 tup(0 tup(0 tup(0 tup(0 tup(0 tup(0 tup(::mandelbrot_tga::width tup(n5 tup(::mandelbrot_tga::height tup(n6 tup(8 tup(32 n4)))))))))))))))))))) _))
  ::mandelbrot_tga::width = @u32_shr(8 n5)
  ::mandelbrot_tga::height = @u32_shr(8 n6)
  x(n10 0) = ::mandelbrot_tga::main::1
}

::mandelbrot_tga::main::1 { x(n5 dup(@lt(::mandelbrot_tga::height ?(::mandelbrot_tga::main::6 ::mandelbrot_tga::main::2 x(n5 n6))) n6)) }

::mandelbrot_tga::main::2 {
  x(n6 dup(n8 @add(1 n11)))
  x(n6 x(n10 x(n8 0))) = ::mandelbrot_tga::main::3
  x(n10 n11) = ::mandelbrot_tga::main::1
}

::mandelbrot_tga::main::3 { x(n7 x(n4 x(n9 dup(@lt(::mandelbrot_tga::width ?(::mandelbrot_tga::main::5 ::mandelbrot_tga::main::4 x(n7 x(n4 x(n9 n10))))) n10)))) }

::mandelbrot_tga::main::4 {
  x(n10 x(n22 x(dup(n2 n27) dup(n1 @add(1 n28)))))
  ::mandelbrot_tga::scale = @div(::mandelbrot_tga::width @mul(n5 n6))
  tup(n1 n2) = @add(+0.5 @sub(n4 n5))
  tup(::mandelbrot_tga::width ::mandelbrot_tga::height) = @div(+2.0 n4)
  ::mandelbrot_tga::center = @add(n6 tup(n13 n15))
  ::std::io::print_byte = fn(ref(n10 n25) fn(n16 _))
  ::mandelbrot_tga::mandelbrot = fn(n13 fn(n15 n16))
  x(n25 x(n22 x(n27 n28))) = ::mandelbrot_tga::main::3
}

::mandelbrot_tga::main::5 { x(n1 x(n1 x(_ _))) }

::mandelbrot_tga::main::6 { x(_ _) }

::mandelbrot_tga::mandelbrot {
  fn(n11 fn(n12 n9))
  tup(n13 tup(n14 tup(n15 n16))) = +0.0
  x(n11 x(n12 x(n13 x(n14 x(n15 x(n16 x(0 @mul(256 @div(::mandelbrot_tga::max_iter n9))))))))) = ::mandelbrot_tga::mandelbrot::1
}

::mandelbrot_tga::mandelbrot::1 { x(n16 x(n17 x(n18 x(n19 x(dup(@add(n3 @lt(+4.0 n5)) n20) x(dup(n3 n21) x(dup(@lt(::mandelbrot_tga::max_iter @u32_and(n5 ?(::mandelbrot_tga::mandelbrot::3 ::mandelbrot_tga::mandelbrot::2 x(n16 x(n17 x(n18 x(n19 x(n20 x(n21 x(n22 n15)))))))))) n22) n15))))))) }

::mandelbrot_tga::mandelbrot::2 {
  x(dup(n6 n32) x(dup(n12 n33) x(n8 x(n10 x(@sub(n4 @add(n6 n7)) x(n4 x(@add(1 n38) n31)))))))
  +2.0 = @mul(n8 @mul(n10 @add(n12 n13)))
  tup(dup(@mul(n17 n36) dup(n17 n34)) dup(@mul(n21 n37) dup(n21 n35))) = tup(n7 n13)
  x(n32 x(n33 x(n34 x(n35 x(n36 x(n37 x(n38 n31))))))) = ::mandelbrot_tga::mandelbrot::1
}

::mandelbrot_tga::mandelbrot::3 { x(_ x(_ x(_ x(_ x(_ x(_ x(n7 n7))))))) }

::std::io::println {
  fn(ref(n3 n1) fn(n6 _))
  ::std::io::print = fn(ref(n3 n8) fn(n6 _))
  ::std::io::print_char = fn(ref(n8 n1) fn(10 _))
}

::std::io::print {
  fn(ref(n11 n1) fn(tup(n13 fn(_ n14)) _))
  x(n11 x(n1 x(n13 n14))) = ::std::io::print::1
  _ = _
}

::std::io::print::1 { x(n6 x(n3 x(dup(?(::std::io::print::3 ::std::io::print::2 x(n6 x(n3 x(n8 n9)))) n8) n9))) }

::std::io::print::2 {
  x(n6 x(n12 x(@sub(1 n17) tup(n9 n18))))
  ::std::io::print_char = fn(ref(n6 n15) fn(n9 _))
  x(n15 x(n12 x(n17 n18))) = ::std::io::print::1
}

::std::io::print::3 { x(n1 x(n1 x(_ _))) }

::std::io::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::io::print_bytes {
  fn(ref(n11 n1) fn(tup(n13 fn(_ n14)) _))
  x(n11 x(n1 x(n13 n14))) = ::std::io::print_bytes::1
  _ = _
}

::std::io::print_bytes::1 { x(n6 x(n3 x(dup(?(::std::io::print_bytes::3 ::std::io::print_bytes::2 x(n6 x(n3 x(n8 n9)))) n8) n9))) }

::std::io::print_bytes::2 {
  x(n6 x(n12 x(@sub(1 n17) tup(n9 n18))))
  ::std::io::print_byte = fn(ref(n6 n15) fn(n9 _))
  x(n15 x(n12 x(n17 n18))) = ::std::io::print_bytes::1
}

::std::io::print_bytes::3 { x(n1 x(n1 x(_ _))) }

::std::io::print_byte { fn(ref(@io_print_byte(char io) io) fn(char _)) }

::std::io::read_byte { fn(ref(dup(io0 @io_read_byte(default dup(byte @seq$(io0 io1)))) io1) fn(default byte)) }

::std::str::concat { fn(tup(@add(n9 n10) fn(n15 n16)) fn(tup(n9 fn(n14 n15)) tup(n10 fn(n14 n16)))) }

::std::u32::to_string { fn(dup(?(::std::u32::to_string::5 ::std::u32::to_string::1 x(n5 n3)) n5) n3) }

::std::u32::to_string::1 {
  x(n5 n4)
  x(n5 x(tup(0 fn(n0 n0)) n4)) = ::std::u32::to_string::2
}

::std::u32::to_string::2 { x(dup(?(::std::u32::to_string::4 ::std::u32::to_string::3 x(n5 x(n6 n4))) n5) x(n6 n4)) }

::std::u32::to_string::3 {
  x(dup(@rem(10 n7) @div(10 n19)) x(tup(@add(1 n4) fn(n10 n11)) n18))
  48 = @add(n7 n8)
  x(n19 x(tup(n4 fn(n10 tup(n8 n11))) n18)) = ::std::u32::to_string::2
}

::std::u32::to_string::4 { x(_ x(n2 n2)) }

::std::u32::to_string::5 { x(_ tup(1 fn(n0 tup(48 n0)))) }

