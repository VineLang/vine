
::main { ::sub_min::main }

::sub_min {
  fn(w3 _)
  ::std::data::List::iter = fn(w3 w12)
  ::sub_min::2 = x(w20 x(x(::std::logical::Option::None w19) w12))
  ::std::logical::Option::unwrap = fn(w19 w20)
}

::sub_min::2 {
  x(w12 x(w7 w5))
  ::std::data::List::Iter::next = fn(ref(w5 w1) enum(::sub_min::5 enum(::sub_min::6 x(w12 x(w7 w1)))))
}

::sub_min::5 {
  enum(ref(dup22(w15 @sub(w9 w11)) w11) x(dup16(w9 w21) x(x(dup18(enum(::sub_min::10 enum(::sub_min::11 x(x(w16 w17) x(w15 _)))) w16) w20) w4)))
  ::sub_min::2 = x(w21 x(x(w17 w20) w4))
}

::sub_min::6 { x(_ x(x(w2 w2) _)) }

::sub_min::10 { enum(w0 x(w5 x(dup29(@lt(w0 ?(::sub_min::13 ::sub_min::12 x(w5 x(w10 w9)))) w10) w9))) }

::sub_min::11 {
  x(x(_ w6) w1)
  ::sub_min::14 = x(w6 w1)
}

::sub_min::12 {
  x(x(_ w6) w1)
  ::sub_min::14 = x(w6 w1)
}

::sub_min::13 { x(x(w3 w3) _) }

::sub_min::14 {
  x(w1 x(w4 _))
  ::std::logical::Option::Some = fn(w4 w1)
}

::sub_min::main {
  fn(w3 _)
  ::sub_min = fn(ref(tup(4 tup(tup(4 tup(3 tup(7 tup(9 w19)))) w19)) w10) _)
  ::std::data::List::to_string = fn(w10 fn(::std::numeric::N32::to_string w17))
  ::std::IO::println = fn(w3 fn(w17 _))
}

::std::data::List::map {
  fn(tup(dup117(w8 w23) tup(w3 _)) fn(w5 tup(w8 tup(w12 w20))))
  ::std::data::List::map::2 = x(w23 x(w3 x(w5 x(w12 w20))))
}

::std::data::List::map::2 { x(dup128(?(::std::data::List::map::4 ::std::data::List::map::3 x(w10 w4)) w10) w4) }

::std::data::List::map::3 {
  x(@sub(1 w18) x(tup(w1 w2) x(dup137(fn(w1 w9) w26) x(tup(w9 w11) w25))))
  ::std::data::List::map::2 = x(w18 x(w2 x(w26 x(w11 w25))))
}

::std::data::List::map::4 { x(_ x(_ x(_ x(w1 w1)))) }

::std::data::List::concat { fn(tup(@add(w12 w20) tup(w8 w13)) fn(tup(w12 tup(w13 w23)) tup(w20 tup(w8 w23)))) }

::std::data::List::join {
  fn(w2 fn(w3 w15))
  ::std::data::List::into_iter = fn(w2 w7)
  ::std::data::List::IntoIter::next = fn(ref(w7 w11) enum(::std::data::List::join::5 enum(::std::data::List::join::6 x(w3 x(w11 w15)))))
}

::std::data::List::join::5 {
  enum(w0 x(w4 x(w3 w7)))
  ::std::data::List::join::7 = x(w4 x(w3 x(w0 w7)))
}

::std::data::List::join::6 { x(_ x(_ tup(0 tup(w4 w4)))) }

::std::data::List::join::7 {
  x(w8 x(w7 w6))
  ::std::data::List::IntoIter::next = fn(ref(w7 w1) enum(::std::data::List::join::10 enum(::std::data::List::join::11 x(w8 x(w1 w6)))))
}

::std::data::List::join::10 {
  enum(w0 x(dup230(w6 w14) x(w4 x(w3 w12))))
  ::std::data::List::concat = fn(w6 fn(w0 w8))
  ::std::data::List::concat = fn(w3 fn(w8 w10))
  ::std::data::List::join::7 = x(w14 x(w4 x(w10 w12)))
}

::std::data::List::join::11 { x(_ x(_ x(w1 w1))) }

::std::data::List::to_string {
  fn(w2 fn(w3 w14))
  ::std::data::List::map = fn(w2 fn(w3 w9))
  ::std::data::List::join = fn(w9 fn(tup(2 tup(tup(44 tup(32 w16)) w16)) w11))
  ::std::data::List::concat = fn(tup(1 tup(tup(91 w15) w15)) fn(w11 w12))
  ::std::data::List::concat = fn(w12 fn(tup(1 tup(tup(93 w17) w17)) w14))
}

::std::data::List::iter { fn(ref(tup(dup307(w2 w12) tup(w5 w6)) tup(w2 tup(w14 w6))) tup(w12 ref(w5 w14))) }

::std::data::List::Iter::next { fn(ref(tup(dup314(?(::std::data::List::Iter::next::4 ::std::data::List::Iter::next::3 x(x(w16 w17) x(x(w5 w15) w13))) w16) w5) tup(w17 w15)) w13) }

::std::data::List::Iter::next::3 {
  x(x(@sub(1 w1) w1) x(x(ref(tup(w4 w7) tup(w5 w8)) ref(w7 w8)) w15))
  ::std::logical::Option::Some = fn(ref(w4 w5) w15)
}

::std::data::List::Iter::next::4 { x(x(w8 w8) x(x(ref(w2 w2) _) ::std::logical::Option::None)) }

::std::data::List::into_iter { fn(tup(w2 tup(w3 _)) tup(w2 w3)) }

::std::data::List::IntoIter::next { fn(ref(tup(dup343(?(::std::data::List::IntoIter::next::4 ::std::data::List::IntoIter::next::3 x(x(w16 w17) x(x(w5 w15) w13))) w16) w5) tup(w17 w15)) w13) }

::std::data::List::IntoIter::next::3 {
  x(x(@sub(1 w1) w1) x(x(tup(w3 w4) w4) w9))
  ::std::logical::Option::Some = fn(w3 w9)
}

::std::data::List::IntoIter::next::4 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::logical::Option::Some { fn(f0 enum(enum(f0 r) enum(_ r))) }

::std::logical::Option::None { enum(_ enum(r r)) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::4 enum(_ w8)) w8) }

::std::logical::Option::unwrap::4 { enum(w0 w0) }

::std::numeric::N32::to_string { fn(dup1958(?(::std::numeric::N32::to_string::4 ::std::numeric::N32::to_string::3 x(w8 w7)) w8) w7) }

::std::numeric::N32::to_string::3 {
  x(w6 w9)
  ::std::numeric::N32::to_string::5 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::4 { x(_ tup(1 tup(tup(48 w3) w3))) }

::std::numeric::N32::to_string::5 { x(dup1968(?(::std::numeric::N32::to_string::7 ::std::numeric::N32::to_string::6 x(w6 w2)) w6) w2) }

::std::numeric::N32::to_string::6 {
  x(dup1971(@rem(10 w1) @div(10 w8)) x(w11 w15))
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::to_string::5 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::7 { x(_ x(w1 w1)) }

::std::IO::println {
  fn(ref(w3 w14) fn(w5 _))
  ::std::IO::print = fn(ref(w3 w9) fn(w5 _))
  ::std::IO::print_char = fn(ref(w9 w14) fn(10 _))
}

::std::IO::print {
  fn(ref(w3 w17) fn(tup(w9 tup(w10 _)) _))
  ::std::IO::print::2 = x(x(w3 w17) x(w9 w10))
}

::std::IO::print::2 { x(w4 x(dup2928(?(::std::IO::print::4 ::std::IO::print::3 x(w4 x(w6 w1))) w6) w1)) }

::std::IO::print::3 {
  x(x(w17 w21) x(@sub(1 w1) tup(w4 w5)))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::2 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::4 { x(x(w3 w3) _) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

