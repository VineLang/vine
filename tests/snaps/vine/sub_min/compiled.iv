
::main { ::sub_min::main }

::sub_min {
  fn(n0 _)
  ::std::list::List::iter = fn(n0 n4)
  ::std::option::Option::unwrap = fn(n3 n2)
  ::sub_min::1 = x(_ x(n2 x(::std::option::Option::None x(n3 n4))))
}

::sub_min::1 {
  x(n1 x(n2 x(n3 x(n4 n0))))
  ::std::list::List::Iter::next = fn(ref(n0 n5) enum(::sub_min::2 enum(::sub_min::8 x(n1 x(n2 x(n3 x(n4 n5)))))))
}

::sub_min::2 {
  enum(ref(dup6(n4 @sub(n0 n1)) n1) x(n2 x(n5 x(dup4(enum(::sub_min::4 enum(::sub_min::7 x(n3 x(n6 n4)))) n3) n7))))
  ::sub_min::1 = x(dup1(n0 n2) x(n5 x(n6 n7)))
}

::sub_min::3 {
  x(n0 n1)
  ::std::option::Option::Some = fn(n1 n0)
}

::sub_min::4 { enum(n0 x(n1 x(n2 dup6(@lt(n0 ?(::sub_min::6 ::sub_min::5 x(n1 x(n2 n3)))) n3)))) }

::sub_min::5 { x(_ ::sub_min::3) }

::sub_min::6 { x(n0 x(n0 _)) }

::sub_min::7 { x(_ ::sub_min::3) }

::sub_min::8 { x(n0 x(n0 x(n1 x(n1 _)))) }

::sub_min::main {
  fn(n1 _)
  ::sub_min = fn(ref(tup(4 tup(tup(4 tup(3 tup(7 tup(9 n0)))) n0)) n3) _)
  ::std::io::IO::println = fn(n1 fn(n4 _))
  ::std::list::List::to_string = fn(n3 fn(::std::n32::N32::to_string n4))
}

::std::io::IO::println {
  fn(ref(n0 n3) fn(n1 _))
  ::std::io::IO::print = fn(ref(n0 n2) fn(n1 _))
  ::std::io::IO::print_char = fn(ref(n2 n3) fn(10 _))
}

::std::io::IO::print {
  fn(ref(n0 n1) fn(tup(n2 tup(n3 _)) _))
  ::std::io::IO::print::1 = x(n0 x(n1 x(n2 n3)))
}

::std::io::IO::print::1 { x(n0 x(n1 x(dup223(?(::std::io::IO::print::3 ::std::io::IO::print::2 x(n0 x(n1 x(n3 n2)))) n3) n2))) }

::std::io::IO::print::2 {
  x(n1 x(n3 x(@sub(1 n4) tup(n0 n5))))
  ::std::io::IO::print_char = fn(ref(n1 n2) fn(n0 _))
  ::std::io::IO::print::1 = x(n2 x(n3 x(n4 n5)))
}

::std::io::IO::print::3 { x(n0 x(n0 _)) }

::std::io::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::list::List::map {
  fn(tup(dup285(n4 n5) tup(n0 _)) fn(n1 tup(n4 tup(n2 n3))))
  ::std::list::List::map::1 = x(n5 x(n0 x(n1 x(n2 n3))))
}

::std::list::List::map::1 { x(dup285(?(::std::list::List::map::3 ::std::list::List::map::2 x(n4 n0)) n4) n0) }

::std::list::List::map::2 {
  x(@sub(1 n2) x(tup(n0 n3) x(dup287(fn(n0 n1) n6) x(tup(n1 n4) n5))))
  ::std::list::List::map::1 = x(n2 x(n3 x(n6 x(n4 n5))))
}

::std::list::List::map::3 { x(_ x(_ x(_ x(n0 n0)))) }

::std::list::List::concat { fn(tup(@add(n1 n2) tup(n3 n0)) fn(tup(n1 tup(n0 n4)) tup(n2 tup(n3 n4)))) }

::std::list::List::join {
  fn(n0 fn(n2 n4))
  ::std::list::List::into_iter = fn(n0 n1)
  ::std::list::List::IntoIter::next = fn(ref(n1 n3) enum(::std::list::List::join::1 enum(::std::list::List::join::5 x(n2 x(n3 n4)))))
}

::std::list::List::join::1 {
  enum(n2 x(n0 x(n1 n3)))
  ::std::list::List::join::2 = x(n0 x(n1 x(n2 n3)))
}

::std::list::List::join::2 {
  x(n1 x(n0 n3))
  ::std::list::List::IntoIter::next = fn(ref(n0 n2) enum(::std::list::List::join::3 enum(::std::list::List::join::4 x(n1 x(n2 n3)))))
}

::std::list::List::join::3 {
  enum(n0 x(dup332(n6 n7) x(n3 x(n2 n5))))
  ::std::list::List::concat = fn(n6 fn(n0 n1))
  ::std::list::List::concat = fn(n2 fn(n1 n4))
  ::std::list::List::join::2 = x(n7 x(n3 x(n4 n5)))
}

::std::list::List::join::4 { x(_ x(_ x(n0 n0))) }

::std::list::List::join::5 { x(_ x(_ tup(0 tup(n0 n0)))) }

::std::list::List::to_string {
  fn(n1 fn(n2 n8))
  ::std::list::List::map = fn(n1 fn(n2 n3))
  ::std::list::List::join = fn(n3 fn(tup(2 tup(tup(44 tup(32 n4)) n4)) n5))
  ::std::list::List::concat = fn(tup(1 tup(tup(91 n0) n0)) fn(n5 n7))
  ::std::list::List::concat = fn(n7 fn(tup(1 tup(tup(93 n6) n6)) n8))
}

::std::list::List::iter { fn(ref(tup(dup363(n3 n4) tup(n1 n0)) tup(n4 tup(n2 n0))) tup(n3 ref(n1 n2))) }

::std::list::List::Iter::next { fn(ref(tup(dup367(?(::std::list::List::Iter::next::2 ::std::list::List::Iter::next::1 x(n0 x(n1 x(n2 x(n3 n4))))) n0) n2) tup(n1 n3)) n4) }

::std::list::List::Iter::next::1 {
  x(@sub(1 n4) x(n4 x(ref(tup(n0 n1) tup(n2 n3)) x(ref(n1 n3) n5))))
  ::std::option::Option::Some = fn(ref(n0 n2) n5)
}

::std::list::List::Iter::next::2 { x(n1 x(n1 x(ref(n0 n0) x(_ ::std::option::Option::None)))) }

::std::list::List::into_iter { fn(tup(n0 tup(n1 _)) tup(n0 n1)) }

::std::list::List::IntoIter::next { fn(ref(tup(dup380(?(::std::list::List::IntoIter::next::2 ::std::list::List::IntoIter::next::1 x(n0 x(n1 x(n2 x(n3 n4))))) n0) n2) tup(n1 n3)) n4) }

::std::list::List::IntoIter::next::1 {
  x(@sub(1 n1) x(n1 x(tup(n0 n2) x(n2 n3))))
  ::std::option::Option::Some = fn(n0 n3)
}

::std::list::List::IntoIter::next::2 { x(n0 x(n0 x(n1 x(n1 ::std::option::Option::None)))) }

::std::n32::N32::to_string { fn(dup836(?(::std::n32::N32::to_string::5 ::std::n32::N32::to_string::1 x(n1 n0)) n1) n0) }

::std::n32::N32::to_string::1 {
  x(n1 n2)
  ::std::n32::N32::to_string::2 = x(n1 x(tup(0 tup(n0 n0)) n2))
}

::std::n32::N32::to_string::2 { x(dup836(?(::std::n32::N32::to_string::4 ::std::n32::N32::to_string::3 x(n2 n0)) n2) n0) }

::std::n32::N32::to_string::3 {
  x(dup836(@rem(10 n0) @div(10 n4)) x(n3 n6))
  48 = @add(n0 n1)
  ::std::list::List::concat = fn(tup(1 tup(tup(n1 n2) n2)) fn(n3 n5))
  ::std::n32::N32::to_string::2 = x(n4 x(n5 n6))
}

::std::n32::N32::to_string::4 { x(_ x(n0 n0)) }

::std::n32::N32::to_string::5 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::option::Option::Some { fn(n0 enum(enum(n0 n1) enum(_ n1))) }

::std::option::Option::None { enum(_ enum(n0 n0)) }

::std::option::Option::unwrap { fn(enum(::std::option::Option::unwrap::1 enum(_ n0)) n0) }

::std::option::Option::unwrap::1 { enum(n0 n0) }

