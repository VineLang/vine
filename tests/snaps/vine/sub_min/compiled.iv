
::std::logical::Option::None { enum(_ enum(r r)) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::main { ::sub_min::main }

::sub_min::main {
  fn(w1 _)
  ::sub_min = fn(ref(tup(4 tup(tup(4 tup(3 tup(7 tup(9 w18)))) w18)) w8) _)
  ::std::data::List::to_string::to_string::1 = fn(w8 w15)
  ::std::IO::println = fn(w1 fn(w15 _))
}

::std::data::List::to_string::to_string::1 {
  fn(w0 w3)
  ::std::data::List::map = fn(w0 fn(::std::numeric::N32::to_string::to_string w5))
  ::std::data::List::join = fn(w5 fn(tup(2 tup(tup(44 tup(32 w12)) w12)) w7))
  ::std::unicode::String::to_string::to_string = fn(w7 w8)
  w3 = tup(w13 tup(tup(91 w14) w15))
  w8 = tup(@add(2 w16) tup(w14 tup(93 w17)))
  w16 = w13
  w17 = w15
}

::std::unicode::String::to_string::to_string { fn(w0 w0) }

::std::numeric::N32::to_string::to_string {
  fn(dup13(w5 w7) w6)
  w5 = ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w4)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
  w4 = w9
}

::std::numeric::N32::to_string::to_string::3 {
  x(_ w0)
  w0 = tup(w3 tup(tup(48 w4) w5))
  1 = w3
  w4 = w5
}

::std::numeric::N32::to_string::to_string::4 {
  x(dup22(w0 w6) w2)
  w0 = ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup25(w0 w7) x(w11 w15))
  w0 = @rem(10 w1)
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  w7 = @div(10 w8)
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::sub_min {
  fn(w1 _)
  ::std::data::List::iter = fn(w1 w10)
  ::sub_min::1 = x(w19 x(x(::std::logical::Option::None w18) w10))
  ::std::logical::Option::unwrap = fn(w18 w13)
  w19 = w13
}

::sub_min::1 {
  x(w12 x(w7 w5))
  ::std::data::List::Iter::next = fn(ref(w5 w1) w3)
  w3 = enum(::sub_min::4 enum(::sub_min::5 x(w12 x(w7 w1))))
}

::sub_min::4 {
  enum(w0 x(dup45(w9 w21) x(x(dup47(w12 w16) w20) w4)))
  w0 = ref(dup51(w15 w10) w11)
  w12 = enum(::sub_min::9 enum(::sub_min::10 x(x(w16 w17) x(w15 _))))
  w10 = @sub(w9 w11)
  ::sub_min::1 = x(w21 x(x(w17 w20) w4))
}

::sub_min::5 { x(_ x(x(w2 w2) _)) }

::sub_min::9 {
  enum(w0 x(w5 x(dup58(w6 w10) w9)))
  w6 = @lt(w0 w8)
  w8 = ?(::sub_min::12 ::sub_min::11 x(w5 x(w10 w9)))
}

::sub_min::10 {
  x(x(_ w6) w1)
  ::sub_min::13 = x(w6 w1)
}

::sub_min::11 {
  x(x(_ w6) w1)
  ::sub_min::13 = x(w6 w1)
}

::sub_min::12 { x(x(w3 w3) _) }

::sub_min::13 {
  x(w2 x(w4 _))
  w2 = enum(enum(w4 w6) enum(_ w6))
}

::std::data::List::map {
  fn(tup(dup135(w6 w22) tup(w1 _)) fn(w3 w16))
  ::std::data::List::map::1 = x(w22 x(w1 x(w3 x(w10 w19))))
  w16 = tup(w6 tup(w10 w19))
}

::std::data::List::map::1 {
  x(dup145(w0 w10) w4)
  w0 = ?(::std::data::List::map::3 ::std::data::List::map::2 x(w10 w4))
}

::std::data::List::map::2 {
  x(w23 x(w22 x(dup154(w7 w26) x(w20 w25))))
  tup(w1 w2) = w22
  w7 = fn(w1 w9)
  w20 = tup(w9 w11)
  w23 = @sub(1 w18)
  ::std::data::List::map::1 = x(w18 x(w2 x(w26 x(w11 w25))))
}

::std::data::List::map::3 { x(_ x(_ x(_ x(w1 w1)))) }

::std::data::List::concat {
  fn(w0 fn(w1 w22))
  tup(w5 tup(w6 w15)) = w0
  tup(w10 tup(w11 w21)) = w1
  w15 = w11
  w5 = @add(w10 w18)
  w22 = tup(w18 tup(w6 w21))
}

::std::data::List::join {
  fn(w0 fn(w1 w14))
  ::std::data::List::into_iter = fn(w0 w5)
  ::std::data::List::IntoIter::next = fn(ref(w5 w10) w12)
  w12 = enum(::std::data::List::join::4 enum(::std::data::List::join::5 x(w1 x(w10 w14))))
}

::std::data::List::join::4 {
  enum(w0 x(w4 x(w3 w7)))
  ::std::data::List::join::6 = x(w4 x(w3 x(w0 w7)))
}

::std::data::List::join::5 {
  x(_ x(_ w3))
  w3 = tup(w4 tup(w5 w6))
  0 = w4
  w5 = w6
}

::std::data::List::join::6 {
  x(w8 x(w7 w6))
  ::std::data::List::IntoIter::next = fn(ref(w7 w1) w3)
  w3 = enum(::std::data::List::join::9 enum(::std::data::List::join::10 x(w8 x(w1 w6))))
}

::std::data::List::join::9 {
  enum(w0 x(dup241(w6 w14) x(w4 x(w3 w12))))
  ::std::data::List::concat = fn(w6 fn(w0 w8))
  ::std::data::List::concat = fn(w3 fn(w8 w10))
  ::std::data::List::join::6 = x(w14 x(w4 x(w10 w12)))
}

::std::data::List::join::10 { x(_ x(_ x(w1 w1))) }

::std::data::List::iter {
  fn(ref(tup(dup312(w0 w10) tup(w3 w4)) tup(w0 tup(w12 w4))) w14)
  w14 = tup(w10 ref(w3 w12))
}

::std::data::List::Iter::next {
  fn(ref(tup(dup318(w11 w15) w3) tup(w16 w14)) w12)
  w11 = ?(::std::data::List::Iter::next::3 ::std::data::List::Iter::next::2 x(x(w15 w16) x(x(w3 w14) w12)))
}

::std::data::List::Iter::next::2 {
  x(x(w20 w1) x(x(w18 w13) w15))
  w20 = @sub(1 w1)
  ref(tup(w4 w7) tup(w5 w8)) = w18
  w13 = ref(w7 w8)
  w15 = enum(enum(ref(w4 w5) w21) enum(_ w21))
}

::std::data::List::Iter::next::3 {
  x(x(w8 w8) x(x(w6 _) ::std::logical::Option::None))
  ref(w2 w2) = w6
}

::std::data::List::into_iter {
  fn(tup(w0 tup(w1 _)) w7)
  w7 = tup(w0 w1)
}

::std::data::List::IntoIter::next {
  fn(ref(tup(dup344(w11 w15) w3) tup(w16 w14)) w12)
  w11 = ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(w15 w16) x(x(w3 w14) w12)))
}

::std::data::List::IntoIter::next::2 {
  x(x(w14 w1) x(x(w12 w7) w9))
  w14 = @sub(1 w1)
  tup(w3 w4) = w12
  w7 = w4
  w9 = enum(enum(w3 w15) enum(_ w15))
}

::std::data::List::IntoIter::next::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::logical::Option::unwrap {
  fn(w0 w7)
  w0 = enum(::std::logical::Option::unwrap::3 enum(_ w7))
}

::std::logical::Option::unwrap::3 { enum(w0 w0) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(w3 _))
  tup(w7 tup(w8 _)) = w3
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 {
  x(w4 x(dup2225(w0 w6) w1))
  w0 = ?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1)))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 w14))
  w15 = @sub(1 w1)
  tup(w4 w5) = w14
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

