
::std::logical::Option::None { enum(_ enum(r r)) }

::std::numeric::N32::rotate_right { fn(@n32_rotr(x y) fn(x y)) }

::std::numeric::N64::add {
  fn(tup(dup(al0 al1) ah) fn(tup(dup(bl0 bl1) bh) tup(l h)))
  al0 = @add(bl0 l)
  al1 = @n32_add_high(bl1 c)
  ah = @add(bh @add(c h))
}

::std::numeric::N64::mul {
  fn(tup(dup(al0 dup(al1 al2)) ah) fn(tup(dup(bl0 dup(bl1 bl2)) bh) tup(l h)))
  al0 = @mul(bl0 l)
  al1 = @n32_mul_high(bl1 ll)
  al2 = @mul(bh lh)
  bl2 = @mul(ah hl)
  lh = @add(hl @add(ll h))
}

::std::unicode::Char::as_n32 { fn(x x) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::std::IO::flush { fn(ref(@io_flush(0 io) io) _) }

::std::IO::read_byte { fn(ref(dup(io0 @io_read_byte(default dup(byte @seq$(io0 io1)))) io1) fn(default byte)) }

::main { ::guessing_game::main }

::guessing_game::main {
  fn(ref(w1 w55) w51)
  ::std::IO::prompt = fn(ref(w1 w6) fn(tup(14 tup(tup(69 tup(110 tup(116 tup(101 tup(114 tup(32 tup(97 tup(32 tup(115 tup(101 tup(101 tup(100 tup(58 tup(32 w39)))))))))))))) w39)) w9))
  ::std::logical::Option::unwrap = fn(w9 w10)
  ::std::rng::Pcg32::seeded = fn(w10 w13)
  ::guessing_game::main::1 = x(x(w6 w42) w40)
  w40 = fn(tup(24 tup(tup(69 tup(110 tup(116 tup(101 tup(114 tup(32 tup(97 tup(32 tup(109 tup(97 tup(120 tup(105 tup(109 tup(117 tup(109 tup(32 tup(110 tup(117 tup(109 tup(98 tup(101 tup(114 tup(58 tup(32 w45)))))))))))))))))))))))) w45)) w18)
  dup9(w24 w32) = w18
  ::std::rng::Pcg32::gen_n32 = fn(ref(w13 _) w23)
  w23 = @rem(w24 w25)
  1 = @add(w25 w26)
  ::std::numeric::N32::to_string::to_string = fn(w32 w33)
  w33 = tup(@add(40 w49) tup(w47 tup(46 w50)))
  ::std::IO::println = fn(ref(w42 w29) fn(tup(w49 tup(tup(73 tup(39 tup(109 tup(32 tup(116 tup(104 tup(105 tup(110 tup(107 tup(105 tup(110 tup(103 tup(32 tup(111 tup(102 tup(32 tup(97 tup(32 tup(110 tup(117 tup(109 tup(98 tup(101 tup(114 tup(32 tup(98 tup(101 tup(116 tup(119 tup(101 tup(101 tup(110 tup(32 tup(49 tup(32 tup(97 tup(110 tup(100 tup(32 w47))))))))))))))))))))))))))))))))))))))) w50)) _))
  ::guessing_game::main::13 = x(x(w29 w55) x(0 x(w26 w51)))
}

::guessing_game::main::1 {
  x(w6 w2)
  w2 = fn(w0 w7)
  ::guessing_game::main::2 = x(w6 x(w0 w7))
}

::guessing_game::main::2 {
  x(x(w4 w14) x(dup23(w8 w12) w11))
  ::std::IO::prompt = fn(ref(w4 w6) fn(w8 w9))
  w9 = enum(::guessing_game::main::6 enum(::guessing_game::main::7 x(x(w6 w14) x(w12 w11))))
}

::guessing_game::main::6 {
  enum(w0 w5)
  ::std::numeric::N32::parse = fn(w0 w7)
  w7 = enum(::guessing_game::main::10 enum(::guessing_game::main::11 w5))
}

::guessing_game::main::7 {
  w3
  ::guessing_game::main::12 = w3
}

::guessing_game::main::10 { enum(w0 x(x(w5 w5) x(_ w0))) }

::guessing_game::main::11 {
  w3
  ::guessing_game::main::12 = w3
}

::guessing_game::main::12 {
  w3
  ::guessing_game::main::2 = w3
}

::guessing_game::main::13 {
  x(x(w11 w26) x(w9 x(dup54(w19 w23) w21)))
  w9 = @add(1 w1)
  ::guessing_game::main::1 = x(x(w11 w14) w12)
  w12 = fn(tup(18 tup(tup(69 tup(110 tup(116 tup(101 tup(114 tup(32 tup(121 tup(111 tup(117 tup(114 tup(32 tup(103 tup(117 tup(101 tup(115 tup(115 tup(58 tup(32 w17)))))))))))))))))) w17)) w4)
  dup55(w18 w22) = w4
  w18 = @lt(w19 w20)
  w20 = ?(::guessing_game::main::16 ::guessing_game::main::15 x(x(w14 w26) x(w1 x(w23 x(w22 w21)))))
}

::guessing_game::main::15 {
  x(x(w10 w19) x(w8 x(w7 x(_ w15))))
  ::std::IO::println = fn(ref(w10 w1) fn(tup(8 tup(tup(84 tup(111 tup(111 tup(32 tup(108 tup(111 tup(119 tup(46 w13)))))))) w13)) _))
  ::guessing_game::main::28 = x(x(w1 w19) x(w8 x(w7 x(w15 _))))
}

::guessing_game::main::16 {
  x(w8 x(w6 x(dup68(w1 w10) x(w4 w9))))
  w4 = @lt$(w1 w2)
  w2 = ?(::guessing_game::main::18 ::guessing_game::main::17 x(w8 x(w6 x(w10 w9))))
}

::guessing_game::main::17 {
  x(x(w9 w18) x(w7 x(w6 w14)))
  ::std::IO::println = fn(ref(w9 w1) fn(tup(9 tup(tup(84 tup(111 tup(111 tup(32 tup(104 tup(105 tup(103 tup(104 tup(46 w12))))))))) w12)) _))
  ::guessing_game::main::28 = x(x(w1 w18) x(w7 x(w6 x(w14 _))))
}

::guessing_game::main::18 {
  x(x(w11 w1) x(dup80(w15 w18) _))
  w15 = @eq(1 w16)
  w16 = ?(::guessing_game::main::21 ::guessing_game::main::20 x(w18 w17))
  ::std::data::List::concat = fn(tup(11 tup(tup(89 tup(111 tup(117 tup(32 tup(103 tup(111 tup(116 tup(32 tup(105 tup(116 tup(32 w14))))))))))) w14)) fn(w17 w5))
  ::std::IO::println = fn(ref(w11 w1) fn(w5 _))
}

::guessing_game::main::20 {
  x(_ w0)
  w0 = tup(w3 tup(tup(105 tup(109 tup(109 tup(101 tup(100 tup(105 tup(97 tup(116 tup(101 tup(108 tup(121 tup(63 tup(33 w4))))))))))))) w5))
  13 = w3
  w4 = w5
}

::guessing_game::main::21 {
  x(w4 w0)
  ::std::numeric::N32::to_string::to_string = fn(w4 w2)
  w0 = tup(w5 tup(tup(105 tup(110 tup(32 w6))) w7))
  w2 = tup(@add(12 w8) tup(w6 tup(32 tup(103 tup(117 tup(101 tup(115 tup(115 tup(101 tup(115 tup(33 w9)))))))))))
  w8 = w5
  w9 = w7
}

::guessing_game::main::28 {
  x(w12 x(w10 x(w9 x(w13 _))))
  ::guessing_game::main::13 = x(w12 x(w10 x(w9 w13)))
}

::std::numeric::N32::to_string::to_string {
  fn(dup92(w5 w7) w6)
  w5 = ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w4)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
  w4 = w9
}

::std::numeric::N32::to_string::to_string::3 {
  x(_ w0)
  w0 = tup(w3 tup(tup(48 w4) w5))
  1 = w3
  w4 = w5
}

::std::numeric::N32::to_string::to_string::4 {
  x(dup101(w0 w6) w2)
  w0 = ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup104(w0 w7) x(w11 w15))
  w0 = @rem(10 w1)
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  w7 = @div(10 w8)
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::data::List::concat {
  fn(w0 fn(w1 w22))
  tup(w5 tup(w6 w15)) = w0
  tup(w10 tup(w11 w21)) = w1
  w15 = w11
  w5 = @add(w10 w18)
  w22 = tup(w18 tup(w6 w21))
}

::std::data::List::into_iter {
  fn(tup(w0 tup(w1 _)) w7)
  w7 = tup(w0 w1)
}

::std::data::List::IntoIter::next {
  fn(ref(tup(dup382(w11 w15) w3) tup(w16 w14)) w12)
  w11 = ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(w15 w16) x(x(w3 w14) w12)))
}

::std::data::List::IntoIter::next::2 {
  x(x(w14 w1) x(x(w12 w7) w9))
  w14 = @sub(1 w1)
  tup(w3 w4) = w12
  w7 = w4
  w9 = enum(enum(w3 w15) enum(_ w15))
}

::std::data::List::IntoIter::next::3 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::logical::Option::unwrap {
  fn(w0 w7)
  w0 = enum(::std::logical::Option::unwrap::3 enum(_ w7))
}

::std::logical::Option::unwrap::3 { enum(w0 w0) }

::std::numeric::N32::parse {
  fn(w0 w12)
  tup(dup1285(w11 w14) tup(w5 _)) = w0
  w11 = ?(::std::numeric::N32::parse::3 ::std::numeric::N32::parse::2 x(w14 x(w5 w12)))
}

::std::numeric::N32::parse::2 {
  x(w5 x(w4 w6))
  ::std::numeric::N32::parse::4 = x(w5 x(w4 x(0 w6)))
}

::std::numeric::N32::parse::3 {
  x(_ x(_ w4))
  ::std::numeric::N32::parse::10 = x(w4 ::std::logical::Option::None)
}

::std::numeric::N32::parse::4 {
  x(dup1295(w0 w8) w3)
  w0 = ?(::std::numeric::N32::parse::6 ::std::numeric::N32::parse::5 x(w8 w3))
}

::std::numeric::N32::parse::5 {
  x(w18 x(w17 x(w16 w25)))
  tup(dup1304(w19 w26) w2) = w17
  w19 = dup1299(w20 w21)
  48 = @le(w20 w22)
  w21 = @le(57 w23)
  w22 = @n32_and(w23 w24)
  w24 = ?(::std::numeric::N32::parse::9 ::std::numeric::N32::parse::8 x(w18 x(w2 x(w16 x(w26 w25)))))
}

::std::numeric::N32::parse::6 {
  x(_ x(_ x(w1 w9)))
  ::std::numeric::N32::parse::10 = x(w9 enum(enum(w1 w7) enum(_ w7)))
}

::std::numeric::N32::parse::8 {
  x(w4 x(w3 x(w2 x(w1 w20))))
  w2 = @mul(10 w13)
  w1 = @sub(48 w15)
  w13 = @add(w15 w17)
  w4 = @sub(1 w19)
  ::std::numeric::N32::parse::4 = x(w19 x(w3 x(w17 w20)))
}

::std::numeric::N32::parse::9 { x(_ x(_ x(_ x(_ ::std::logical::Option::None)))) }

::std::numeric::N32::parse::10 { x(w10 w10) }

::std::numeric::N64::from_n32 {
  fn(w0 w4)
  w4 = tup(w0 0)
}

::std::numeric::N64::or {
  fn(tup(w0 w1) fn(tup(w3 w4) w14))
  w0 = @n32_or(w3 w10)
  w1 = @n32_or(w4 w13)
  w14 = tup(w10 w13)
}

::std::numeric::N64::xor {
  fn(tup(w0 w1) fn(tup(w3 w4) w14))
  w0 = @n32_xor(w3 w10)
  w1 = @n32_xor(w4 w13)
  w14 = tup(w10 w13)
}

::std::rng::Pcg32::new {
  fn(w0 fn(w1 w19))
  ::std::numeric::N64::from_n32 = fn(1 w5)
  ::std::numeric::N64::or = fn(w1 fn(w5 w6))
  dup1831(w9 dup1831(w14 w18)) = w6
  ::std::numeric::N64::add = fn(w0 fn(w9 w10))
  ::std::numeric::N64::mul = fn(w10 fn(::std::rng::Pcg32::multiplier w13))
  ::std::numeric::N64::add = fn(w13 fn(w14 w15))
  w19 = tup(w15 w18)
}

::std::rng::Pcg32::default {
  r
  ::std::rng::Pcg32::new = fn(tup(3512640997 3405705229) fn(tup(4150755663 335903614) r))
}

::std::rng::Pcg32::multiplier { tup(1284865837 1481765933) }

::std::rng::Pcg32::gen_n32 {
  fn(ref(tup(dup1838(w9 w13) dup1839(w2 w15)) tup(w17 w2)) w28)
  tup(w10 dup1841(w18 dup1841(w20 w26))) = w9
  ::std::numeric::N64::mul = fn(w13 fn(::std::rng::Pcg32::multiplier w14))
  ::std::numeric::N64::add = fn(w14 fn(w15 w16))
  w17 = w16
  w18 = @n32_shr(13 w19)
  w20 = @n32_shl(5 w21)
  w19 = @n32_xor(w21 w22)
  w10 = @n32_shr(27 w24)
  w22 = @n32_xor(w24 w25)
  w26 = @n32_shr(27 w27)
  ::std::numeric::N32::rotate_right = fn(w25 fn(w27 w28))
}

::std::rng::Pcg32::mix {
  fn(ref(tup(w1 dup1847(w2 w17)) tup(w19 w2)) fn(w7 _))
  ::std::numeric::N64::xor = fn(w1 fn(tup(0 w7) w13))
  ::std::numeric::N64::mul = fn(w13 fn(::std::rng::Pcg32::multiplier w16))
  ::std::numeric::N64::add = fn(w16 fn(w17 w18))
  w19 = w18
}

::std::rng::Pcg32::seeded {
  fn(w0 w15)
  w0 = dup1851(w8 _)
  ::std::data::List::into_iter = fn(w8 w9)
  ::std::rng::Pcg32::seeded::1 = x(x(::std::rng::Pcg32::default w15) w9)
}

::std::rng::Pcg32::seeded::1 {
  x(w7 w5)
  ::std::data::List::IntoIter::next = fn(ref(w5 w1) w3)
  w3 = enum(::std::rng::Pcg32::seeded::4 enum(::std::rng::Pcg32::seeded::5 x(w7 w1)))
}

::std::rng::Pcg32::seeded::4 {
  enum(w0 x(x(w4 w13) w2))
  ::std::unicode::Char::as_n32 = fn(w0 w9)
  ::std::rng::Pcg32::mix = fn(ref(w4 w6) fn(w9 _))
  ::std::rng::Pcg32::seeded::1 = x(x(w6 w13) w2)
}

::std::rng::Pcg32::seeded::5 { x(x(w2 w2) _) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(w3 _))
  tup(w7 tup(w8 _)) = w3
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 {
  x(w4 x(dup2266(w0 w6) w1))
  w0 = ?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1)))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 w14))
  w15 = @sub(1 w1)
  tup(w4 w5) = w14
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

::std::IO::prompt {
  fn(ref(w1 w16) fn(w3 w18))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::flush = fn(ref(w7 w12) _)
  ::std::IO::read_line = fn(ref(w12 w16) w18)
}

::std::IO::read_line {
  fn(ref(w1 w17) w14)
  ::std::IO::read_byte = fn(ref(w1 w6) fn(0 w8))
  dup2309(w12 w15) = w8
  w12 = @ne(0 w13)
  w13 = ?(::std::IO::read_line::3 ::std::IO::read_line::2 x(x(w6 w17) x(w15 w14)))
}

::std::IO::read_line::2 {
  x(w5 x(dup2315(w6 w9) w1))
  w6 = @eq(10 w7)
  w7 = ?(::std::IO::read_line::6 ::std::IO::read_line::5 x(w5 x(w9 w8)))
  w1 = enum(enum(w8 w12) enum(_ w12))
}

::std::IO::read_line::3 { x(x(w3 w3) x(_ ::std::logical::Option::None)) }

::std::IO::read_line::5 {
  x(x(w4 w4) x(_ w0))
  w0 = tup(w5 tup(w6 w7))
  0 = w5
  w6 = w7
}

::std::IO::read_line::6 {
  x(w10 x(w8 w6))
  ::std::IO::read_line::7 = x(w10 x(x(tup(1 tup(tup(w8 w11) w11)) w14) _))
  w6 = w14
}

::std::IO::read_line::7 {
  x(x(w10 w18) w8)
  ::std::IO::read_byte = fn(ref(w10 w1) fn(10 w3))
  dup2332(w11 w16) = w3
  w11 = @ne(10 w12)
  w12 = ?(::std::IO::read_line::10 ::std::IO::read_line::9 x(x(w1 w18) x(w16 w8)))
}

::std::IO::read_line::9 {
  x(w9 x(w7 x(x(w6 w19) w17)))
  ::std::data::List::concat = fn(w6 fn(tup(1 tup(tup(w7 w10) w10)) w3))
  ::std::IO::read_line::7 = x(w9 x(x(w3 w19) w17))
}

::std::IO::read_line::10 { x(x(w5 w5) x(_ x(x(w2 w2) _))) }

