
::main { ::cond_diverge::main }

::cond_diverge::main {
  fn(w3 _)
  ::cond_diverge::main::2 = x(x(tup(4 tup(tup(97 tup(98 tup(99 tup(100 w15)))) w15)) w18) _)
  ::std::IO::println = fn(w3 fn(w18 _))
}

::cond_diverge::main::2 {
  x(x(w3 w13) w11)
  ::std::data::List::pop_front = fn(ref(w3 w6) enum(::cond_diverge::main::6 enum(::cond_diverge::main::7 x(x(w6 w13) w11))))
}

::cond_diverge::main::6 { enum(dup16(@eq(97 ?(::cond_diverge::main::9 ::cond_diverge::main::8 x(w4 x(w8 w7)))) w8) x(w4 w7)) }

::cond_diverge::main::7 { x(x(w2 w2) _) }

::cond_diverge::main::8 {
  x(w3 x(_ w4))
  ::cond_diverge::main::2 = x(w3 w4)
}

::cond_diverge::main::9 { x(w5 x(@eq(98 ?(::cond_diverge::main::11 ::cond_diverge::main::2 x(w5 w6))) w6)) }

::cond_diverge::main::11 { x(x(w2 w2) _) }

::std::data::List::pop_front { fn(ref(tup(dup135(?(::std::data::List::pop_front::4 ::std::data::List::pop_front::3 x(x(w17 w18) x(x(w5 w16) w14))) w17) tup(w5 w6)) tup(w18 tup(w16 w6))) w14) }

::std::data::List::pop_front::3 {
  x(x(@sub(1 w1) w1) x(x(tup(w3 w4) w4) w9))
  ::std::logical::Option::Some = fn(w3 w9)
}

::std::data::List::pop_front::4 { x(x(w4 w4) x(x(w2 w2) ::std::logical::Option::None)) }

::std::logical::Option::Some { fn(f0 enum(enum(f0 r) enum(_ r))) }

::std::logical::Option::None { enum(_ enum(r r)) }

::std::IO::println {
  fn(ref(w3 w14) fn(w5 _))
  ::std::IO::print = fn(ref(w3 w9) fn(w5 _))
  ::std::IO::print_char = fn(ref(w9 w14) fn(10 _))
}

::std::IO::print {
  fn(ref(w3 w17) fn(tup(w9 tup(w10 _)) _))
  ::std::IO::print::2 = x(x(w3 w17) x(w9 w10))
}

::std::IO::print::2 { x(w4 x(dup2916(?(::std::IO::print::4 ::std::IO::print::3 x(w4 x(w6 w1))) w6) w1)) }

::std::IO::print::3 {
  x(x(w17 w21) x(@sub(1 w1) tup(w4 w5)))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::2 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::4 { x(x(w3 w3) _) }

::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

