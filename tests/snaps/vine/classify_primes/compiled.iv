
::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::main { ::classify_primes::main }

::classify_primes::main {
  fn(ref(w1 w9) _)
  ::classify_primes::main::1 = x(x(w1 w9) 2)
}

::classify_primes::main::1 { x(w4 dup9(@lt(1000 ?(::classify_primes::main::3 ::classify_primes::main::2 x(w4 w5))) w5)) }

::classify_primes::main::2 {
  x(x(w17 w25) dup13(w21 dup13(w6 @add(1 w14))))
  ::classify_primes::main::5 = x(w21 x(2 w19))
  ::std::numeric::N32::to_string::to_string = fn(w6 w7)
  ::std::data::List::concat = fn(w7 fn(tup(2 tup(tup(58 tup(32 w22)) w22)) w9))
  ::std::data::List::concat = fn(w9 fn(w19 w11))
  ::std::IO::println = fn(ref(w17 w4) fn(w11 _))
  ::classify_primes::main::1 = x(x(w4 w25) w14)
}

::classify_primes::main::3 { x(x(w2 w2) _) }

::classify_primes::main::5 { x(dup19(w3 w10) x(dup20(@mul(w1 @le(w3 ?(::classify_primes::main::7 ::classify_primes::main::6 x(w10 x(w9 w8))))) dup20(w1 w9)) w8)) }

::classify_primes::main::6 { x(dup22(@rem(w7 ?(::classify_primes::main::10 ::classify_primes::main::9 x(w11 x(w10 w9)))) w11) x(dup23(w7 w10) w9)) }

::classify_primes::main::7 { x(_ x(_ tup(5 tup(tup(112 tup(114 tup(105 tup(109 tup(101 w4))))) w4)))) }

::classify_primes::main::9 {
  x(w2 x(@add(1 w5) w6))
  ::classify_primes::main::5 = x(w2 x(w5 w6))
}

::classify_primes::main::10 { x(_ x(_ tup(9 tup(tup(99 tup(111 tup(109 tup(112 tup(111 tup(115 tup(105 tup(116 tup(101 w4))))))))) w4)))) }

::std::numeric::N32::to_string::to_string { fn(dup31(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6)) w7) w6) }

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w9)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
}

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 w3) w3))) }

::std::numeric::N32::to_string::to_string::4 { x(dup40(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2)) w6) w2) }

::std::numeric::N32::to_string::to_string::5 {
  x(dup43(@rem(10 w1) @div(10 w8)) x(w11 w15))
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::data::List::concat { fn(tup(@add(w10 w18) tup(w6 w11)) fn(tup(w10 tup(w11 w21)) tup(w18 tup(w6 w21)))) }

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(tup(w7 tup(w8 _)) _))
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 { x(w4 x(dup2205(?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1))) w6) w1)) }

::std::IO::print::2 {
  x(x(w17 w21) x(@sub(1 w1) tup(w4 w5)))
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

