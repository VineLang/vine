
::std::IO::print_char { fn(ref(@io_print_char(char io) io) fn(char _)) }

::main { ::classify_primes::main }

::classify_primes::main {
  fn(ref(w1 w9) _)
  ::classify_primes::main::1 = x(x(w1 w9) 2)
}

::classify_primes::main::1 {
  x(w4 dup9(w0 w5))
  w0 = @lt(1000 w1)
  w1 = ?(::classify_primes::main::3 ::classify_primes::main::2 x(w4 w5))
}

::classify_primes::main::2 {
  x(x(w16 w30) dup13(w20 dup13(w7 w12)))
  ::classify_primes::main::5 = x(w20 x(2 w18))
  ::std::numeric::N32::to_string::to_string = fn(w7 w8)
  ::std::unicode::String::to_string::to_string = fn(w18 w10)
  w8 = tup(@add(2 w24) tup(w22 tup(58 tup(32 w25))))
  w10 = tup(@add(w24 w26) tup(w25 w27))
  ::std::IO::println = fn(ref(w16 w4) fn(tup(w26 tup(w22 w27)) _))
  w12 = @add(1 w13)
  ::classify_primes::main::1 = x(x(w4 w30) w13)
}

::classify_primes::main::3 { x(x(w2 w2) _) }

::classify_primes::main::5 {
  x(dup19(w3 w10) x(dup20(w0 dup20(w1 w9)) w8))
  w0 = @mul(w1 w2)
  w2 = @le(w3 w4)
  w4 = ?(::classify_primes::main::7 ::classify_primes::main::6 x(w10 x(w9 w8)))
}

::classify_primes::main::6 {
  x(dup22(w6 w11) x(dup23(w7 w10) w9))
  w6 = @rem(w7 w8)
  w8 = ?(::classify_primes::main::10 ::classify_primes::main::9 x(w11 x(w10 w9)))
}

::classify_primes::main::7 {
  x(_ x(_ w3))
  w3 = tup(w4 tup(tup(112 tup(114 tup(105 tup(109 tup(101 w5))))) w6))
  5 = w4
  w5 = w6
}

::classify_primes::main::9 {
  x(w2 x(w1 w6))
  w1 = @add(1 w5)
  ::classify_primes::main::5 = x(w2 x(w5 w6))
}

::classify_primes::main::10 {
  x(_ x(_ w0))
  w0 = tup(w4 tup(tup(99 tup(111 tup(109 tup(112 tup(111 tup(115 tup(105 tup(116 tup(101 w5))))))))) w6))
  9 = w4
  w5 = w6
}

::std::numeric::N32::to_string::to_string {
  fn(dup31(w5 w7) w6)
  w5 = ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(w7 w6))
}

::std::numeric::N32::to_string::to_string::2 {
  x(w6 w4)
  ::std::numeric::N32::to_string::to_string::4 = x(w6 x(tup(0 tup(w7 w7)) w9))
  w4 = w9
}

::std::numeric::N32::to_string::to_string::3 {
  x(_ w0)
  w0 = tup(w3 tup(tup(48 w4) w5))
  1 = w3
  w4 = w5
}

::std::numeric::N32::to_string::to_string::4 {
  x(dup40(w0 w6) w2)
  w0 = ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(w6 w2))
}

::std::numeric::N32::to_string::to_string::5 {
  x(dup43(w0 w7) x(w11 w15))
  w0 = @rem(10 w1)
  48 = @add(w1 w2)
  ::std::data::List::concat = fn(tup(1 tup(tup(w2 w13) w13)) fn(w11 w5))
  w7 = @div(10 w8)
  ::std::numeric::N32::to_string::to_string::4 = x(w8 x(w5 w15))
}

::std::numeric::N32::to_string::to_string::6 { x(_ x(w1 w1)) }

::std::unicode::String::to_string::to_string { fn(w0 w0) }

::std::data::List::concat {
  fn(w0 fn(w1 w22))
  tup(w5 tup(w6 w15)) = w0
  tup(w10 tup(w11 w21)) = w1
  w15 = w11
  w5 = @add(w10 w18)
  w22 = tup(w18 tup(w6 w21))
}

::std::IO::println {
  fn(ref(w1 w12) fn(w3 _))
  ::std::IO::print = fn(ref(w1 w7) fn(w3 _))
  ::std::IO::print_char = fn(ref(w7 w12) fn(10 _))
}

::std::IO::print {
  fn(ref(w1 w16) fn(w3 _))
  tup(w7 tup(w8 _)) = w3
  ::std::IO::print::1 = x(x(w1 w16) x(w7 w8))
}

::std::IO::print::1 {
  x(w4 x(dup2205(w0 w6) w1))
  w0 = ?(::std::IO::print::3 ::std::IO::print::2 x(w4 x(w6 w1)))
}

::std::IO::print::2 {
  x(x(w17 w21) x(w15 w14))
  w15 = @sub(1 w1)
  tup(w4 w5) = w14
  ::std::IO::print_char = fn(ref(w17 w10) fn(w4 _))
  ::std::IO::print::1 = x(x(w10 w21) x(w1 w5))
}

::std::IO::print::3 { x(x(w3 w3) _) }

