
::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::main { ::classify_primes::main }

::classify_primes::main {
  fn(ref(w1 w9) _)
  ::classify_primes::main::1 = x(x(w1 w9) 2)
}

::classify_primes::main::1 { x(w4 dup9(@lt(1000 ?(::classify_primes::main::3 ::classify_primes::main::2 x(w4 w5))) w5)) }

::classify_primes::main::2 {
  x(x(w16 w30) dup13(w20 dup13(w7 @add(1 w13))))
  ::classify_primes::main::5 = x(w20 x(2 w18))
  ::std::numeric::N32::to_string::to_string = fn(w7 tup(@add(2 w24) tup(w22 tup(58 tup(32 w25)))))
  ::std::unicode::String::to_string::to_string = fn(w18 tup(@add(w24 w21) tup(w25 w23)))
  ::std::IO::println = fn(ref(w16 w4) fn(tup(w21 tup(w22 w23)) _))
  ::classify_primes::main::1 = x(x(w4 w30) w13)
}

::classify_primes::main::3 { x(x(w2 w2) _) }

::classify_primes::main::5 { x(dup19(w3 w10) x(dup20(@mul(w1 @le(w3 ?(::classify_primes::main::7 ::classify_primes::main::6 x(w10 x(w9 w8))))) dup20(w1 w9)) w8)) }

::classify_primes::main::6 { x(dup22(@rem(w7 ?(::classify_primes::main::10 ::classify_primes::main::9 x(w11 x(w10 w9)))) w11) x(dup23(w7 w10) w9)) }

::classify_primes::main::7 { x(_ x(_ tup(5 tup(tup(112 tup(114 tup(105 tup(109 tup(101 w6))))) w6)))) }

::classify_primes::main::9 {
  x(w2 x(@add(1 w5) w6))
  ::classify_primes::main::5 = x(w2 x(w5 w6))
}

::classify_primes::main::10 { x(_ x(_ tup(9 tup(tup(99 tup(111 tup(109 tup(112 tup(111 tup(115 tup(105 tup(116 tup(101 w6))))))))) w6)))) }

::std::numeric::N32::to_string::to_string { fn(dup31(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup40(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup40(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup43(@rem(10 @add$(48 n0)) @div(10 dup40(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::unicode::String::to_string::to_string { fn(n0 n0) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2205(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2205(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2205(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2205(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

