
::std::data::Array::Node::to_leaf { fn(n0 n0) }

::std::data::Array::Node::leaf { fn(n0 n0) }

::std::logical::Option::None { enum(_ enum(n0 n0)) }

::std::IO::print_char { fn(ref(@io_print_char(n0 n1) n1) fn(n0 _)) }

::main { ::array_from_list::main }

::array_from_list::main {
  fn(w1 _)
  ::std::data::List::new = fn(1000000 fn(0 w5))
  ::std::data::Array::from_list = fn(w5 w8)
  ::std::data::Array::len = fn(ref(w8 _) w16)
  ::std::numeric::N32::to_string::to_string = fn(w16 w17)
  ::std::IO::println = fn(w1 fn(w17 _))
}

::std::numeric::N32::to_string::to_string { fn(dup7(?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::2 { x(dup16(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))) n0) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::4 { x(dup16(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 n1)) n0) n1) }

::std::numeric::N32::to_string::to_string::5 { x(dup19(@rem(10 @add$(48 n0)) @div(10 dup16(?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))) n1))) x(tup(@add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::data::List::new { fn(dup36(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 x(n1 x(tup(0 tup(n2 n2)) n3))))) n0) fn(n1 n3)) }

::std::data::List::new::1 { x(dup36(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 n1))) n0) n1) }

::std::data::List::new::2 { x(@sub(1 dup36(@lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 x(n1 x(tup(n2 tup(n3 n4)) n5))))) n0)) x(dup42(n6 n1) x(tup(@add(1 n2) tup(n3 tup(n6 n4))) n5))) }

::std::data::List::new::3 { x(_ x(_ x(n0 n0))) }

::std::data::List::concat { fn(tup(@add(n0 n1) tup(n2 n3)) fn(tup(n0 tup(n3 n4)) tup(n1 tup(n2 n4)))) }

::std::data::List::push_back { fn(ref(tup(@add(1 n0) tup(n1 tup(n2 n3))) tup(n0 tup(n1 n3))) fn(n2 _)) }

::std::data::Array::empty { tup(0 _) }

::std::data::Array::from_list { fn(tup(dup362(?(::std::data::Array::from_fn::3 ::std::data::Array::from_fn::2 x(n0 x(n1 x(fn(ref(tup(n2 n3) n3) n2) n4)))) n0) tup(dup363(_ n1) _)) n4) }

::std::data::Array::from_fn { fn(dup362(?(::std::data::Array::from_fn::3 ::std::data::Array::from_fn::2 x(n0 x(n1 x(n2 n3)))) n0) fn(ref(dup363(n4 n1) n4) fn(n2 n3))) }

::std::data::Array::from_fn::2 { x(dup368(dup715(@eq(1 ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(n0 x(n1 x(fn(n2 tup(n3 n4)) tup(n5 n6)))))) n0) dup368(dup521(?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(n7 dup488(?(::std::data::Array::push_front::3 ::std::data::Array::push_front::2 x(n8 x(ref(n9 n1) x(n10 _)))) dup488(n8 @add(1 _)))) x(ref(n6 n9) enum(::std::logical::Option::unwrap::3 enum(_ _))))) n7) n11)) x(n10 x(fn(ref(n2 n4) n3) tup(n11 n5)))) }

::std::data::Array::from_fn::3 { x(_ x(_ x(_ ::std::data::Array::empty))) }

::std::data::Array::len { fn(ref(tup(dup435(n0 n1) n2) tup(n1 n2)) n0) }

::std::data::Array::push_front { fn(ref(tup(dup488(?(::std::data::Array::push_front::3 ::std::data::Array::push_front::2 x(n0 x(ref(n1 n2) x(n3 _)))) dup488(n0 @add(1 n4))) n1) tup(n4 n2)) fn(n3 _)) }

::std::data::Array::push_front::2 { x(dup508(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(x(n0 ref(n1 tup(n2 n1))) n3))) n3) x(n0 x(n2 _))) }

::std::data::Array::push_front::3 { x(_ x(ref(_ n0) x(n0 _))) }

::std::data::Array::push_front::4 { x(n0 dup508(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(n0 n1))) n1)) }

::std::data::Array::push_front::5 { x(x(ref(tup(n0 n1) tup(n2 n0)) n3) @div(2 dup508(@lt$(1 ?(::std::data::Array::push_front::6 ::std::data::Array::push_front::5 x(x(ref(n1 n2) n3) n4))) n4))) }

::std::data::Array::push_front::6 { x(x(n0 n0) _) }

::std::data::Array::pop_back { fn(ref(tup(dup521(?(::std::data::Array::pop_back::3 ::std::data::Array::pop_back::2 x(x(n0 n1) x(ref(n2 n3) n4))) n0) n2) tup(n1 n3)) n4) }

::std::data::Array::pop_back::2 { x(x(dup526(@eq(1 ?(::std::data::Array::pop_back::5 ::std::data::Array::pop_back::4 x(x(n0 n1) n2))) n0) n1) n2) }

::std::data::Array::pop_back::3 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::data::Array::pop_back::4 { x(x(_ 0) x(ref(n0 _) enum(enum(n0 n1) enum(_ n1)))) }

::std::data::Array::pop_back::5 { x(x(dup537(dup543(@sub(1 @rem(2 dup545(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n1) x(x(n2 n3) x(n4 tup(n5 dup544(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n5 x(n6 x(n7 x(x(tup(n1 n3) n8) n9)))))) n6)))))) n7))) n4) @sub(1 n10)) n10) x(ref(tup(n0 n2) n8) n9)) }

::std::data::Array::pop_back::6 { x(ref(tup(n0 n1) n2) x(dup543(@sub(1 @rem(2 dup545(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n3) x(x(n1 n4) x(n5 tup(n6 dup544(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n6 x(n7 x(n8 x(x(tup(n3 n4) n2) n9)))))) n7)))))) n8))) n5) n9)) }

::std::data::Array::pop_back::8 { x(ref(n0 _) x(_ x(?(::std::data::Array::pop_back::12 ::std::data::Array::pop_back::11 x(n1 x(n2 n3))) x(x(tup(n1 n2) n3) enum(enum(n0 n4) enum(_ n4)))))) }

::std::data::Array::pop_back::9 { x(ref(tup(n0 n1) n2) x(dup543(@sub(1 @rem(2 dup545(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n3) x(x(n1 n4) x(n5 tup(n6 dup544(@eq(1 ?(::std::data::Array::pop_back::9 ::std::data::Array::pop_back::8 x(n6 x(n7 x(n8 x(x(tup(n3 n4) n2) n9)))))) n7)))))) n8))) n5) x(_ x(x(n10 n10) n9)))) }

::std::data::Array::pop_back::11 { x(n0 x(_ n0)) }

::std::data::Array::pop_back::12 { x(_ x(n0 n0)) }

::std::data::Array::pop_back::13 { x(n0 n0) }

::std::data::Array::Node::half { fn(ref(tup(n0 n1) tup(n2 n3)) fn(n4 fn(?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n4 n5)))) n5))) }

::std::data::Array::Node::half::2 { x(x(n0 n0) x(x(n1 n2) x(@div(2 n3) tup(ref(n1 n2) n3)))) }

::std::data::Array::Node::half::3 { x(x(n0 n1) x(x(n2 n2) x(@add(1 @div(2 n3)) tup(ref(n0 n1) n3)))) }

::std::data::Array::Node::unzip_with { fn(dup715(@eq(1 ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(n0 x(n1 x(n2 n3))))) n0) fn(n1 fn(n2 n3))) }

::std::data::Array::Node::unzip_with::2 { x(_ x(n0 x(fn(n0 tup(n1 n2)) tup(n1 n2)))) }

::std::data::Array::Node::unzip_with::3 { x(dup726(@add(1 @div(2 dup715(@eq(1 ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(n0 x(n1 x(n2 tup(n3 n4)))))) n0))) @div(2 dup715(@eq(1 ?(::std::data::Array::Node::unzip_with::3 ::std::data::Array::Node::unzip_with::2 x(n5 x(n6 x(n7 tup(n8 n9)))))) n5))) x(tup(n1 n6) x(dup728(n2 n7) tup(tup(n3 n8) tup(n4 n9))))) }

::std::logical::Option::unwrap { fn(enum(::std::logical::Option::unwrap::3 enum(_ n0)) n0) }

::std::logical::Option::unwrap::3 { enum(n0 n0) }

::std::IO::println { fn(ref(n0 n1) fn(tup(dup2181(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print { fn(ref(n0 n1) fn(tup(dup2181(?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 n1) x(n2 n3))) n2) tup(n3 _)) _)) }

::std::IO::print::1 { x(n0 x(dup2181(?(::std::IO::print::3 ::std::IO::print::2 x(n0 x(n1 n2))) n1) n2)) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@sub(1 dup2181(?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4))) n3)) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

