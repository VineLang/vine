
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::main { ::segmented_sieve::main }

::segmented_sieve::main {
  fn(ref(w1 w29) _)
  ::std::numeric::N32::sqrt = fn(1000000 dup5(w7 w21))
  ::std::numeric::N32::sub::sub = fn(w7 fn(1 w8))
  ::std::data::Array::new = fn(w8 fn(1 w9))
  ::segmented_sieve::main::1 = x(x(w1 w24) x(x(w21 w22) x(w9 x(x(2 w19) x(tup(0 tup(w15 w15)) w17)))))
  ::segmented_sieve::main::12 = x(x(w24 w29) x(w22 x(w19 w17)))
}

::segmented_sieve::main::1 { x(n0 x(n1 x(tup(dup608(n2 @n32_eq(0 ?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(n2 n3) x(ref(n4 n5) enum(::segmented_sieve::main::4 enum(::segmented_sieve::main::5 x(n0 x(n1 x(tup(n3 n5) n6)))))))))) n4) n6))) }

::segmented_sieve::main::4 { enum(?(::segmented_sieve::main::8 ::segmented_sieve::main::7 x(x(n0 n1) x(x(n2 n3) x(x(n4 tup(dup608(n5 @n32_eq(0 ?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(n5 n6) x(ref(n7 n8) enum(::segmented_sieve::main::4 enum(::segmented_sieve::main::5 x(x(n1 n9) x(x(n3 n10) x(tup(n6 n8) x(x(n11 n12) x(n13 n14)))))))))))) n7)) x(n15 x(x(n16 n13) x(n17 _))))))) x(x(n0 n9) x(x(n2 n10) x(n4 x(x(dup34(n17 @n32_add(1 dup35(n15 n11))) n12) x(n16 n14)))))) }

::segmented_sieve::main::5 { x(x(n0 n0) x(x(n1 n1) x(_ x(x(n2 n2) x(n3 n3))))) }

::segmented_sieve::main::7 { x(x(n0 n1) x(x(dup221(n2 n3) n4) x(n5 x(n6 x(x(tup(@n32_add(1 n7) tup(n8 tup(n9 n10))) tup(n7 tup(n8 n10))) x(dup56(dup189(n11 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n11 tup(dup189(n12 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n12 n13))))) tup(n13 _)))))) dup56(n9 dup56(@n32_mul(n14 dup220(n15 @n32_le(n3 ?(::segmented_sieve::main::11 ::segmented_sieve::main::10 x(x(n2 n4) x(n5 x(n6 x(n16 n15)))))))) dup56(n14 n16)))) _)))))) }

::segmented_sieve::main::8 { x(x(n0 n0) x(x(n1 n1) x(x(n2 n2) x(_ x(x(n3 n3) _))))) }

::segmented_sieve::main::10 { x(x(dup221(n0 n1) n2) x(x(tup(dup670(n3 dup226(n4 @n32_lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n5 n6) ref(_ 0)) x(n7 n4)))))) n5) n8) x(dup77(n9 n10) x(dup78(n11 n12) dup79(@n32_sub(n9 n7) @n32_add(n11 dup220(n13 @n32_le(n1 ?(::segmented_sieve::main::11 ::segmented_sieve::main::10 x(x(n0 n2) x(x(tup(n3 n6) n8) x(n10 x(n12 n13))))))))))))) }

::segmented_sieve::main::11 { x(x(n0 n0) x(x(n1 n1) _)) }

::segmented_sieve::main::12 { x(n0 x(n1 x(dup225(n2 @n32_lt(1000000 ?(::segmented_sieve::main::14 ::segmented_sieve::main::13 x(n0 x(n1 x(n2 n3)))))) n3))) }

::segmented_sieve::main::13 { x(x(n0 n1) x(dup92(n2 dup92(n3 n4)) x(dup93(@n32_add(n2 dup225(n5 @n32_lt(1000000 ?(::std::numeric::N32::min::3 ::std::numeric::N32::min::2 x(n5 x(1000000 dup96(@n32_sub(n6 dup561(n7 dup608(n8 @n32_eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n8 x(1 n9))))))) n10))))))) dup93(n6 dup93(n11 dup93(n12 @n32_add(n3 dup225(n13 @n32_lt(1000000 ?(::segmented_sieve::main::14 ::segmented_sieve::main::13 x(x(n14 n1) x(n4 x(n13 n15))))))))))) dup95(tup(dup189(n16 @n32_ne(0 ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n16 n17) x(x(n18 n19) enum(::segmented_sieve::main::18 enum(::segmented_sieve::main::19 x(n11 x(n10 x(x(tup(n7 n9) tup(dup608(n20 @n32_eq(0 ?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(n20 n21) x(ref(n22 n23) enum(::segmented_sieve::main::26 enum(::segmented_sieve::main::27 x(x(n0 n14) x(tup(n21 n23) n12))))))))) n22)) tup(n17 n19))))))))))) tup(n18 _)) n15)))) }

::segmented_sieve::main::14 { x(x(n0 n0) _) }

::segmented_sieve::main::18 { enum(dup116(@n32_mul(n0 dup226(n1 n2)) dup116(n0 dup116(n3 dup116(n4 n5)))) x(dup109(@n32_sub(1 @n32_div(n3 @n32_add(1 @n32_mul(n4 dup225(n6 @n32_lt(n2 ?(::std::numeric::N32::max::3 ::std::numeric::N32::max::2 x(n1 x(n6 dup225(n7 @n32_lt(n8 ?(::segmented_sieve::main::22 ::segmented_sieve::main::21 x(n9 x(x(n10 n11) x(x(n12 n13) x(n5 n7)))))))))))))))) dup109(n9 n14)) x(dup226(n10 n8) x(x(n12 n15) tup(dup189(n16 @n32_ne(0 ?(::std::data::List::IntoIter::next::3 ::std::data::List::IntoIter::next::2 x(x(n16 n17) x(x(n18 n19) enum(::segmented_sieve::main::18 enum(::segmented_sieve::main::19 x(n14 x(n11 x(x(n13 n15) tup(n17 n19))))))))))) n18))))) }

::segmented_sieve::main::19 { x(_ x(_ x(x(n0 n0) _))) }

::segmented_sieve::main::21 { x(dup129(n0 n1) x(x(dup226(n2 n3) n4) x(x(tup(dup670(n5 dup226(n6 @n32_lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(ref(n7 n8) ref(_ 0)) x(n9 n6)))))) n7) n10) x(dup135(n11 n12) dup136(@n32_sub(n0 n9) @n32_add(n11 dup225(n13 @n32_lt(n3 ?(::segmented_sieve::main::22 ::segmented_sieve::main::21 x(n1 x(x(n2 n4) x(x(tup(n5 n8) n10) x(n12 n13))))))))))))) }

::segmented_sieve::main::22 { x(_ x(x(n0 n0) x(x(n1 n1) _))) }

::segmented_sieve::main::26 { enum(?(::segmented_sieve::main::30 ::segmented_sieve::main::29 x(x(n0 n1) x(n2 _))) x(x(n0 n3) x(tup(dup608(n4 @n32_eq(0 ?(::std::data::Array::pop_front::3 ::std::data::Array::pop_front::2 x(x(n4 n5) x(ref(n6 n7) enum(::segmented_sieve::main::26 enum(::segmented_sieve::main::27 x(x(n1 n3) x(tup(n5 n7) n8))))))))) n6) dup150(n2 @n32_add(1 n8))))) }

::segmented_sieve::main::27 { x(x(n0 n0) _) }

::segmented_sieve::main::29 { x(x(n0 n1) x(dup189(n2 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n2 tup(dup189(n3 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n0 @io_print_char(10 n1)) x(n3 n4))))) tup(n4 _)))))) _)) }

::segmented_sieve::main::30 { x(x(n0 n0) _) }

::std::numeric::N32::sub::sub { fn(@n32_sub(n0 n1) fn(n0 n1)) }

::std::numeric::N32::to_string::to_string::2 { x(dup189(n0 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))))) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::5 { x(dup183(@n32_rem(10 @n32_add$(48 n0)) @n32_div(10 dup189(n1 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))))))) x(tup(@n32_add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::data::List::IntoIter::next::2 { x(x(@n32_sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::IntoIter::next::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::Array::new { fn(dup561(n0 dup608(n1 @n32_eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n1 x(n2 n3)))))) fn(n2 tup(n0 n3))) }

::std::data::Array::get::2 { x(x(ref(tup(n0 n1) tup(n2 n3)) n4) x(dup685(@n32_rem(2 dup608(_ @n32_eq(0 ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n5 tup(n6 dup226(n7 @n32_lt$(1 ?(::std::data::Array::get::3 ::std::data::Array::get::2 x(x(n6 n4) x(n8 n7))))))))))))) @n32_div(2 n8)) n5)) }

::std::data::Array::get::3 { x(x(n0 n0) _) }

::std::data::Array::pop_front::2 { x(x(n0 n0) x(_ ::std::logical::Option::None)) }

::std::data::Array::pop_front::3 { x(x(dup608(n0 @n32_eq(1 ?(::std::data::Array::pop_front::5 ::std::data::Array::pop_front::4 x(x(n0 n1) n2)))) n1) n2) }

::std::data::Array::pop_front::4 { x(x(_ 0) x(ref(n0 _) enum(enum(n0 n1) enum(_ n1)))) }

::std::data::Array::pop_front::5 { x(x(dup836(@n32_add(1 @n32_div(2 dup608(n0 @n32_eq(1 ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(n1 n2) x(n0 x(x(tup(n3 n2) n4) x(x(n5 n3) n6))))))))) @n32_sub(1 n7)) n7) x(ref(tup(n1 n5) n4) n6)) }

::std::data::Array::pop_front::8 { x(ref(n0 _) x(_ x(x(_ n1) x(x(n1 _) enum(enum(n0 n2) enum(_ n2)))))) }

::std::data::Array::pop_front::9 { x(ref(tup(n0 n1) n2) x(@n32_add(1 @n32_div(2 dup608(n3 @n32_eq(1 ?(::std::data::Array::pop_front::9 ::std::data::Array::pop_front::8 x(ref(n0 n4) x(n3 x(x(tup(n5 n4) n2) x(x(n1 n5) n6))))))))) x(x(n7 n7) x(x(n8 n8) n6)))) }

::std::data::Array::Node::new::2 { x(_ x(n0 n0)) }

::std::data::Array::Node::new::3 { x(dup885(@n32_add(1 @n32_div(2 dup608(n0 @n32_eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n0 x(n1 n2))))))) @n32_div(2 dup608(n3 @n32_eq(1 ?(::std::data::Array::Node::new::3 ::std::data::Array::Node::new::2 x(n3 x(n4 n5))))))) x(dup886(n1 n4) tup(n2 n5))) }

::std::data::Array::Node::half::2 { x(x(n0 n1) x(x(n2 n2) x(@n32_add(1 @n32_div(2 n3)) tup(ref(n0 n1) n3)))) }

::std::data::Array::Node::half::3 { x(x(n0 n0) x(x(n1 n2) x(@n32_div(2 n3) tup(ref(n1 n2) n3)))) }

::std::numeric::N32::min::2 { x(n0 x(_ n0)) }

::std::numeric::N32::min::3 { x(_ x(n0 n0)) }

::std::numeric::N32::max::2 { x(n0 x(_ n0)) }

::std::numeric::N32::max::3 { x(_ x(n0 n0)) }

::std::numeric::N32::sqrt {
  fn(w0 w8)
  ::std::numeric::N32::sqrt::1 = x(w0 x(32768 x(0 w8)))
}

::std::numeric::N32::sqrt::1 { x(n0 x(dup189(n1 @n32_ne(0 ?(::std::numeric::N32::sqrt::3 ::std::numeric::N32::sqrt::2 x(n0 x(n1 n2))))) n2)) }

::std::numeric::N32::sqrt::2 { x(dup221(n0 n1) x(dup2024(n2 @n32_shr(1 dup189(n3 @n32_ne(0 ?(::std::numeric::N32::sqrt::3 ::std::numeric::N32::sqrt::2 x(n0 x(n3 x(n4 n5)))))))) x(dup2027(@n32_add(n2 dup2029(@n32_mul(n6 dup220(_ @n32_le(n1 ?(::std::numeric::N32::sqrt::6 ::std::numeric::N32::sqrt::5 x(x(n7 n4) x(n8 _)))))) dup2029(n6 n8))) n7) n5))) }

::std::numeric::N32::sqrt::3 { x(_ x(_ x(n0 n0))) }

::std::numeric::N32::sqrt::5 { x(x(_ n0) x(n0 _)) }

::std::numeric::N32::sqrt::6 { x(x(n0 n0) _) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@n32_sub(1 dup189(n3 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4)))))) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

