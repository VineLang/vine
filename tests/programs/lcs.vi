
use std::{ops::comparison::Eq, rng::Pcg32};

pub fn main(&io: &IO) {
  let x = [];
  let y = [];
  let rng = Pcg32::default;
  for _ in 0..2000 {
    x.push_back(rng.gen_n32() & 255);
    y.push_back(rng.gen_n32() & 255);
  }
  io.println("{lcs(x, y)}");
}

pub fn lcs[T*; Eq[T]](a: List[T], b: List[T]) -> N32 {
  if a.len() == 0 || b.len() == 0 {
    return 0;
  }

  let row = List::new(b.len(), 0);
  for a_elem in a.into_iter() {
    let prev_row_entry = 0;
    let prev_new_entry = 0;
    let new_row = [];
    for b_elem in b.into_iter() {
      let row_entry = row.pop_front().unwrap();
      let new_entry = if a_elem == b_elem {
        prev_row_entry + 1
      } else {
        row_entry.max(prev_new_entry)
      };
      prev_row_entry = row_entry;
      prev_new_entry = new_entry;
      new_row.push_back(new_entry);
    }
    row = new_row;
  }

  row.get(b.len() - 1).unwrap()
}
