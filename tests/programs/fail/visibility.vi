
mod lib {
  fn a() { fn b() {} }
  pub mod a { pub fn c() {} }
  use a::c;

  pub fn d() {}
  mod d { pub fn e() {} }
  pub mod d { pub fn f() {} pub fn g() {} }
  pub use d::{e, f};

  struct x();
  pub mod x {}
  struct y();
}

// bad: ~1 error per line
fn main(&io: &IO) {
  io.read_char();
  let lib::x: lib::x = lib::x;
  let lib::y: lib::y = lib::y;
  pub fn x() {}
}

mod p {
  pub(main) use lib::{
    a::b,
    c,
    d::e,
  };
}

use visibility::circular;

// good
mod q {
  const x: fn() = lib::d;
  pub(visibility) use lib::{
    a::c,
    d,
    e,
    f,
    d::g,
  };
}
